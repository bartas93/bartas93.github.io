<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bartas93.github.io/blog</id>
    <title>Bartosz Jabłoński - IT Blog and Travel Blog</title>
    <updated>2024-05-16T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://bartas93.github.io/blog"/>
    <subtitle>Bartosz Jabłoński - IT Blog and Travel Blog</subtitle>
    <icon>https://bartas93.github.io/images/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Checking memory alocation of Objects - JOL library (Java Object Layout)]]></title>
        <id>jvm-memory-allocation-of-objects</id>
        <link href="https://bartas93.github.io/blog/jvm-memory-allocation-of-objects"/>
        <updated>2024-05-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[- Each object has memory overhead (from 12 to 16 bytes for metadata headers, references (4 bytes), memory for simple data type.]]></summary>
        <content type="html"><![CDATA[<ul><li>Each object has memory overhead (from 12 to 16 bytes for metadata headers, references (4 bytes), memory for simple data type.</li><li>Processors (CPU) can be 32 bit (4 byte - supporting a maximum of 4 GB RAM) or 64 bit (8 byte). This means that the CPU downloads data from RAM in batches of 4 or 8 bytes at a time.</li><li>Padding - alignment to 8 bytes - i.e. objects occupy memory equal to a multiple of 8 bytes. This can be increased because it limits the use of the maximum heap to 32 GB.</li><li>The reference takes 4 bytes (32bit CPU or 64bit CPU with Compressed References (default)) or 8 bytes (64bit CPU).<ul><li>Maximum heap for Compressed References = 32 GB - use of bit shift by 3 places due to the fact that the 8 byte always has three zeros on the right side. (8 byte because it is aligned to 8 byte padding). Therefore we can use 32 GB heap instead of 4 GB.</li><li>When we use a 64-bit CPU with Compressed References and increase the heap memory above 32 GB, we may have problems with the application and a significant increase in the heap occupied due to the change in reference memory from 4 bytes to 8 bytes for every object on our heap- e.g. a change from -Xmx31g to -Xmx33g may result in an increase in data seizure by 40% (depending on the data)</li></ul></li></ul><h1>Configuration</h1><p>To check what the memory layout looks like, we will use the library:</p><div class="language-xml codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-xml codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">dependency</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">groupId</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">org.openjdk.jol</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">groupId</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">artifactId</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">jol-core</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">artifactId</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">version</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">0.10</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">version</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">dependency</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Jol is a toolbox for analyzing the layout of objects in the JVM. These tools use (to decode the actual layout of an object, its memory footprint (footprint) and references). Jol uses tools such as:</p><ul><li>Unsafe</li><li>JVMTI</li><li>Serviceability Agent (SA)</li></ul><h1>Available methods</h1><h2 class="anchor anchorWithStickyNavbar_rv3c" id="vm-details---vmcurrentdetails---basic-data-related-to-our-jvm">VM Details - <code>VM.current().details()</code> - Basic data related to our JVM<a class="hash-link" href="#vm-details---vmcurrentdetails---basic-data-related-to-our-jvm" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-text codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Running 64-bit HotSpot VM.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Using compressed oop with 3-bit shift.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Using compressed klass with 3-bit shift.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># WARNING | Compressed references base/shifts are guessed by the experiment!</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># WARNING | Therefore, computed addresses are just guesses, and ARE NOT RELIABLE.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># WARNING | Make sure to attach Serviceability Agent to get the reliable addresses.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Objects are 8 bytes aligned.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol><li><p>We run our program on the <strong>64</strong> bit version of <strong>JVM – HotSpot</strong></p></li><li><p><code>Using compressed oop with 3-bit shift.</code> - <a href="#compressed-vs-uncompressed-references">more info</a></p></li><li><p><code>Using compressed classes with 3-bit shift.</code> - <a href="#compressed-vs-uncompressed-references">more info</a></p></li><li><p><code>Objects are 8 bytes aligned.</code> - Objects will be aligned to <strong>8</strong> bytes - this means that each object, even if it should occupy 20 bytes, will still occupy a multiple of 8 bytes, i.e. in this case 24 bytes. It always goes up to a multiple of 8 bytes.</p></li><li><p>Why?
Processors are 32 or 64 bit (32 bit CPU can use max 4 GB of memory) . That is, 4 or 8 rooms. Which means that they read (from the memory register via an external bus) 4 or 8 memory bytes at a time. The CPU does not fetch individual bits or entities. Delivers in parcels. This is because the CPU (e.g. 3GHz) is faster than the memory (400MHz). Taking advantage of the fact that the CPU is faster, we download data in batches. To make this data extraction easier (and faster), the JVM groups this data into 8 bytes for a 64-bit machine (which is most modern ones).</p></li><li><p>This can be changed with the JVM flag: <code>-XX:ObjectAlignmentInBytes=16</code> (Available values 8,16,32,64,128,256, otherwise the JVM will throw an error and will not run the application). A flag that will cause most objects to take up much more unused memory. The advantage of this solution is that we can then use 64 GB Heap with compressed references.</p></li><li><p>Next, the type sizes in our JVM are shown</p></li><li><p>Object reference: 4 bytes - in this case, the Compressed References flag is enabled by default - therefore, in a 64-bit JVM, the reference takes up 4 bytes and not 8 bytes as it should. To make it take up 8 bytes, you need to run the JVM with the flag: <em><code>XX:-UseCompressedOops</code></em></p><p>Additionally, remember that 4 bytes is 32 bits, i.e. 2^32 possible unique reference addresses to be saved - but we use 3 bit shifting</p></li><li><p>boolean and byte: 1 byte</p></li><li><p>short and char: 2bytes</p></li><li><p>int and float: 4 bytes</p></li><li><p>long and double 8 bytes</p></li></ol><h2 class="anchor anchorWithStickyNavbar_rv3c" id="types-of-memory-usage-determinations">Types of memory usage determinations:<a class="hash-link" href="#types-of-memory-usage-determinations" title="Direct link to heading">​</a></h2><ul><li>Shallow size - what the ClassLayout tells us</li><li>Deep size - what the footprint tells us</li><li>Retained size - what slows down the GC - e.g. these sizes are shown in heapdump</li></ul><p><img loading="lazy" alt="Size types" src="/assets/images/size-types-0b6e945e9f03b350461559386c49bd83.png" width="904" height="393" class="img_zkUv"></p><p>In the above example - Retained size is the memory freed after removing the Triple reference - only Ai + Ci is freed and Bi is used by Pair. These additional references complicate the retained size. Retained size is always between shallow and deep size.</p><h2 class="anchor anchorWithStickyNavbar_rv3c" id="class-layout---classlayout-shallow-size">Class layout - ClassLayout (shallow size)<a class="hash-link" href="#class-layout---classlayout-shallow-size" title="Direct link to heading">​</a></h2><p><code>ClassLayout.parseClass(Basket.class).toPrintable(b1))</code></p><p>All objects store data of a base type. They have their own additional memory overhead (metadata). The class layout shows us how many bytes the headers take up, how much simple type fields of a given class take up, how much references to other sub-objects take up (but it does not show how much memory a sub-object takes up). Additionally, it shows the offset (e.g. 4 bytes external) - that is, an offset to 8 bytes (padding)</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@Data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@AllArgsConstructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">ExampleClass</span><span class="token plain"> b1 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1232132</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">123</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-text codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">com.example.demo.ExampleClass object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0     4        (object header)                           01 ed d3 b0 (00000001 11101101 11010011 10110000) (-1328288511)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      4     4        (object header)                           6f 00 00 00 (01101111 00000000 00000000 00000000) (111)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      8     4        (object header)                           78 f2 01 01 (01111000 11110010 00000001 00000001) (16904824)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     4    int ExampleClass.a                            1232132</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     16     4    int ExampleClass.b                            123</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     20     4        (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Instance size: 24 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Space losses: 0 bytes internal + 4 bytes external = 4 bytes total</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_rv3c" id="metadata"><strong>Metadata:</strong><a class="hash-link" href="#metadata" title="Direct link to heading">​</a></h3><ul><li><p>headers:</p><ul><li><p>flags (0→4 bytes) (mark word) - store information about the state of the object. Among other things, the shape of the object, i.e. whether it is a class or an array and hash code and the number of GC survivals to be promoted to OldGeneration- 4 bytes</p></li><li><p>lock (4→8 bytes) (mark word) - monitor that will be used for mutexes - 4 bytes</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Lock</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Lock</span><span class="token plain"> lock </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">Lock</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Lock object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      0     4        (object header)                           01 00 00 00 </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      4     4        (object header)                           00 **00** 00 00</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      8     4        (object header)                           85 23 02 f8</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     12     4        (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Instance size: 16 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">synchronized</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">lock</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">lock</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Pierwszy header się zmienił ponieważ przeliczony został domyślny hashCode()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Drugi header się zmienił ze względu na lock!</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Lock object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      0     4        (object header)                           f0 78 12 03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      4     4        (object header)                           00 **70** 00 00</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      8     4        (object header)                           85 23 02 f8</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     12     4        (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>class (8→12 bytes) (class word) - pointer to the type in our case 4 bytes</p></li><li><p>array size (4 byte) - the size of the array (this value is present only for array types) - in the example above it is not there</p></li></ul><p>More information about headers: OOPs - Ordinary Object Pointers</p></li><li><p>Data</p><ul><li>class fields - the rest of the bytes in our example 2x4 bytes for int fields.</li></ul></li><li><p>optional shift to 8 bytes (in in our case 4 bytes of offset)</p></li></ul><h2 class="anchor anchorWithStickyNavbar_rv3c" id="footprint-deep-size">Footprint (Deep size)<a class="hash-link" href="#footprint-deep-size" title="Direct link to heading">​</a></h2><p>If we have any references to other objects in our analyzed object, the ClassLayout will only show an additional 4 bytes per reference (It will not take into account the content of the object we are referring to) - in this case, it is worth using FootPrint which will show how much memory the entire object takes up, including the object inside .</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@Data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@AllArgsConstructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token class-name">InnerClass</span><span class="token plain"> d</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@Data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@AllArgsConstructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">InnerClass</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">ExampleClass</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">InnerClass</span><span class="token plain"> inner </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">InnerClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">12</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">ExampleClass</span><span class="token plain"> b1 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1232132</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">123</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token number">111</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> inner</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ExampleClass</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">InnerClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">inner</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">### </span><span class="token constant" style="color:rgb(189, 147, 249)">FOOTPRINT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name namespace">com</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">example</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">demo</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">ExampleClass</span><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@6dde5c8cd</span><span class="token plain"> footprint</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token constant" style="color:rgb(189, 147, 249)">COUNT</span><span class="token plain">       </span><span class="token constant" style="color:rgb(189, 147, 249)">AVG</span><span class="token plain">       </span><span class="token constant" style="color:rgb(189, 147, 249)">SUM</span><span class="token plain">   </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         </span><span class="token number">1</span><span class="token plain">        </span><span class="token number">32</span><span class="token plain">        </span><span class="token number">32</span><span class="token plain">   </span><span class="token class-name namespace">com</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">example</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">demo</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">ExampleClass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         </span><span class="token number">1</span><span class="token plain">        </span><span class="token number">24</span><span class="token plain">        </span><span class="token number">24</span><span class="token plain">   </span><span class="token class-name namespace">com</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">example</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">demo</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">ExampleClass</span><span class="token plain">$</span><span class="token class-name">InnerClass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         </span><span class="token number">2</span><span class="token plain">                  </span><span class="token number">56</span><span class="token plain">   </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">total</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">### </span><span class="token constant" style="color:rgb(189, 147, 249)">CLASSLAYOUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name namespace">com</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">example</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">demo</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">ExampleClass</span><span class="token plain"> object internals</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">OFFSET</span><span class="token plain">  </span><span class="token constant" style="color:rgb(189, 147, 249)">SIZE</span><span class="token plain">                                       </span><span class="token constant" style="color:rgb(189, 147, 249)">TYPE</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain">                               </span><span class="token constant" style="color:rgb(189, 147, 249)">VALUE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">0</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">8</span><span class="token plain">c </span><span class="token number">5</span><span class="token plain">c de </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">10001100</span><span class="token plain"> </span><span class="token number">01011100</span><span class="token plain"> </span><span class="token number">11011110</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">-</span><span class="token number">564360191</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">4</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">6d</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">01101101</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">109</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">8</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           a0 f4 </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">01</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10100000</span><span class="token plain"> </span><span class="token number">11110100</span><span class="token plain"> </span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">00000001</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">16905376</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">12</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">a                            </span><span class="token number">1232132</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">16</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">b                            </span><span class="token number">123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">20</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">c                            </span><span class="token number">111</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">24</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">   </span><span class="token class-name namespace">com</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">example</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">demo</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">ExampleClass</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">InnerClass</span><span class="token plain"> </span><span class="token class-name">ExampleClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">d                            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">28</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">                                            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">loss due </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token namespace">the</span><span class="token plain"> next object alignment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Instance</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">32</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Space</span><span class="token plain"> losses</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"> bytes internal </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">4</span><span class="token plain"> bytes external </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">4</span><span class="token plain"> bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name namespace">com</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">example</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">demo</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">ExampleClass</span><span class="token plain">$</span><span class="token class-name">InnerClass</span><span class="token plain"> object internals</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">OFFSET</span><span class="token plain">  </span><span class="token constant" style="color:rgb(189, 147, 249)">SIZE</span><span class="token plain">   </span><span class="token constant" style="color:rgb(189, 147, 249)">TYPE</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain">                               </span><span class="token constant" style="color:rgb(189, 147, 249)">VALUE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">0</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">5</span><span class="token plain">b </span><span class="token number">3</span><span class="token plain">e </span><span class="token number">5</span><span class="token plain">b </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">01011011</span><span class="token plain"> </span><span class="token number">00111110</span><span class="token plain"> </span><span class="token number">01011011</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1530813185</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">4</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">8</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">78</span><span class="token plain"> f2 </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">01</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">01111000</span><span class="token plain"> </span><span class="token number">11110010</span><span class="token plain"> </span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">00000001</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">16904824</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">12</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> </span><span class="token class-name">InnerClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">a                              </span><span class="token number">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">16</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> </span><span class="token class-name">InnerClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">b                              </span><span class="token number">12</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">20</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">loss due </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token namespace">the</span><span class="token plain"> next object alignment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Instance</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">24</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Space</span><span class="token plain"> losses</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"> bytes internal </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">4</span><span class="token plain"> bytes external </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">4</span><span class="token plain"> bytes total</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Above we have a comparison of Footprint and ClassLayout. In Footprint we see exactly how many bytes the object and its sub-objects occupy (56 bytes). And in ClassLayout we only see an overview of a given class without any sub-objects (32 bytes and 24 bytes).</p><p>Let's break down the footprint to make it even clearer:</p><p>56 bytes consists of:
ExampleClass: 12 bytes for metadata + 3x 4 bytes for int + 4 bytes for references = 28 bytes
28 bytes + 4 bytes (8 byte alignment) = <strong>32 bytes</strong>
InnerClass: 12 bytes for metadata + 2x 4 bytes for inte = 20 bytes - it is not a multiple of 8 bytes (alignment), so: 20 bytes + 4 bytes = 24 bytes.</p><h2 class="anchor anchorWithStickyNavbar_rv3c" id="compressed-vs-uncompressed-references">Compressed vs Uncompressed References<a class="hash-link" href="#compressed-vs-uncompressed-references" title="Direct link to heading">​</a></h2><p>Due to the fact that it is aligned to multiples of 8 bytes, we can use an interesting property of writing such numbers in binary form. All multiples of 8 in binary form end with a minimum of three zeros (on the right). Knowing this regularity, JVM programmers took advantage of this property by shifting it 3 bits to the left, which gives us an additional 3 bits to write memory addresses. Which increases the range from 2^32~4GB to 2^(32+3)~32GB.</p><p><strong>This allows for more than 4GB of heap space with 32-bit references on 64-bit machines!</strong></p><p><img loading="lazy" alt="Bit shifting" src="/assets/images/bit-shifting-68ac0bba76cdaf64ccf1111856163eca.png" width="841" height="232" class="img_zkUv"></p><p>By default, reference compression is enabled. This means that the class word takes 4 entities and each reference takes 4 entities. Such settings have a limit of <strong>32 GB heap.</strong> When we use more than 32 GB heap, compression is automatically turned off. Alternatively, we can manually disable reference compression via <em><code>-XX:-UseCompressedOops</code>- where this setting disables reference compression and then the reference size is 8 bytes.</em></p><h3 class="anchor anchorWithStickyNavbar_rv3c" id="above-32-gb">Above 32 GB<a class="hash-link" href="#above-32-gb" title="Direct link to heading">​</a></h3><p>If we want to use more than 32 GB of heap and we want to use compressed reference:</p><ol><li>This can be changed with the JVM flag: <code>-XX:ObjectAlignmentInBytes=16</code> (Available values 8,16,32,64,128,256, otherwise the JVM will throw an error and will not run the application). A flag that will cause most objects to take up much more unused memory. The advantage of this solution is that we can then use 64 GB Heap with compressed references.*</li></ol><p>Formula for maximum heap size: 4GB * ObjectAlignmentInBytes. - but remember that allignments increases for each existing object which consequently increases the size of each object. It won't always pay off.</p><h2 class="anchor anchorWithStickyNavbar_rv3c" id="what-is-paddingalligment-gap-internal-space-losses">What is padding/alligment gap (internal space losses)<a class="hash-link" href="#what-is-paddingalligment-gap-internal-space-losses" title="Direct link to heading">​</a></h2><p>Byte padding to a multiple of 8 bytes can take 2 forms</p><ul><li>internal space losses</li><li>external space losses</li></ul><p>The processor retrieves data 8 bytes at a time. To make it easier to download data, we make shifts. An example of making it easier to retrieve data from internal space losses - the JVM flag <em><code>-XX:ObjectAlignmentInBytes=16</code></em> was used to make the example easier:</p><div class="codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-text codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">SimpleLong object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0    12        (object header)                           N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     4        (alignment/padding gap)                  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     16     8   long SimpleLong.state                          N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     24     8        (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Instance size: 32 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Space losses: 4 bytes internal + 8 bytes external = 12 bytes total</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After 12 bytes related to the header, an internal alignment/padding gap = 4 bytes was added. so that extracting the long takes place in one CPU process. (so that the long variable is at offset 16)</p><h2 class="anchor anchorWithStickyNavbar_rv3c" id="field-packing---packing-of-fields">Field Packing - Packing of fields<a class="hash-link" href="#field-packing---packing-of-fields" title="Direct link to heading">​</a></h2><p>The order in which fields are packed in memory is determined by the JVM, not the declaration of fields in the class implementation. This is to make it easier to condense multiples of 8 bytes so that, for example, an int is not split into 2 data extracts of 8 bytes each.</p><div class="codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-text codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">public class FieldsArrangement {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private boolean first;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private char second;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private double third;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private int fourth;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private boolean fifth;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">...</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0    12           (object header)                           N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     4       int FieldsArrangement.fourth                  N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     16     8    double FieldsArrangement.third                   N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     24     2      char FieldsArrangement.second                  N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     26     1   boolean FieldsArrangement.first                   N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     27     1   boolean FieldsArrangement.fifth                   N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     28     4           (loss due to the next object alignment)</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Other examples - Checking memory size for objects</h1><h3 class="anchor anchorWithStickyNavbar_rv3c" id="array">Array:<a class="hash-link" href="#array" title="Direct link to heading">​</a></h3><ul><li><p>Array of booleans</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> booleans </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">booleans</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">booleans</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* Output</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">[Z object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      0     4           (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      4     4           (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      8     4           (object header)                           00 1b 00 00 (00000000 00011011 00000000 00000000) (6912)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     12     4           (object header)                           03 00 00 00 (00000011 00000000 00000000 00000000) (3)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     16     3   boolean [Z.&lt;elements&gt;                             N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     19     5           (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Instance size: 24 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Space losses: 0 bytes internal + 5 bytes external = 5 bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="display:inline-block;color:rgb(98, 114, 164)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">[Z@1068e947d footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        24        24   [Z</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1                  24   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Array of ints</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> ints </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ints</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">ints</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* Output</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">[I object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      0     4        (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      4     4        (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">      8     4        (object header)                           a0 26 00 00 (10100000 00100110 00000000 00000000) (9888)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     12     4        (object header)                           04 00 00 00 (00000100 00000000 00000000 00000000) (4)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     16    16    int [I.&lt;elements&gt;                             N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Instance size: 32 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">Space losses: 0 bytes internal + 0 bytes external = 0 bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="display:inline-block;color:rgb(98, 114, 164)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">[I@5f71c76ad footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        32        32   [I</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1                  32   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>ArrayList:</p></li></ul><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token class-name">ArrayList</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token generics class-name">Integer</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> integers </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">ArrayList</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">integers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">java.util.ArrayList@185a6e9d footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        16        16   [Ljava.lang.Object;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        24        24   java.util.ArrayList</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         2                  40   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> i</span><span class="token operator">&lt;</span><span class="token number">100000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> i</span><span class="token operator">++</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            integers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">integers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">//output:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">java.util.ArrayList@185a6e9d footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1    426856    426856   [Ljava.lang.Object;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">    100000        16   1600000   java.lang.Integer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        24        24   java.util.ArrayList</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">    100002             2026880   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2,026,880 bytes = 2mb 27kb for 100,000 ints. (100,000 * 4=400,000 bytes.)
When we initialize the initial capacity of ArrayList, the memory value is smaller by 26880 bytes (26kb)</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token class-name">ArrayList</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token generics class-name">Integer</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> integers </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">ArrayList</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">100000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">integers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">java.util.ArrayList@179ece50d footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1    400016    400016   [Ljava.lang.Object;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        24        24   java.util.ArrayList</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         2              400040   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> i</span><span class="token operator">&lt;</span><span class="token number">100000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> i</span><span class="token operator">++</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            integers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">integers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">java.util.ArrayList@179ece50d footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1    400016    400016   [Ljava.lang.Object;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">    100000        16   1600000   java.lang.Integer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">         1        24        24   java.util.ArrayList</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">    100002             2000040   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><p>Boolean Wrapper class</p><ul><li>Boolean 16 bytes - details below:</li></ul><p>line of code: <code>System.*out*.println(ClassLayout.*parseClass*(Boolean.class).toPrintable());</code></p><p>Output:</p><div class="codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-text codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># WARNING: Unable to attach Serviceability Agent. sun.jvm.hotspot.memory.Universe.getNarrowOopBase()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">java.lang.Boolean object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0    12           (object header)                           N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     1   boolean Boolean.value                             N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     13     3           (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Instance size: 16 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Space losses: 0 bytes internal + 3 bytes external = 3 bytes total</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The data value takes up 1 byte (8 bits), not 1 bit as it might seem.
12 bytes for metadata + 1 byte for boolean data + 3 bytes of offsets (to be a multiple of 8) = 16 bytes</p></li><li><p><a href="/blog/string-in-jvm-memory">String is very interesting so I created another post for this Object type</a></p></li></ul>]]></content>
        <author>
            <name>Bartek Jabłoński</name>
            <uri>https://bartas93.github.io</uri>
        </author>
        <category label="jvm" term="jvm"/>
        <category label="jol" term="jol"/>
        <category label="heap" term="heap"/>
        <category label="memory" term="memory"/>
        <category label="references" term="references"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Regular expressions]]></title>
        <id>regular-expressions</id>
        <link href="https://bartas93.github.io/blog/regular-expressions"/>
        <updated>2024-05-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[- Consists of a sequence of atoms (an atom is a literal - letter, digit, special character)]]></summary>
        <content type="html"><![CDATA[<ul><li>Consists of a sequence of atoms (an atom is a literal - letter, digit, special character)</li><li>Letters are case sensitive</li><li>You can test regexes in online tools like: <a href="https://regex101.com/" target="_blank" rel="noopener noreferrer">https://regex101.com/</a></li></ul><h1>Quantifiers</h1><p>The quantifier tells how many occurrences of a given atom there can be. A quantifier refers to the element to the left of the quantifier. If there is no quantifier next to an atom, it means that the atom will have one occurrence (in the examples below, atom <code>b</code> always has one occurrence.</p><ul><li><p><code>*</code> - zero or more occurrences</p><p>e.g. <code>a*b</code> can translate into, among others, the following expressions: <code>b</code>, <code>ab</code>, <code>aab</code>, <code>aaaaaaab</code>, …</p></li><li><p><code>+</code> - one or more occurrences</p><p>e.g. <code>a+b</code> can translate into, among others, the following expressions: <code>ab</code>, <code>aab</code>, <code>aaaaab</code>, …</p></li><li><p><code>?</code> - zero or one occurrence</p><p>e.g. <code>a?b</code> translates to <code>b</code>, <code>ab</code></p></li><li><p><code>{min,max}</code> - At least <code>min</code> occurrences and maximum <code>max</code> occurrences</p><p>e.g. <code>a{2,4}b</code> translates into the expressions: <code>aab</code>, <code>aaab</code>, <code>aaaab</code></p></li><li><p><code>{min,}</code> - At least <code>min</code> occurrences. The maximum can be infinite.</p></li><li><p><code>{,max}</code> - There is no minimum number of occurrences, and the maximum can be <code>max</code> occurrences</p></li><li><p><code>{n}</code> - the exact number of occurrences equal to <code>n</code></p><p>e.g. <code>a{4}b</code> - translates into: <code>aaaab</code></p></li></ul><h1>Ranges []</h1><p>Range means that the expression can be one letter/number from a range. The dash <code>-</code> denotes a range from, to.</p><ul><li><code>[abc]</code> - means that the expression will be <code>a</code> or <code>b</code> or <code>c</code> (only one letter)</li><li><code>[a-bB-Z]</code> - the expression can be <code>a</code>, <code>b</code>, <code>B</code>, <code>C</code>, <code>D</code>, …, <code>Z</code></li><li><code>[a-Z]</code> - the expression can be any English character (uppercase or lowercase)</li><li><code>[0-9]</code> - the expression can be any digit</li><li><code>[a-ZąćęłńóśźżĄĘŁŃÓŚŹŻ]</code> - range of all Polish characters.</li></ul><h1>Groups ()</h1><ul><li><code>(ab){2}</code> - means the expression <code>abab</code></li></ul><p>#Flags</p><ul><li><code>(?i)</code> - ignore the case of letters to the right of this character</li></ul><h1>Special signs</h1><ul><li><p><code>.</code> - any character</p></li><li><p><code>$</code> - end of line (if we use this character at the end, it means that there is no character after the searched expression.</p></li><li><p><code>^</code> - beginning of the line (if we use this character at the beginning, it means that there is no character before the searched expression.</p></li><li><p><code>[^e]</code> - negation - the expression will not contain the letter <code>e</code>.</p></li><li><p><code>|</code> - the sign means logical or, i.e. the expression will be any expression separated by the <code>|</code> sign</p><p>e.g. <code>a|b</code> - means <code>a</code> or <code>b</code></p></li><li><p><code>\s</code> - Space, tab or newline</p></li><li><p><code>\S</code> - A character that is the negation of <code>\s</code>, i.e. a character that is not a space, tab or newline character</p></li><li><p><code>\w</code> - letter, digit or character <code>_</code> (equivalent to <code>[a-Z_]</code></p></li><li><p><code>\W</code> - a character that is the negation of <code>\w</code>, i.e. a character that is not a letter, digit or <code>_</code></p></li><li><p><code>\d</code> - digit (equivalent to <code>[0-9]</code>)</p></li><li><p><code>\D</code> - a character that is the negation of <code>\d</code>, i.e. a character that is not a digit</p></li><li><p><code>\b</code> - Any whitespace character, the beginning of a string, the end of a string, and any character that is neither a letter nor a digit.</p></li></ul><p><strong>If we want to use one of the special characters in the regular expression such as <code>.</code>, <code>*</code>, <code>/</code>, <code>?</code>, <code>:</code>, <code>.</code>, <code>^</code>, <code>+</code>, <code>\</code>, <code>=</code>, <code>|</code>, then we precede it with the <code>\</code> character, e.g. <code>\.</code></strong></p>]]></content>
        <author>
            <name>Bartek Jabłoński</name>
            <uri>https://bartas93.github.io</uri>
        </author>
        <category label="others" term="others"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Calculating the memory usage by a String in JVM - JOL Footprint]]></title>
        <id>string-in-jvm-memory</id>
        <link href="https://bartas93.github.io/blog/string-in-jvm-memory"/>
        <updated>2024-05-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In short:]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_rv3c" id="in-short">In short:<a class="hash-link" href="#in-short" title="Direct link to heading">​</a></h2><ul><li>The memory of the String object consists of 24 bytes for metadata + the number of characters times 1 byte or 2 bytes depending on the coder value<ul><li>Metadata: mark word x2 (4 bytes x2 = 8 bytes), class word (4 bytes), array reference byte[] or char[] (4 byte), hash (4 byte), hashIsZero (1 byte), coder (1 byte), padding (2 byte)</li></ul></li><li>The String object has 2 additional flags:<ul><li>when <code>coder =1</code> then UTF-16 encoding (2 bytes per character)</li><li>when <code>coder = 0</code> then LATIN-1 encoding (1 byte per character)</li><li>hashIsZero is a flag that tells whether the hash calculation has already been performed</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_rv3c" id="jol---string">JOL - String<a class="hash-link" href="#jol---string" title="Direct link to heading">​</a></h2><p>Since Java 9 we use Compact String, i.e. if possible, we use LATIN-1 encoding, and if not, coder=1 is set and we use UTF-16.</p><p>(Before Java 9, everything was char[] and each letter was equal to 2 byte Utf-16.)</p><p>If at least one character is other than latin-1 (1 byte), each character in the String is encoded in utf16 (2 byte).</p><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token class-name">String</span><span class="token plain"> utf16String </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Bartosz Jabłoński"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// 17 znaków x 2 bytes = 34 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">utf16String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">utf16String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">utf16String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">utf16String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toCharArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">       </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">String</span><span class="token plain"> latin1String </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Bartosz Jablonski"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// 17 znaków x 1 bytes = 17 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">latin1String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">GraphLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">latin1String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toFootprint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">latin1String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">getBytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">System</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">out</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">println</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">parseInstance</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">latin1String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toCharArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">toPrintable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-text codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">#### Bartosz Jabłoński - UTF-16 - coder:1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">java.lang.String object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0     4           (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      4     4           (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      8     4           (object header)                           d8 e8 00 00 (11011000 11101000 00000000 00000000) (59608)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     4       int String.hash                               0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     16     1      byte String.coder                              1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     17     1   boolean String.hashIsZero                         false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     18     2           (alignment/padding gap)                  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     20     4    byte[] String.value                              [66, 0, 97, 0, 114, 0, 116, 0, 111, 0, 115, 0, 122, 0, 32, 0, 74, 0, 97, 0, 98, 0, 66, 1, 111, 0, 68, 1, 115, 0, 107, 0, 105, 0]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Instance size: 24 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Space losses: 2 bytes internal + 0 bytes external = 2 bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">java.lang.String@7dc222aed footprint:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     COUNT       AVG       SUM   DESCRIPTION</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         1        56        56   [B</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         1        24        24   java.lang.String</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         2                  80   (total)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[B object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0     4        (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      4     4        (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      8     4        (object header)                           c0 22 00 00 (11000000 00100010 00000000 00000000) (8896)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     4        (object header)                           13 00 00 00 (00010011 00000000 00000000 00000000) (19)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     16    19   byte [B.&lt;elements&gt;                             N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     35     5        (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Instance size: 40 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Space losses: 0 bytes internal + 5 bytes external = 5 bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[C object internals:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      0     4        (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      4     4        (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      8     4        (object header)                           f0 1c 00 00 (11110000 00011100 00000000 00000000) (7408)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     12     4        (object header)                           11 00 00 00 (00010001 00000000 00000000 00000000) (17)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     16    34   char [C.&lt;elements&gt;                             N/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     50     6        (loss due to the next object alignment)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Instance size: 56 bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Space losses: 0 bytes internal + 6 bytes external = 6 bytes total</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the first case, for <code>Bartosz Jabłoński</code>, where we included Polish characters not included in LATIN-1, you can see that the String has the <code>coder</code> flag set to <code>1</code>, i.e. it uses the <code>UTF-16</code> encoding type (2 bytes per character).</p><p>The footprint shows the deep size of the String object (17 characters) is 80 bytes. It consists of String and its metadata and the String object, i.e. the char[] array in UTF-16 encoding (2 byte per character).
To sum up:</p><ul><li><p>24 bytes - String with a reference takes 24 bytes (12 bytes for metadata (headers) + 4 bytes for hash(int) + 1 byte for coder, + 1 byte for hashIsZero + 4 bytes of references to the char array + 2 bytes for alligment padding ).</p><ul><li>Where the coder is responsible for: This value is closely related to the JVM implementation (hotspot). This is the encoding identifier used to encode bytes. Supported values are LATIN1 (coder=0) and UTF16(coder=1).
If at least one letter <strong>is not included in LATIN1</strong>, then coder=1 and the entire String will be encoded to UTF-16, i.e. it will take up (n letters * 2 bytes) in memory.<ul><li>Where hashIsZero is responsible for: This field tells the JVM whether it can bypass hash recalculation. (this kind of cache)</li></ul></li></ul></li><li><p>56 bytes - The byte[] array occupies 56 bytes, which consists of: 12 bytes of metadata (headers) + 4 bytes of metadata about the array (length) + data 17 characters * 2 bytes (34 bytes) = 50 bytes + 6 bytes for alignment . This is non-intuitively illustrated by the line of code: <code>System.out.println(ClassLayout.parseInstance(utf16String.toCharArray()).toPrintable());</code></p></li></ul><div class="language-java codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-java codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">#### </span><span class="token class-name">Bartosz</span><span class="token plain"> </span><span class="token class-name">Jablonski</span><span class="token plain"> </span><span class="token operator">-</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">LATIN</span><span class="token operator">-</span><span class="token number">1</span><span class="token plain"> </span><span class="token operator">-</span><span class="token plain"> coder</span><span class="token operator">:</span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name namespace">java</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">lang</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">String</span><span class="token plain"> object internals</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">OFFSET</span><span class="token plain">  </span><span class="token constant" style="color:rgb(189, 147, 249)">SIZE</span><span class="token plain">      </span><span class="token constant" style="color:rgb(189, 147, 249)">TYPE</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain">                               </span><span class="token constant" style="color:rgb(189, 147, 249)">VALUE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">0</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">           </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">4</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">           </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">8</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">           </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           d8 e8 </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">11011000</span><span class="token plain"> </span><span class="token number">11101000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">59608</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">12</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">       </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">hash                               </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">16</span><span class="token plain">     </span><span class="token number">1</span><span class="token plain">      </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">byte</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">coder                              </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">17</span><span class="token plain">     </span><span class="token number">1</span><span class="token plain">   </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">boolean</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">hashIsZero                         </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">18</span><span class="token plain">     </span><span class="token number">2</span><span class="token plain">           </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">alignment</span><span class="token operator">/</span><span class="token plain">padding gap</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">20</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">byte</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">value                              </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">66</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">97</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">114</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">116</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">111</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">115</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">122</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">32</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">74</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">97</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">98</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">108</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">111</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">110</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">115</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">107</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">105</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Instance</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">24</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Space</span><span class="token plain"> losses</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> bytes internal </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"> bytes external </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name namespace">java</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">lang</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">String</span><span class="token annotation punctuation" style="color:rgb(248, 248, 242)">@48a242ced</span><span class="token plain"> footprint</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token constant" style="color:rgb(189, 147, 249)">COUNT</span><span class="token plain">       </span><span class="token constant" style="color:rgb(189, 147, 249)">AVG</span><span class="token plain">       </span><span class="token constant" style="color:rgb(189, 147, 249)">SUM</span><span class="token plain">   </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         </span><span class="token number">1</span><span class="token plain">        </span><span class="token number">40</span><span class="token plain">        </span><span class="token number">40</span><span class="token plain">   </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token class-name">B</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         </span><span class="token number">1</span><span class="token plain">        </span><span class="token number">24</span><span class="token plain">        </span><span class="token number">24</span><span class="token plain">   </span><span class="token class-name namespace">java</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name namespace">lang</span><span class="token class-name namespace punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token class-name">String</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">         </span><span class="token number">2</span><span class="token plain">                  </span><span class="token number">64</span><span class="token plain">   </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">total</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token class-name">B</span><span class="token plain"> object internals</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">OFFSET</span><span class="token plain">  </span><span class="token constant" style="color:rgb(189, 147, 249)">SIZE</span><span class="token plain">   </span><span class="token constant" style="color:rgb(189, 147, 249)">TYPE</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain">                               </span><span class="token constant" style="color:rgb(189, 147, 249)">VALUE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">0</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">4</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">8</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           c0 </span><span class="token number">22</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">11000000</span><span class="token plain"> </span><span class="token number">00100010</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">8896</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">12</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">11</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00010001</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">17</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">16</span><span class="token plain">    </span><span class="token number">17</span><span class="token plain">   </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">byte</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token class-name">B</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token generics">elements</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">                             </span><span class="token class-name">N</span><span class="token operator">/</span><span class="token class-name">A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">33</span><span class="token plain">     </span><span class="token number">7</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">loss due </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token namespace">the</span><span class="token plain"> next object alignment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Instance</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">40</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Space</span><span class="token plain"> losses</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"> bytes internal </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">7</span><span class="token plain"> bytes external </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">7</span><span class="token plain"> bytes total</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token class-name">C</span><span class="token plain"> object internals</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">OFFSET</span><span class="token plain">  </span><span class="token constant" style="color:rgb(189, 147, 249)">SIZE</span><span class="token plain">   </span><span class="token constant" style="color:rgb(189, 147, 249)">TYPE</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">DESCRIPTION</span><span class="token plain">                               </span><span class="token constant" style="color:rgb(189, 147, 249)">VALUE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">0</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">01</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000001</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">4</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token number">8</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           f0 </span><span class="token number">1</span><span class="token plain">c </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">11110000</span><span class="token plain"> </span><span class="token number">00011100</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">7408</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">12</span><span class="token plain">     </span><span class="token number">4</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">object header</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">                           </span><span class="token number">11</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token number">00</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">00010001</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token plain"> </span><span class="token number">00000000</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">17</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">16</span><span class="token plain">    </span><span class="token number">34</span><span class="token plain">   </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">char</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token class-name">C</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token generics">elements</span><span class="token generics punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">                             </span><span class="token class-name">N</span><span class="token operator">/</span><span class="token class-name">A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">50</span><span class="token plain">     </span><span class="token number">6</span><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">loss due </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">to</span><span class="token plain"> </span><span class="token namespace">the</span><span class="token plain"> next object alignment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Instance</span><span class="token plain"> size</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">56</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">Space</span><span class="token plain"> losses</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"> bytes internal </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">6</span><span class="token plain"> bytes external </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">6</span><span class="token plain"> bytes total</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the second case for <code>Bartosz Jablonski</code>, where we did not include Polish characters, you can see that String has the coder flag set to 0, i.e. it uses LATIN-1 encoding (1 byte per character).</p><p>The footprint shows the deep size of the String object (17 characters) is 64 bytes. It consists of String and its metadata and the String object, i.e. the byte[] array in LATIN-1 encoding (1 byte per character).</p><ul><li>String with a reference takes 24 bytes (12 bytes for metadata (headers) + 4 bytes for hash(int) + 1 byte for coder + 1 byte for hashIsZero + 4 bytes for references to the array of entities + 2 bytes for alligment padding).</li><li>The byte[] array takes 40 bytes, which consists of: 12 bytes of metadata (headers) + 4 bytes of metadata about the array (length) + 17 character data * 1 byte (17 bytes) = 33 bytes + 7 bytes for alignment.</li></ul><p>This is illustrated by the line of code: <code>System.out.println(ClassLayout.parseInstance(latin1String.getBytes()).toPrintable());</code></p><p>Thanks to the <code>coder</code> flag and the lack of special characters, we have a gain of 16 bytes in less memory consumption - which happens without our programming intervention.</p>]]></content>
        <author>
            <name>Bartek Jabłoński</name>
            <uri>https://bartas93.github.io</uri>
        </author>
        <category label="jvm" term="jvm"/>
        <category label="jol" term="jol"/>
        <category label="string" term="string"/>
        <category label="heap" term="heap"/>
        <category label="memory" term="memory"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Free YouTube Playlist Downloader to mp3 or mp4 - No Ads, No Hassle]]></title>
        <id>python-youtube-downloader</id>
        <link href="https://bartas93.github.io/blog/python-youtube-downloader"/>
        <updated>2024-05-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I recently stopped using Spotify Premium and it has become more difficult to listen to music and podcasts on the plane. So far, I have downloaded mp3 and mp4 using online tools such as:]]></summary>
        <content type="html"><![CDATA[<p>I recently stopped using Spotify Premium and it has become more difficult to listen to music and podcasts on the plane. So far, I have downloaded mp3 and mp4 using online tools such as:</p><ul><li><a href="https://notube.net/pl/youtube-app-v103" target="_blank" rel="noopener noreferrer">https://notube.net/pl/youtube-app-v103</a></li><li><a href="https://y2down.cc/pl/youtube-mp4.html" target="_blank" rel="noopener noreferrer">https://y2down.cc/pl/youtube-mp4.html</a> and others</li></ul><p>Unfortunately, tools of this type allow you to download individual videos and bombard us with a lot of invasive advertisements. To avoid these problems, we will write a script in Python which, after providing a link to a playlist or movie, will download an mp3 or mp4.</p><p>We will use the library <a href="https://pytube.io/en/latest/" target="_blank" rel="noopener noreferrer">pytube</a> to write the script .</p><p>You can find the entire script in the repository gitlab: <a href="https://gitlab.com/bart_as93/youtube-downloader" target="_blank" rel="noopener noreferrer">https://gitlab.com/bart_as93/youtube-downloader</a></p><h3 class="anchor anchorWithStickyNavbar_rv3c" id="1-initial-setup">1. Initial setup<a class="hash-link" href="#1-initial-setup" title="Direct link to heading">​</a></h3><p>Clone the repository to your local machine:</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://gitlab.com/bart_as93/youtube-downloader.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> youtube-downloader</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Check python versions</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">python </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--version</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In my case <code>Python 3.11.4</code></p><p>Then we install the dependencies</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">pip </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token plain"> requirements.txt</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we run the script, e.g.:</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">python .</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">downloader.py</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://downloader.py/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> https://www.youtube.com/playlist?list</span><span class="token operator">=</span><span class="token plain">PLRomwVsNGznFggOY71VFRH_Wi8IOXj3hb </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> music </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> mp4</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The script takes 4 arguments:</p><ul><li><code>-f</code> - format one of: mp3 or mp4</li><li><code>-d</code> - directory where to download files</li><li>and one of below:<ul><li><code>-u</code> - Url to youtube video</li><li><code>-pu</code> - Url to playlist</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_rv3c" id="youtube-to-mp4">YouTube to mp4<a class="hash-link" href="#youtube-to-mp4" title="Direct link to heading">​</a></h3><p>To download a YouTube video you need to use the <code>-u &lt;link_to_video&gt;</code> flag and <code>f mp4</code> flag</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">python .</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">downloader.py</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://downloader.py/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> https://www.youtube.com/watch?v</span><span class="token operator">=</span><span class="token plain">a59gmGkq_pw </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> movies </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> mp4</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_rv3c" id="youtube-to-mp3">YouTube to mp3<a class="hash-link" href="#youtube-to-mp3" title="Direct link to heading">​</a></h3><p>To download audio from YouTube video you need to use the <code>-u &lt;link_to_video&gt;</code> flag and <code>-f mp3</code> flag.</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">python .</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">downloader.py</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://downloader.py/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> https://www.youtube.com/watch?v</span><span class="token operator">=</span><span class="token plain">a59gmGkq_pw </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> music </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> mp3</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_rv3c" id="youtube-playlist-to-mp4">YouTube Playlist to mp4<a class="hash-link" href="#youtube-playlist-to-mp4" title="Direct link to heading">​</a></h3><p>To download videos from YouTube playlist you need to use <code>-pu &lt;link_to_playlist&gt;</code> flag and <code>-f mp4</code> flag.</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">python .</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">downloader.py</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://downloader.py/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-pu</span><span class="token plain"> https://www.youtube.com/playlist?list</span><span class="token operator">=</span><span class="token plain">PLRomwVsNGznFggOY71VFRH_Wi8IOXj3hb </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> music-f mp4</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_rv3c" id="youtube-playlist-to-mp3">YouTube Playlist to mp3<a class="hash-link" href="#youtube-playlist-to-mp3" title="Direct link to heading">​</a></h3><p>To download audio from YouTube playlist you need to use <code>-pu &lt;link_to_playlist&gt;</code> flag and <code>-f mp3</code> flag.</p><div class="language-bash codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-bash codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">python .</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">downloader.py</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://downloader.py/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-pu</span><span class="token plain"> https://www.youtube.com/playlist?list</span><span class="token operator">=</span><span class="token plain">PLRomwVsNGznFggOY71VFRH_Wi8IOXj3hb </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> movies </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> mp3</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_rv3c" id="code-overview-comments-in-code">Code overview (comments in code):<a class="hash-link" href="#code-overview-comments-in-code" title="Direct link to heading">​</a></h2><div class="language-python codeBlockContainer_Qt6K theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_RGc0"><pre tabindex="0" class="prism-code language-python codeBlock_r3qp thin-scrollbar"><code class="codeBlockLines_EoG1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> argparse</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pytube </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> Playlist</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pytube </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> YouTube</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># The program supports two formats: mp3 and mp4. In the else section, if the format is different, the program is disabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">downloadByVideo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">vid</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'downloading : {} - {} with url : {}'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">video</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">author</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> video</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">title</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> video</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">watch_url</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">global</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    vidFileName </span><span class="token operator">=</span><span class="token plain"> vid</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">author </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">" - "</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> vid</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">title </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"."</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'mp3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token builtin" style="color:rgb(189, 147, 249)">type</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'audio'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># On the video object, we refer to streams, filter only audio and call the download method with options describing the target directory in which the file will be saved and the file name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        vid</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">streams</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token builtin" style="color:rgb(189, 147, 249)">filter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">only_audio</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">desc</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">first</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            download</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">output_path</span><span class="token operator">=</span><span class="token plain">DOWNLOAD_DIR</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> filename</span><span class="token operator">=</span><span class="token plain">vidFileName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">elif</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'mp4'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token builtin" style="color:rgb(189, 147, 249)">type</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'video'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># On the video object, we refer to streams, filter only the video, sort from the highest resolution and call the download method with options describing the target directory in which the file will be saved and the file name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        vid</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">streams</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token builtin" style="color:rgb(189, 147, 249)">filter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">type</span><span class="token operator">=</span><span class="token builtin" style="color:rgb(189, 147, 249)">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> progressive</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> file_extension</span><span class="token operator">=</span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            order_by</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'resolution'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            desc</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            first</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            download</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">output_path</span><span class="token operator">=</span><span class="token plain">DOWNLOAD_DIR</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> filename</span><span class="token operator">=</span><span class="token plain">vidFileName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">f"Not supported format type: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation builtin" style="color:rgb(189, 147, 249)">format</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        exit</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Handling command line parameters and checking required fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">parser </span><span class="token operator">=</span><span class="token plain"> argparse</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ArgumentParser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">parser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">add_argument</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"-u"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"--Url"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">help</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Youtube video url"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">parser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">add_argument</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"-pu"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"--PlayListUrl"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">help</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Playlist url"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">parser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">add_argument</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"-f"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"--Format"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">help</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Format of downloaded files - mp3 or mp4"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">parser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">add_argument</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"-d"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"--Destination"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">help</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Destination folder of downloaded files"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"mp3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">args </span><span class="token operator">=</span><span class="token plain"> parser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">parse_args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">not</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Url </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">and</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">not</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PlayListUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Please provide youtube playlist url via -pu or --PlayListUrl argument param or Youtube video url via -u or --Url"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    exit</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">not</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Destination</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Please provide destination folder name via -d or --Destination argument param"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    exit</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">not</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Format</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Format (-f or --Format not provided - default set to mp3"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token builtin" style="color:rgb(189, 147, 249)">format</span><span class="token operator">=</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Format</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">DOWNLOAD_DIR </span><span class="token operator">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">getcwd</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\\out\\"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Destination</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># We check whether the URL to the Playlist (-pu) or the URL to the movie (-u) has been entered and the movie or playlist is downloaded based on the URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PlayListUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    playlist </span><span class="token operator">=</span><span class="token plain"> Playlist</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">PlayListUrl</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">f"Downloading </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation builtin" style="color:rgb(189, 147, 249)">len</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-interpolation interpolation">playlist</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-interpolation interpolation">videos</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)"> files from playlist with url: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation">args</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-interpolation interpolation">Url</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">, with format: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation">args</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token string-interpolation interpolation">Format</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">, to dir: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string-interpolation interpolation">DOWNLOAD_DIR</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token string-interpolation string" style="color:rgb(255, 121, 198)">"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> video </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> playlist</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">videos</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        downloadByVideo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">video</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Url</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    video </span><span class="token operator">=</span><span class="token plain"> YouTube</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Url</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    downloadByVideo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">video</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup_roHE"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_ZlsL" aria-hidden="true"><svg class="copyButtonIcon_CE_h" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_TOug" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Bartek Jabłoński</name>
            <uri>https://bartas93.github.io</uri>
        </author>
        <category label="python" term="python"/>
        <category label="scripts" term="scripts"/>
        <category label="tools" term="tools"/>
    </entry>
</feed>