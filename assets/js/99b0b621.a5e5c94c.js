"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[8658],{92066:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var t=s(85893),r=s(11151);const a={title:"Self-Hosted typesense Service",authors:"xiaohai",tags:["Docker","search engine"],description:"Self-host a typesense search server to perform document search for xiaohai.wiki.  This is an alternative to Algolia.",image:"https://typesense.org/_nuxt/img/typesense_logo.b12edde.svg"},i=void 0,o={permalink:"/blog/2022/03/26/migrate-search-to-typesense",editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-26-migrate-search-to-typesense/index.md",source:"@site/blog/2022/03-26-migrate-search-to-typesense/index.md",title:"Self-Hosted typesense Service",description:"Self-host a typesense search server to perform document search for xiaohai.wiki.  This is an alternative to Algolia.",date:"2022-03-26T00:00:00.000Z",formattedDate:"26 March 2022",tags:[{label:"Docker",permalink:"/blog/tags/docker"},{label:"search engine",permalink:"/blog/tags/search-engine"}],readingTime:1.275,hasTruncateMarker:!0,authors:[{name:"Xiaohai Huang",title:"CS Student",url:"http://github.com/xiaohai-huang",imageURL:"https://github.com/xiaohai-huang.png",key:"xiaohai"}],frontMatter:{title:"Self-Hosted typesense Service",authors:"xiaohai",tags:["Docker","search engine"],description:"Self-host a typesense search server to perform document search for xiaohai.wiki.  This is an alternative to Algolia.",image:"https://typesense.org/_nuxt/img/typesense_logo.b12edde.svg"},unlisted:!1,prevItem:{title:"ByteDance HangZhou Interview Failed 1",permalink:"/blog/2022/04/24/bytedance-interview-failed-1"},nextItem:{title:"ByteDance Interview Round 3",permalink:"/blog/2022/03/24/bytedance-interview-round-3"}},c={authorsImageUrls:[void 0]},h=[{value:"Setup a <code>typesense</code> Server Using Docker",id:"setup-a-typesense-server-using-docker",level:2},{value:"Crawl the Site",id:"crawl-the-site",level:2},{value:"Add <code>typesense</code> Search Bar",id:"add-typesense-search-bar",level:2},{value:"References",id:"references",level:2}];function l(e){const n=Object.assign({p:"p",a:"a",code:"code",h2:"h2",pre:"pre",ol:"ol",li:"li",ul:"ul"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://typesense.org/",children:"typesense"})," is a open source Algolia alternative. This blog shows how to run a self-hosted ",(0,t.jsx)(n.code,{children:"typesense"})," server on my own server."]}),"\n",(0,t.jsxs)(n.h2,{id:"setup-a-typesense-server-using-docker",children:["Setup a ",(0,t.jsx)(n.code,{children:"typesense"})," Server Using Docker"]}),"\n",(0,t.jsxs)(n.p,{children:["Run the server with ",(0,t.jsx)(n.code,{children:"docker-compose up"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:'title="docker-compose.yml"',children:'version: "3.9"\nservices:\n  typesense:\n    image: typesense/typesense:0.22.2\n    environment:\n      - TYPESENSE_DATA_DIR=/data\n      - TYPESENSE_ENABLE_CORS=true\n      - TYPESENSE_API_KEY=test-key\n    ports:\n      - "8108:8108"\n    volumes:\n      - /t-data:/data # /t-data is used to store search engine data\n'})}),"\n",(0,t.jsxs)(n.p,{children:['see "how to configure the server using ',(0,t.jsx)(n.a,{href:"https://typesense.org/docs/0.22.2/api/server-configuration.html#using-environment-variables",children:"environment variables"}),'".']}),"\n",(0,t.jsx)(n.h2,{id:"crawl-the-site",children:"Crawl the Site"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:"docsearch-config.json"})," config file which contains the information about the document website."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/algolia/docsearch-configs/blob/master/configs/docusaurus-2.json",children:"Download"})," config file."]}),"\n",(0,t.jsxs)(n.li,{children:["Update the ",(0,t.jsx)(n.code,{children:"index_name"})," and domain name."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file which contains the information about the ",(0,t.jsx)(n.a,{href:"#setup-a-typesense-server-using-docker",children:"typesense server"})," created in the previous step."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title=".env"',children:"TYPESENSE_API_KEY=test-key\nTYPESENSE_HOST=xiaohai-huang.net\nTYPESENSE_PORT=8108\nTYPESENSE_PROTOCOL=http\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Run the scraper using Docker."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'CONFIG="$(cat docsearch-config.json)" # Retrieved from step 1\ndocker run -i --rm \\\n        --env-file=$(pwd)/.env \\ # .env created at step 2\n        -e CONFIG="${CONFIG}" \\\n        typesense/docsearch-scraper\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"add-typesense-search-bar",children:["Add ",(0,t.jsx)(n.code,{children:"typesense"})," Search Bar"]}),"\n",(0,t.jsx)(n.p,{children:"Install the package."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add docusaurus-theme-search-typesense@next\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add the following to ",(0,t.jsx)(n.code,{children:"docusaurus.config.js"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"{\n  themes: ['docusaurus-theme-search-typesense'],\n  themeConfig: {\n    typesense: {\n      typesenseCollectionName: 'xiaohai-mind-palace-index', // the index_name in `docsearch-config.json`\n\n      typesenseServerConfig: {\n        nodes: [ // typesense server info\n          {\n            host: 'xiaohai-huang.net',\n            port: 8108,\n            protocol: 'http',\n          },\n\n        ],\n        apiKey: 'test-key', // TYPESENSE_API_KEY specified in docker-compose.yml\n      },\n\n      // Optional: Typesense search parameters: https://typesense.org/docs/0.21.0/api/documents.md#search-parameters\n      typesenseSearchParameters: {},\n\n      // Optional\n      contextualSearch: true,\n    },\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://typesense.org/docs/guide/docsearch.html#step-1-set-up-docsearch-scraper",children:"Official Instructions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://typesense.org/docs/0.22.2/api/api-keys.html#create-an-api-key",children:"Generate API keys for admin and user"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://typesense.org/docs/guide/docsearch.html#option-a-docusaurus-powered-sites",children:"Add Search Bar"})}),"\n"]})]})}const d=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}},11151:(e,n,s)=>{s.d(n,{Zo:()=>o,ah:()=>a});var t=s(67294);const r=t.createContext({});function a(e){const n=t.useContext(r);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function o({components:e,children:n,disableParentContext:s}){let o;return o=s?"function"==typeof e?e({}):e||i:a(e),t.createElement(r.Provider,{value:o},n)}}}]);