(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[8432],{14800:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=t(85893),s=t(11151),d=t(61830);const r='var MyLinkedList = function () {\n  this.head = null;\n};\n\n/**\n * @param {number} index\n * @return {number}\n */\nMyLinkedList.prototype.get = function (index) {\n  let currentNode = this.head;\n  let currentIndex = 0;\n\n  while (currentNode) {\n    if (currentIndex === index) return currentNode.val;\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n\n  return -1;\n};\n\n/**\n * @param {number} val\n * @return {void}\n */\nMyLinkedList.prototype.addAtHead = function (val) {\n  const newHead = { val, next: this.head };\n  this.head = newHead;\n};\n\n/**\n * @param {number} val\n * @return {void}\n */\nMyLinkedList.prototype.addAtTail = function (val) {\n  if (!this.head) {\n    this.addAtHead(val);\n    return;\n  }\n  let currentNode = this.head;\n  while (currentNode.next) {\n    currentNode = currentNode.next;\n  }\n  currentNode.next = { val, next: null };\n};\n\n/**\n * @param {number} index\n * @param {number} val\n * @return {void}\n */\nMyLinkedList.prototype.addAtIndex = function (index, val) {\n  let prevNode = null;\n  let currentNode = this.head;\n  let currentIndex = 0;\n  if (index === 0) {\n    this.addAtHead(val);\n    return;\n  }\n  while (currentNode) {\n    if (currentIndex === index) {\n      const newNode = { val, next: currentNode };\n      prevNode.next = newNode;\n      return;\n    }\n    prevNode = currentNode;\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n\n  if (currentIndex === index) {\n    const newNode = { val, next: null };\n    prevNode.next = newNode;\n  }\n};\n\n/**\n * @param {number} index\n * @return {void}\n */\nMyLinkedList.prototype.deleteAtIndex = function (index) {\n  let prevNode = null;\n  let currentNode = this.head;\n  let currentIndex = 0;\n  if (index === 0) {\n    this.head = this.head.next;\n    return;\n  }\n\n  while (currentNode) {\n    if (currentIndex === index) {\n      prevNode.next = currentNode.next;\n    }\n    prevNode = currentNode;\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n};\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * var obj = new MyLinkedList()\n * var param_1 = obj.get(index)\n * obj.addAtHead(val)\n * obj.addAtTail(val)\n * obj.addAtIndex(index,val)\n * obj.deleteAtIndex(index)\n */\nfunction assert(expected, real, message = "") {\n  if (expected === real) {\n    console.log(`PASS: ${message}`);\n  } else {\n    console.log(`FAIL: ${message}`);\n    throw new Error(`FAIL: ${message}` + JSON.stringify({ expected, real }));\n  }\n}\n\n// test add/delete\nfunction test1() {\n  var obj = new MyLinkedList();\n  obj.addAtHead(1);\n  obj.addAtHead(2);\n  obj.addAtHead(3);\n  // 3->2-1\n  assert(obj.get(0), 3);\n  obj.deleteAtIndex(0);\n  assert(obj.get(0), 2);\n\n  // 2-1\n  obj.deleteAtIndex(1);\n  // 2\n  assert(obj.get(0), 2);\n  assert(obj.get(1), -1);\n}\n\nfunction test5() {\n  var obj = new MyLinkedList();\n  obj.addAtHead(7);\n  obj.addAtHead(2);\n  obj.addAtHead(1);\n  // 1-2-7\n  obj.addAtIndex(3, 0);\n  // 1-2-7-0\n  assert(0, obj.get(3));\n\n  obj.deleteAtIndex(2);\n  // 1 2 0\n  assert(0, obj.get(2));\n  obj.addAtHead(6);\n  // 6-1-2-0\n  assert(6, obj.get(0));\n\n  obj.addAtTail(4);\n  // 6-1-2-0-4\n  assert(4, obj.get(4));\n}\n\nfunction test6() {\n  var obj = new MyLinkedList();\n  obj.addAtIndex(0, 10);\n  obj.addAtIndex(0, 20);\n  obj.addAtIndex(1, 30);\n  //  20 30 10\n  assert(20, obj.get(0));\n}\n\nfunction test7() {\n  var obj = new MyLinkedList();\n  obj.addAtTail(1);\n  assert(1, obj.get(0));\n}\ntest1();\ntest5();\ntest6();\n\ntest7();\n',o={sidebar_label:"Design Linked List",title:"Design Linked List"},a=void 0,l={id:"Algorithm/Design_Linked_List",title:"Design Linked List",description:"src//leetcode.com/explore/learn/card/linked-list/209/singly-linked-list/1290/",source:"@site/docs/Algorithm/Design_Linked_List.mdx",sourceDirName:"Algorithm",slug:"/Algorithm/Design_Linked_List",permalink:"/docs/Algorithm/Design_Linked_List",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/docs/Algorithm/Design_Linked_List.mdx",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1646875891,formattedLastUpdatedAt:"10 Mar 2022",frontMatter:{sidebar_label:"Design Linked List",title:"Design Linked List"},sidebar:"notesSidebar",previous:{title:"3. Longest Substring Without Repeating Characters",permalink:"/docs/Algorithm/longest-substring-without-repeating-characters"},next:{title:"Permutations",permalink:"/docs/Algorithm/permutations"}},c={},u=[{value:"Requirement",id:"requirement",level:2}];function h(e){const n=Object.assign({p:"p",a:"a",h2:"h2",code:"code"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["src: ",(0,i.jsx)(n.a,{href:"https://leetcode.com/explore/learn/card/linked-list/209/singly-linked-list/1290/",children:"https://leetcode.com/explore/learn/card/linked-list/209/singly-linked-list/1290/"})]}),"\n",(0,i.jsx)(n.h2,{id:"requirement",children:"Requirement"}),"\n",(0,i.jsxs)(n.p,{children:["Implement the ",(0,i.jsx)(n.code,{children:"MyLinkedList"})," class:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MyLinkedList()"})," Initializes the MyLinkedList object.\n",(0,i.jsx)(n.code,{children:"int get(int index)"})," Get the value of the index",(0,i.jsx)("sup",{children:"th"})," node in the linked list. If the index is invalid, return -1."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"void addAtHead(int val)"})," Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"void addAtTail(int val)"})," Append a node of value val as the last element of the linked list."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"void addAtIndex(int index, int val)"})," Add a node of value val before the indexth node in the linked list. If index equals the length of the linked list, the node will be appended to the end of the linked list. If index is greater than the length, the node will not be inserted."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"void deleteAtIndex(int index)"})," Delete the index",(0,i.jsx)("sup",{children:"th"})," node in the linked list, if the index is valid."]}),"\n",(0,i.jsx)(d.Z,{run:!1,children:r})]})}const p=function(e={}){const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(h,e)})):h(e)}},91262:(e,n,t)=>{"use strict";t.d(n,{Z:()=>d});t(67294);var i=t(72389),s=t(85893);function d(e){let{children:n,fallback:t}=e;return(0,i.Z)()?(0,s.jsx)(s.Fragment,{children:n?.()}):t??null}},61830:(e,n,t)=>{"use strict";t.d(n,{Z:()=>A});var i=t(67294),s=t(91262),d=t(10412),r=t(40460),o=t.n(r),a=t(70631),l=t.n(a),c=t(87410),u=t(71418),h=t(86010);const p=/\r\n|\r|\n/,x=e=>{0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},g=(e,n)=>{const t=e.length;return t>0&&e[t-1]===n?e:e.concat(n)},m=e=>{const n=[[]],t=[e],i=[0],s=[e.length];let d=0,r=0,o=[];const a=[o];for(;r>-1;){for(;(d=i[r]++)<s[r];){let e,l=n[r];const c=t[r][d];if("string"==typeof c?(l=r>0?l:["plain"],e=c):(l=g(l,c.type),c.alias&&(l=g(l,c.alias)),e=c.content),"string"!=typeof e){r++,n.push(l),t.push(e),i.push(0),s.push(e.length);continue}const u=e.split(p),h=u.length;o.push({types:l,content:u[0]});for(let n=1;n<h;n++)x(o),a.push(o=[]),o.push({types:l,content:u[n]})}r--,n.pop(),t.pop(),i.pop(),s.pop()}return x(o),a},v=(e,n)=>{const{plain:t}=e,i=e.styles.reduce(((e,t)=>{const{languages:i,style:s}=t;return i&&!i.includes(n)||t.types.forEach((n=>{const t={...e[n],...s};e[n]=t})),e}),{});return i.root=t,i.plain={...t,backgroundColor:void 0},i};var j=t(85893);const b=v(u.Z,"javascript");d.Z.canUseDOM&&((void 0!==t.g?t.g:window).Prism=c.Z);const f=e=>{let n="";return e.forEach(((e,t)=>{let i=e;e!==window&&(i=l()(e)),n+=`${t+1}:  ${i}\n`})),n},y=e=>{let{key:n,className:t,style:i,line:s,...d}=e;const r={...d,className:"token-line",style:void 0,key:void 0};return void 0!==b&&(r.style=b.plain),void 0!==i&&(r.style=void 0!==r.style?{...r.style,...i}:i),void 0!==n&&(r.key=n),t&&(r.className+=` ${t}`),r},k=e=>{let{types:n,empty:t}=e;const i=n.length;if(void 0===b)return;if(1===i&&"plain"===n[0])return t?{display:"inline-block"}:void 0;if(1===i&&!t)return b[n[0]];const s=t?{display:"inline-block"}:{},d=n.map((e=>b[e]));return Object.assign(s,...d)},L=e=>{let{key:n,className:t,style:i,token:s,...d}=e;const r={...d,className:`token ${s.types.join(" ")}`,children:s.content,style:k(s),key:void 0};return void 0!==i&&(r.style=void 0!==r.style?{...r.style,...i}:i),void 0!==n&&(r.key=n),t&&(r.className+=` ${t}`),r};function A(e){let{children:n="",title:t="",run:d=!0}=e;const[r,a]=(0,i.useState)(n),[l,p]=(0,i.useState)(""),x=()=>{p("");const e=`\n    const __results=[];\n        \n    try{\n      (()=>{\n        ${r}\n      })();\n    }catch(err){\n      return {results: __results, err};\n    }\n      \n    return {results: __results};`.replaceAll("console.log","__results.push");console.log(`var output =  (()=>{\n      ${e}\n    })() `);try{const{results:n,err:t}=new Function(e)();p(f(t?[...n,t]:n))}catch(n){p(f([n]))}};return(0,i.useEffect)((()=>{d&&x()}),[d]),(0,j.jsxs)("section",{className:"js-live-editor margin-bottom--md",children:[(0,j.jsx)("i",{children:t}),(0,j.jsx)("div",{className:"shadow--md thin-scrollbar",children:(0,j.jsx)(o(),{className:"editor",textareaClassName:"codeArea",style:u.Z.plain,padding:10,value:r,onValueChange:e=>a(e),highlight:e=>m(c.Z.tokenize(e,c.Z.languages.javascript,"javascript")).map(((e,n)=>(0,j.jsxs)("div",{...y({line:e}),children:[(0,j.jsx)("span",{className:"editorLineNumber",children:n+1}),e.map(((e,n)=>(0,j.jsx)("span",{...L({token:e})},n)))]},n)))})}),(0,j.jsx)("button",{className:"button button--primary margin-top--md margin-right--xs",onClick:x,children:"Run"}),(0,j.jsx)("button",{className:"button button--secondary margin-top--md",onClick:()=>{a(n),p("")},children:"Reset"}),(0,j.jsx)("div",{className:(0,h.Z)("outputArea","shadow--md","margin-top--md","padding--sm"),children:(0,j.jsx)(s.Z,{fallback:(0,j.jsx)(j.Fragment,{children:" "}),children:()=>(0,j.jsx)(j.Fragment,{children:""===l?" ":l})})})]})}},24654:()=>{},11151:(e,n,t)=>{"use strict";t.d(n,{Zo:()=>o,ah:()=>d});var i=t(67294);const s=i.createContext({});function d(e){const n=i.useContext(s);return i.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function o({components:e,children:n,disableParentContext:t}){let o;return o=t?"function"==typeof e?e({}):e||r:d(e),i.createElement(s.Provider,{value:o},n)}}}]);