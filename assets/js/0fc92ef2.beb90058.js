"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[9681],{75803:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var i=n(85893),t=n(11151);const r={sidebar_label:"Cache",description:"Notes about HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.",toc_max_heading_level:4},a="HTTP Cache",c={id:"Web/Network/HTTP/cache",title:"HTTP Cache",description:"Notes about HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.",source:"@site/docs/Web/Network/HTTP/cache.mdx",sourceDirName:"Web/Network/HTTP",slug:"/Web/Network/HTTP/cache",permalink:"/docs/Web/Network/HTTP/cache",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/docs/Web/Network/HTTP/cache.mdx",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1695964360,formattedLastUpdatedAt:"29 Sept 2023",frontMatter:{sidebar_label:"Cache",description:"Notes about HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.",toc_max_heading_level:4},sidebar:"notesSidebar",previous:{title:"HTTP",permalink:"/docs/Web/Network/HTTP/"},next:{title:"Content Security Policy",permalink:"/docs/Web/Network/HTTP/content-security-policy"}},d={},o=[{value:"Cache Key",id:"cache-key",level:2},{value:"Vary",id:"vary",level:3},{value:"Freshness",id:"freshness",level:2},{value:"Age",id:"age",level:3},{value:"Freshness Lifetime",id:"freshness-lifetime",level:3},{value:"Validation",id:"validation",level:2},{value:"Sending a Validation Request",id:"sending-a-validation-request",level:3},{value:"Timestamp",id:"timestamp",level:4},{value:"Entity Tag (ETag)",id:"etag",level:4},{value:"Example",id:"example",level:5},{value:"Handling a Validation Response",id:"handling-a-validation-response",level:3},{value:"Field Definitions",id:"field-definitions",level:2},{value:"Age",id:"age-1",level:3},{value:"Cache-Control",id:"cache-control",level:3},{value:"<code>max-age</code>",id:"max-age",level:4},{value:"<code>must-revalidate</code>",id:"must-revalidate",level:4},{value:"<code>no-cache</code>",id:"no-cache",level:4},{value:"<code>no-store</code> \u26d4\ufe0f",id:"no-store",level:4},{value:"<code>private</code>",id:"private",level:4},{value:"<code>public</code>",id:"public",level:4},{value:"Expires",id:"expires",level:3},{value:"Heuristic Caching",id:"heuristic-caching",level:2},{value:"Example",id:"example-1",level:3},{value:"References",id:"references",level:2}];function h(e){const s=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",em:"em",h2:"h2",admonition:"admonition",code:"code",strong:"strong",h3:"h3",a:"a",pre:"pre",blockquote:"blockquote",ol:"ol",h4:"h4",h5:"h5"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"http-cache",children:"HTTP Cache"}),"\n",(0,i.jsx)(s.p,{children:"Fetching resources over the network is both slow and expensive:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"If a person is accessing your site with a limited mobile data plan, every unnecessary network request is a waste of their money."}),"\n",(0,i.jsxs)(s.li,{children:["Large responses (",(0,i.jsx)(s.em,{children:"image/audio"}),") require many roundtrip between the browser and the server."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"How can we avoid unnecessary network requests? The HTTP cache can be helpful."}),"\n",(0,i.jsx)(s.p,{children:"The HTTP cache stores a response associated with a request and reuses the stored response for subsequent requests."}),"\n",(0,i.jsx)(s.h2,{id:"cache-key",children:"Cache Key"}),"\n",(0,i.jsx)(s.p,{children:"A cache key is composed from, at a minimum:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"request method"}),"\n",(0,i.jsx)(s.li,{children:"target URI"}),"\n"]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsxs)(s.p,{children:["Many HTTP caches only cache ",(0,i.jsx)(s.code,{children:"GET"})," responses and therefore only use the URI as the cache key."]}),(0,i.jsxs)(s.p,{children:["Most commonly, caches stores the successful result of a retrieval request: i.e., a 200 (OK) response to a ",(0,i.jsx)(s.code,{children:"GET"})," request, which contains a representation of the target resource."]}),(0,i.jsxs)(s.p,{children:["However, it is also possible to store redirects, negative results (e.g., ",(0,i.jsx)(s.strong,{children:"404 (Not Found)"}),"), incomplete results (e.g., ",(0,i.jsx)(s.strong,{children:"206(Partial Content)"}),"), and responses to other methods other than ",(0,i.jsx)(s.code,{children:"GET"}),"."]})]}),"\n",(0,i.jsx)(s.h3,{id:"vary",children:"Vary"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Vary"})," expands the ",(0,i.jsx)(s.a,{href:"#cache-key",children:"cache key"})," required to match a new request to the stored cache entry."]}),"\n",(0,i.jsxs)(s.p,{children:["A cache might store multiple responses for a request target that is subject to ",(0,i.jsx)(s.em,{children:"content negotiation"}),". Caches differentiate these responses by incorporating some of the original request's header fields into the ",(0,i.jsx)(s.strong,{children:"cache key"}),", using information in the ",(0,i.jsx)(s.code,{children:"Vary"})," response header field."]}),"\n",(0,i.jsxs)("figure",{style:{textAlign:"center"},children:[(0,i.jsx)("img",{alt:"cache key with Accept-Language",src:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching/keyed-with-url-and-language.png"}),(0,i.jsx)("figcaption",{children:"Cache keys incorporating Accept-Language."})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-http",children:"Vary: accept-encoding, accept-language\n"})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["A stored response with a ",(0,i.jsx)(s.code,{children:"Vary"}),' header field value containing a member "*" always fails to match.']})}),"\n",(0,i.jsx)(s.h2,{id:"freshness",children:"Freshness"}),"\n",(0,i.jsxs)(s.p,{children:["Stored HTTP responses have two states: ",(0,i.jsx)(s.strong,{children:"fresh"})," or ",(0,i.jsx)(s.strong,{children:"stale"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["A ",(0,i.jsx)(s.em,{children:"fresh"})," response is one whose ",(0,i.jsx)(s.strong,{children:"age"})," has not yet exceeded its ",(0,i.jsx)(s.a,{href:"#freshness-lifetime",children:"freshness lifetime"}),". While a ",(0,i.jsx)(s.em,{children:"stale"})," response is one that has already expired."]}),"\n",(0,i.jsx)(s.h3,{id:"age",children:"Age"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Age"})," field value is the cache's estimate of the number of seconds since the origin server generated or validated the response."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Age"})," is the time elapsed since the response was generated."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"freshness-lifetime",children:"Freshness Lifetime"}),"\n",(0,i.jsxs)(s.p,{children:["A cache can calculate the ",(0,i.jsx)(s.strong,{children:"freshness lifetime"})," of a response by evaluating the following rules and using the first match:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["If the cache is ",(0,i.jsx)(s.strong,{children:"shared"})," and the ",(0,i.jsx)(s.code,{children:"s-maxage"})," response directive is present, use its value."]}),"\n",(0,i.jsxs)(s.li,{children:["If the ",(0,i.jsx)(s.code,{children:"max-age"})," response directive is present, use its value."]}),"\n",(0,i.jsxs)(s.li,{children:["If the ",(0,i.jsx)(s.code,{children:"Expires"})," response header field is present, use its value minus the value of the ",(0,i.jsx)(s.code,{children:"Date"})," response header field."]}),"\n",(0,i.jsx)(s.li,{children:"If no explicit expiration time is present in the response. A heuristic freshness lifetime might be applicable."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"validation",children:"Validation"}),"\n",(0,i.jsxs)(s.p,{children:["Stale responses are not immediately discarded. The conditional request mechanism can transform a stale response into a fresh one by asking the origin server, or to replace the stored response(s) with a new response. This process is known as ",(0,i.jsx)(s.em,{children:"validating"})," or ",(0,i.jsx)(s.em,{children:"revalidating"})," the stored response."]}),"\n",(0,i.jsx)(s.h3,{id:"sending-a-validation-request",children:"Sending a Validation Request"}),"\n",(0,i.jsxs)(s.p,{children:["When generating a conditional request for validation, a cache synthesizes a request using a stored response by copying the method, target URI, and request header fields specified by the ",(0,i.jsx)(s.a,{href:"#vary",children:"Vary"})," header field."]}),"\n",(0,i.jsxs)(s.p,{children:["The cache then updates the request with one or more ",(0,i.jsx)(s.strong,{children:"precondition header fields"})," which contain validators sourced from a stored response(s)."]}),"\n",(0,i.jsx)(s.p,{children:"When generating a conditional request for validated, a cache:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"MUST"})," send the relevant entity tags (using ",(0,i.jsx)(s.code,{children:"If-None-Match"}),", ",(0,i.jsx)(s.code,{children:"If-Match"}),") if the entity tags (ETag) were provided in the stored response(s) being validated."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"SHOULD"})," send the ",(0,i.jsx)(s.code,{children:"Last-Modified"})," value (using ",(0,i.jsx)(s.code,{children:"If-Modified-Since"}),") if the request is not for a subrange, and that response contains a ",(0,i.jsx)(s.code,{children:"Last-Modified"})," value."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The precondition header fields are compared by recipients (servers) to determine whether the stored response is equivalent to the current representation of the resource."}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsxs)(s.p,{children:["Resource metadata is referred to as a ",(0,i.jsx)(s.em,{children:"validator"})," if it can be used within a precondition to make a conditional request."]}),(0,i.jsx)(s.p,{children:"There are two forms of metadata:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"modification dates"}),"\n",(0,i.jsx)(s.li,{children:"opaque entity tags (clearly superior)"}),"\n"]})]}),"\n",(0,i.jsxs)(s.p,{children:["The precondition header fields can contain two different types of ",(0,i.jsx)(s.strong,{children:"validators"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"timestamp",children:"Timestamp"}),"\n",(0,i.jsxs)(s.p,{children:["One validator is the timestamp given in a ",(0,i.jsx)(s.code,{children:"Last-Modified"})," header field, which can be used in an ",(0,i.jsx)(s.code,{children:"If-Modified-Since"})," header field for response validation."]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Last-Modified"})," header field in a response provides a timestamp indicating the date and time at which the origin server believes the selected representation was last modified."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT\n"})})]}),"\n",(0,i.jsx)(s.h4,{id:"etag",children:"Entity Tag (ETag)"}),"\n",(0,i.jsxs)(s.p,{children:["Another validator is the entity tag given in an ",(0,i.jsx)(s.code,{children:"ETag"})," field. One or more entity tags, indicating one or more stored responses, can be used in an ",(0,i.jsx)(s.code,{children:"If-None-Match"})," header field for response validation."]}),"\n",(0,i.jsx)(s.h5,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(s.p,{children:["A response, an HTML file, has a ",(0,i.jsx)(s.code,{children:"ETag"})," value of ",(0,i.jsx)(s.code,{children:"33a64df5"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",metastring:'title="response of /index.html"',children:'HTTP/1.1 200 OK\nContent-Type: text/html\nContent-Length: 1024\nDate: Tue, 22 Feb 2022 22:22:22 GMT\nETag: "33a64df5"\nCache-Control: max-age=3600\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If that response is stale, the client takes the value of the ",(0,i.jsx)(s.code,{children:"ETag"})," from the response header of the cached response, and puts it into the ",(0,i.jsx)(s.code,{children:"If-None-Match"})," request header of the validation request, to ask the server if the resource has been modified."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",metastring:'title="A conditional request for validation"',children:'GET /index.html HTTP/1.1\nHost: example.com\nAccept: text/html\nIf-None-Match: "33a64df5"\n'})}),"\n",(0,i.jsx)(s.p,{children:"see below for how to handle the validation response."}),"\n",(0,i.jsx)(s.h3,{id:"handling-a-validation-response",children:"Handling a Validation Response"}),"\n",(0,i.jsx)(s.p,{children:"A cache handles a response to a conditional request by considering its status code:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["A ",(0,i.jsx)(s.strong,{children:"304 (Not Modified)"})," response status code indicates that the stored response can be updated and reused."]}),"\n",(0,i.jsxs)(s.li,{children:["A full response (i.e., one containing content) indicates that none of the stored responses nominated in the conditional request are suitable. Therefore, the cache ",(0,i.jsx)(s.em,{children:"MUST"})," use the full response to satisfy the request. The cache ",(0,i.jsx)(s.em,{children:"MAY"})," store the full response."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"field-definitions",children:"Field Definitions"}),"\n",(0,i.jsx)(s.p,{children:"This section discusses the HTTP fields related to caching."}),"\n",(0,i.jsx)(s.h3,{id:"age-1",children:"Age"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Age"})," response header filed is the time elapsed since the response was generated or successfully validated at the origin server."]}),"\n",(0,i.jsx)(s.h3,{id:"cache-control",children:"Cache-Control"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Cache-Control"})," header field is used to list directives for caches. Cache directives are ",(0,i.jsx)(s.strong,{children:"unidirectional"}),"\ud83d\udc7d\ufe0f, the presence of a directive in a ",(0,i.jsx)(s.strong,{children:"request"})," does not imply that the same directive is present or copied in the ",(0,i.jsx)(s.strong,{children:"response"}),"."]}),"\n",(0,i.jsx)(s.admonition,{type:"warning",children:(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.a,{href:"https://httpwg.org/specs/rfc9111.html#cache-request-directive",children:"request directives"})," are advisory, caches ",(0,i.jsx)(s.em,{children:"MAY"})," implement them, but are not required to. So our primary focus is on ",(0,i.jsx)(s.strong,{children:"response directives"}),", a cache ",(0,i.jsx)(s.em,{children:"MUST"})," obey the ",(0,i.jsx)(s.code,{children:"Cache-Control"})," directives in response."]})}),"\n",(0,i.jsx)(s.h4,{id:"max-age",children:(0,i.jsx)(s.code,{children:"max-age"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"max-age"})," response directive indicates that the response is to be considered stale after its ",(0,i.jsx)(s.a,{href:"#age",children:"age"})," is greater than the specified number of seconds."]}),"\n",(0,i.jsx)(s.h4,{id:"must-revalidate",children:(0,i.jsx)(s.code,{children:"must-revalidate"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"must-revalidate"})," response directive indicates that once the response has become stale, a cache ",(0,i.jsx)(s.em,{children:"MUST NOT"})," reuse that response to satisfy another request until it has been successfully validated by the origin."]}),"\n",(0,i.jsxs)(s.p,{children:["If a cache is disconnected, a cache ",(0,i.jsx)(s.em,{children:"MUST"})," generate an error response rather than reuse the stale response. The generated status code ",(0,i.jsx)(s.em,{children:"SHOULD"})," be ",(0,i.jsx)(s.strong,{children:"504 (Gateway Timeout)"})," unless another error status code is more applicable."]}),"\n",(0,i.jsx)(s.h4,{id:"no-cache",children:(0,i.jsx)(s.code,{children:"no-cache"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"no-cache"})," response directive indicates that the response ",(0,i.jsx)(s.em,{children:"MUST NOT"})," be used to satisfy any other request without forwarding it for validation and receiving a successful response."]}),"\n",(0,i.jsx)(s.p,{children:"This allows an origin server to prevent a cache from using response to satisfy a request without contacting it."}),"\n",(0,i.jsxs)(s.h4,{id:"no-store",children:[(0,i.jsx)(s.code,{children:"no-store"})," \u26d4\ufe0f"]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"no-store"})," response directive indicates that a cache ",(0,i.jsx)(s.em,{children:"MUST NOT"})," store any part of either the intermediate request or the response and ",(0,i.jsx)(s.em,{children:"MUST NOT"})," use the response to satisfy any other request."]}),"\n",(0,i.jsx)(s.h4,{id:"private",children:(0,i.jsx)(s.code,{children:"private"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"private"})," response directive indicates that a shared cache ",(0,i.jsx)(s.em,{children:"MUST NOT"})," store the response since the response is intended for a single user. It also indicates that a private cache ",(0,i.jsx)(s.em,{children:"MAY"})," store the response."]}),"\n",(0,i.jsx)(s.h4,{id:"public",children:(0,i.jsx)(s.code,{children:"public"})}),"\n",(0,i.jsxs)(s.p,{children:["It permits a shared cache to reuse a response to a request containing an ",(0,i.jsx)(s.code,{children:"Authorization"})," header field."]}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["It is unnecessary to add the ",(0,i.jsx)(s.code,{children:"public"})," directive to a response that is already cacheable."]})}),"\n",(0,i.jsx)(s.h3,{id:"expires",children:"Expires"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Expires"})," response header field gives the date/time after which the response is considered stale."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"Expires: Thu, 01 Dec 1994 16:00:00 GMT\n"})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["If a response includes a ",(0,i.jsx)(s.a,{href:"#cache-control",children:"Cache-Control"})," header field with the ",(0,i.jsx)(s.a,{href:"#max-age",children:"max-age"}),", a recipient ",(0,i.jsx)(s.em,{children:"MUST"})," ignore the ",(0,i.jsx)(s.code,{children:"Expires"})," header field. Because the value in ",(0,i.jsx)(s.code,{children:"Expires"})," is only intended for recipients that have not yet implemented the ",(0,i.jsx)(s.a,{href:"#cache-control",children:"Cache-Control"})," header field."]})}),"\n",(0,i.jsx)(s.h2,{id:"heuristic-caching",children:"Heuristic Caching"}),"\n",(0,i.jsxs)(s.p,{children:["Since origin servers do not always provide explicit expiration times, a cache ",(0,i.jsx)(s.em,{children:"MAY"})," assign a heuristic expiration time when an explicit time is not specified, employing algorithms that use other field values (such as the ",(0,i.jsx)(s.a,{href:"#last-modified",children:"Last-Modified"})," time) to estimate a plausible expiration time."]}),"\n",(0,i.jsxs)(s.p,{children:["If the response has a ",(0,i.jsx)(s.a,{href:"#last-modified",children:"Last-Modified"})," header field, caches are encouraged to use a heuristic expiration value that is no more than some fraction of the interval since that time. A typical setting of this fraction might be 10%;"]}),"\n",(0,i.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsxs)(s.p,{children:["If a response has a ",(0,i.jsx)(s.a,{href:"#last-modified",children:"Last-Modified"})," header field set to 1 year ago."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"HTTP/1.1 200 OK\nContent-Type: text/html\nContent-Length: 1024\nDate: Tue, 22 Feb 2022 22:22:22 GMT\nLast-Modified: Tue, 22 Feb 2021 22:22:22 GMT\n"})}),"\n",(0,i.jsx)(s.p,{children:"The response will be stored in a cache and it is considered as fresh for 0.1 year."}),"\n",(0,i.jsx)(s.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://web.dev/http-cache/",children:"Prevent unnecessary network requests with the HTTP Cache"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching",children:"HTTP caching | MDN Docs"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://httpwg.org/specs/rfc9111.html",children:"RFC 9111: Hypertext Transfer Protocol (HTTP/1.1): Caching"})}),"\n"]})]})}const l=function(e={}){const{wrapper:s}=Object.assign({},(0,t.ah)(),e.components);return s?(0,i.jsx)(s,Object.assign({},e,{children:(0,i.jsx)(h,e)})):h(e)}},11151:(e,s,n)=>{n.d(s,{Zo:()=>c,ah:()=>r});var i=n(67294);const t=i.createContext({});function r(e){const s=i.useContext(t);return i.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const a={};function c({components:e,children:s,disableParentContext:n}){let c;return c=n?"function"==typeof e?e({}):e||a:r(e),i.createElement(t.Provider,{value:c},s)}}}]);