"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[4216],{20646:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var a=n(85893),t=n(11151);const i={sidebar_label:"Document-Based Index",description:"The simplest form of an inverted list stores just the documents that contain each word, and no additional information."},c="Document-Based Index",r={id:"cab432-search-engine-technology/inverted-indexs/document-based-index",title:"Document-Based Index",description:"The simplest form of an inverted list stores just the documents that contain each word, and no additional information.",source:"@site/university/cab432-search-engine-technology/054-inverted-indexs/0-document-based-index.md",sourceDirName:"cab432-search-engine-technology/054-inverted-indexs",slug:"/cab432-search-engine-technology/inverted-indexs/document-based-index",permalink:"/university/cab432-search-engine-technology/inverted-indexs/document-based-index",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/university/cab432-search-engine-technology/054-inverted-indexs/0-document-based-index.md",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1654853181,formattedLastUpdatedAt:"10 Jun 2022",sidebarPosition:0,frontMatter:{sidebar_label:"Document-Based Index",description:"The simplest form of an inverted list stores just the documents that contain each word, and no additional information."},sidebar:"university",previous:{title:"Inverted Indexes",permalink:"/university/cab432-search-engine-technology/inverted-indexs/"},next:{title:"Count-Based Index",permalink:"/university/cab432-search-engine-technology/inverted-indexs/count-based-index"}},l={},o=[{value:"Intersection",id:"intersection",level:2}];function d(e){const s=Object.assign({h1:"h1",blockquote:"blockquote",p:"p",img:"img",strong:"strong",a:"a",h2:"h2",pre:"pre",code:"code",span:"span",math:"math",semantics:"semantics",mrow:"mrow",msub:"msub",mi:"mi",mn:"mn",annotation:"annotation",mo:"mo"},(0,t.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"document-based-index",children:"Document-Based Index"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"The simplest form of an inverted list stores just the documents that contain each word, and no additional information. (e.g., the index at the back of the textbook)"}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"document inverted list",src:n(86026).Z+"",width:"927",height:"1525"})}),"\n",(0,a.jsx)(s.p,{children:"Above figures shows the inverted indexes built from four sentences (documents)."}),"\n",(0,a.jsx)(s.p,{children:"The index contains every word found in all 4 documents."}),"\n",(0,a.jsxs)(s.p,{children:["Next to each word, there are a list of boxes, and each one contains the ",(0,a.jsx)(s.strong,{children:"ID"})," of a document. Each one of these boxes is a ",(0,a.jsx)(s.a,{href:"/university/#posting-and-pointer",children:"posting"})," and because each box refers to a specific document, it can also be called ",(0,a.jsx)(s.a,{href:"/university/#posting-and-pointer",children:"pointer"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"intersection",children:"Intersection"}),"\n",(0,a.jsx)(s.p,{children:'Suppose we want to find the sentence that contains the words "coloration" and "freshwater".'}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-js",children:"const inverted_list =(\n    {\n        coloration: [3, 4];\n        freshwater: [1, 4];\n    }\n)\n"})}),"\n",(0,a.jsxs)(s.p,{children:["According to the inverted list, we can quickly tell that only ",(0,a.jsx)(s.span,{className:"math math-inline",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"S"}),(0,a.jsx)(s.mn,{children:"4"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"S_4"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"S"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0576em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"4"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]})]})})]})}),' contains both "coloration" and "freshwater". Since each list is ',(0,a.jsx)(s.strong,{children:"sorted by document ID"}),", finding the intersection of these lists takes ",(0,a.jsx)(s.span,{className:"math math-inline",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"O"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"max"}),(0,a.jsx)(s.mo,{children:"\u2061"}),(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"m"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(\\max{(m,n)})"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mop",children:"max"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})})]})}),", where ",(0,a.jsx)(s.span,{className:"math math-inline",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"m"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"m"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"m"})]})})]})})," and ",(0,a.jsx)(s.span,{className:"math math-inline",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"n"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})})," are the lengths of these two lists. The algorithm is the same as in merge sort."]})]})}const h=function(e={}){const{wrapper:s}=Object.assign({},(0,t.ah)(),e.components);return s?(0,a.jsx)(s,Object.assign({},e,{children:(0,a.jsx)(d,e)})):d(e)}},86026:(e,s,n)=>{n.d(s,{Z:()=>a});const a=n.p+"assets/images/document-inverted-list-example-5b3ca6c0a56f1c81cae66c13050d07f3.png"},11151:(e,s,n)=>{n.d(s,{Zo:()=>r,ah:()=>i});var a=n(67294);const t=a.createContext({});function i(e){const s=a.useContext(t);return a.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const c={};function r({components:e,children:s,disableParentContext:n}){let r;return r=n?"function"==typeof e?e({}):e||c:i(e),a.createElement(t.Provider,{value:r},s)}}}]);