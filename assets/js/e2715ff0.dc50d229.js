"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[8974],{77298:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=r(85893),o=r(11151);const s={},c="Spaces & Cross Product",i={id:"Math/Math for Game Devs",title:"Spaces & Cross Product",description:"Spaces",source:"@site/docs/Math/Math for Game Devs.md",sourceDirName:"Math",slug:"/Math/Math for Game Devs",permalink:"/docs/Math/Math for Game Devs",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/docs/Math/Math for Game Devs.md",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1695789285,formattedLastUpdatedAt:"27 Sept 2023",frontMatter:{},sidebar:"notesSidebar",previous:{title:"Math",permalink:"/docs/Math/"}},a={},l=[{value:"Spaces",id:"spaces",level:2},{value:"Space Transform",id:"space-transform",level:3},{value:"Matrix",id:"matrix",level:2},{value:"Cross Product",id:"cross-product",level:2},{value:"References",id:"references",level:2}];function d(e){const t=Object.assign({h1:"h1",h2:"h2",ul:"ul",li:"li",p:"p",strong:"strong",h3:"h3",pre:"pre",code:"code",em:"em",a:"a",img:"img",admonition:"admonition"},(0,o.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"spaces--cross-product",children:"Spaces & Cross Product"}),"\n",(0,n.jsx)(t.h2,{id:"spaces",children:"Spaces"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"World Space"}),"\n",(0,n.jsx)(t.li,{children:"Local Space"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Every transform has their own local space."}),"\n",(0,n.jsxs)(t.p,{children:["Local space is just another ",(0,n.jsx)(t.strong,{children:"coordinate system"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Basis vectors usually have a unit of 1."}),"\n",(0,n.jsx)(t.h3,{id:"space-transform",children:"Space Transform"}),"\n",(0,n.jsx)(t.p,{children:"Below shows how to transform a point between different spaces."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public Vector2 WorldSpacePoint;\npublic Vector2 LocalSpacePoint;\nprivate void OnDrawGizmos()\n{\n    Vector2 position = transform.position;\n    Vector2 up = transform.up;\n    Vector2 right = transform.right;\n\n\n    Vector2 LocalToWorld(Vector2 localSpacePoint, Vector2 up, Vector2 right)\n    {\n        return position + (right * localSpacePoint.x + up * localSpacePoint.y);\n    }\n    \n    Vector2 WorldToLocal(Vector2 worldSpacePoint, Vector2 up, Vector2 right)\n    {\n        Vector2 originToPoint = worldSpacePoint - position;\n        float x = Vector2.Dot(originToPoint, right);\n        float y = Vector2.Dot(originToPoint, up);\n        return new Vector2(x,y);\n    }\n\n    Gizmos.DrawSphere(LocalToWorld(LocalSpacePoint, up, right), 0.1f);\n\n    Vector2 localPoint = WorldToLocal(WorldSpacePoint, up, right);\n    objTf.localPosition = localPoint;\n\n    DrawBasisVector(position, up, right);\n    DrawBasisVector(Vector2.zero, Vector2.up, Vector2.right);\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"matrix",children:"Matrix"}),"\n",(0,n.jsxs)(t.p,{children:["Game engine uses a matrix to store rotation, scale and position of a ",(0,n.jsx)(t.code,{children:"GameObject"}),"'s ",(0,n.jsx)(t.code,{children:"transform"}),".  ",(0,n.jsxs)(t.em,{children:["see 1:52:00 of the ",(0,n.jsx)(t.a,{href:"https://www.youtube.com/watch?v=XiwEyopOMqg",children:"video"}),"."]})]}),"\n",(0,n.jsx)(t.p,{children:"We can use matrix to transform vector from local space to world space or vice versa."}),"\n",(0,n.jsx)(t.h2,{id:"cross-product",children:"Cross Product"}),"\n",(0,n.jsxs)(t.p,{children:["The cross product of two vectors is a ",(0,n.jsx)(t.strong,{children:"vector"})," that is perpendicular to the two input vectors."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://twitter.com/i/status/1203059678705602562",children:"Cross product visualization"})}),"\n",(0,n.jsxs)(t.p,{children:["In Unity, the ",(0,n.jsx)(t.strong,{children:"direction"})," of the cross product is determined by the left hand rule."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\ud83d\udc4d Thumb finger - ",(0,n.jsx)(t.code,{children:"x"})]}),"\n",(0,n.jsxs)(t.li,{children:["\ud83d\udc46 Index finger - ",(0,n.jsx)(t.code,{children:"y"})]}),"\n",(0,n.jsxs)(t.li,{children:["\ud83d\udd95 Middle finger - ",(0,n.jsx)(t.code,{children:"z"})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"magnitude"})," of the resultant vector is the area of the ",(0,n.jsx)(t.strong,{children:"parallelogram"})," determiend by the two input vectors."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://qph.cf2.quoracdn.net/main-qimg-7a2c62bc858f9dc24b31b43477c69632",alt:"Cross product magnitude"})}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsx)(t.p,{children:"Use cases:"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Place items on terrain."}),"\n"]})]}),"\n",(0,n.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.youtube.com/watch?v=XiwEyopOMqg",children:"Spaces & Cross Product \u2022 Math for Game Devs [Part 2]"})}),"\n"]})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}},11151:(e,t,r)=>{r.d(t,{Zo:()=>i,ah:()=>s});var n=r(67294);const o=n.createContext({});function s(e){const t=n.useContext(o);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const c={};function i({components:e,children:t,disableParentContext:r}){let i;return i=r?"function"==typeof e?e({}):e||c:s(e),n.createElement(o.Provider,{value:i},t)}}}]);