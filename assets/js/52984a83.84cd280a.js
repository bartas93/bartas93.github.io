"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[1124],{54822:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(85893),n=t(11151);const i={sidebar_label:"A Tour of Computer Systems",description:"A computer systems consists of hardware and systems software that work together to run application programs."},o="A Tour of Computer Systems",a={id:"cs24-introduction-to-computer-systems/a-tour-of-computer-systems",title:"A Tour of Computer Systems",description:"A computer systems consists of hardware and systems software that work together to run application programs.",source:"@site/university/cs24-introduction-to-computer-systems/010-a-tour-of-computer-systems.mdx",sourceDirName:"cs24-introduction-to-computer-systems",slug:"/cs24-introduction-to-computer-systems/a-tour-of-computer-systems",permalink:"/university/cs24-introduction-to-computer-systems/a-tour-of-computer-systems",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/university/cs24-introduction-to-computer-systems/010-a-tour-of-computer-systems.mdx",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1714897878,formattedLastUpdatedAt:"05 May 2024",sidebarPosition:10,frontMatter:{sidebar_label:"A Tour of Computer Systems",description:"A computer systems consists of hardware and systems software that work together to run application programs."},sidebar:"university",previous:{title:"Query Processing",permalink:"/university/cab432-search-engine-technology/query-processing"}},c={},d=[{value:"Hardware Organization of a System",id:"hardware-organization-of-a-system",level:2},{value:"Buses",id:"buses",level:3},{value:"I/O Devices",id:"io-devices",level:3},{value:"Main Memory",id:"main-memory",level:3},{value:"Processor",id:"processor",level:3},{value:"Program Counter",id:"program-counter",level:4},{value:"Register",id:"register",level:4},{value:"Caches",id:"caches",level:2},{value:"Storage Devices From a Hierarchy",id:"storage-devices-from-a-hierarchy",level:2}];function h(e){const s=Object.assign({h1:"h1",h2:"h2",p:"p",img:"img",h3:"h3",strong:"strong",em:"em",admonition:"admonition",ul:"ul",li:"li",a:"a",h4:"h4"},(0,n.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"a-tour-of-computer-systems",children:"A Tour of Computer Systems"}),"\n",(0,r.jsx)(s.h2,{id:"hardware-organization-of-a-system",children:"Hardware Organization of a System"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Hardwares",src:t(84689).Z+"",width:"1356",height:"707"})}),"\n",(0,r.jsx)(s.h3,{id:"buses",children:"Buses"}),"\n",(0,r.jsxs)(s.p,{children:["Running throughout the system is a collection of electrical conduits called ",(0,r.jsx)(s.strong,{children:"buses"})," that carrary bytes of information back and forth between components."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Buses"})," are designed to transfer fixed-size chunks of bytes known as ",(0,r.jsx)(s.strong,{children:"words"}),". The number of bytes in a word (the ",(0,r.jsx)(s.em,{children:"word size"}),") is a fundamental system parameter that varies across systems."]}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.em,{children:"word size"})," determines the size of the data units that can be processed by the processor."]}),(0,r.jsx)(s.p,{children:"Word size is a fundamental concept in CPU architecture, and it refers to the number of bits that a CPU can process and manipulate as a single unit. It determines the size of the following:"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Processor registers"}),"\n",(0,r.jsx)(s.li,{children:"Memory addresses"}),"\n",(0,r.jsx)(s.li,{children:"Instruction operands"}),"\n",(0,r.jsx)(s.li,{children:"Data types (e.g., integers, floating-point numbers)"}),"\n",(0,r.jsx)(s.li,{children:"Internal data paths (e.g., ALU, load/store unit)"}),"\n"]}),(0,r.jsx)(s.p,{children:"Common word sizes for CPU architectures include:"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"8-bit (e.g., Intel 8080)"}),"\n",(0,r.jsx)(s.li,{children:"16-bit (e.g., Intel 8086)"}),"\n",(0,r.jsx)(s.li,{children:"32-bit (e.g., Intel 80386)"}),"\n",(0,r.jsx)(s.li,{children:"64-bit (e.g., AMD Opteron, Intel Core i7)"}),"\n"]})]}),"\n",(0,r.jsx)(s.h3,{id:"io-devices",children:"I/O Devices"}),"\n",(0,r.jsx)(s.p,{children:"Input/Output devices are the system's connection to the external world."}),"\n",(0,r.jsxs)(s.p,{children:["Each I/O device is connected to the I/O bus by either a ",(0,r.jsx)(s.em,{children:"controller"})," or ",(0,r.jsx)(s.em,{children:"adapter"}),". The purpose of ",(0,r.jsx)(s.em,{children:"controller"})," and ",(0,r.jsx)(s.em,{children:"adapter"})," is to transfer information between the I/O bus and an I/O device."]}),"\n",(0,r.jsx)(s.h3,{id:"main-memory",children:"Main Memory"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Main Memory"})," also known as ",(0,r.jsx)(s.strong,{children:"Random Access Memory (RAM)"})," is a temporary storage device that holds data and applications while a computer is running."]}),"\n",(0,r.jsx)(s.admonition,{type:"caution",children:(0,r.jsxs)(s.p,{children:["It is a ",(0,r.jsx)(s.strong,{children:"volatile"})," memory techonology, meaning that its contents are lost when the computer is powered off."]})}),"\n",(0,r.jsx)(s.h3,{id:"processor",children:"Processor"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.em,{children:"central processing unit"})," (CPU) is the engine that interprets (or ",(0,r.jsx)(s.em,{children:"executes"}),") instructions stored in ",(0,r.jsx)(s.a,{href:"#main-memory",children:"main memory"}),"."]}),"\n",(0,r.jsx)(s.h4,{id:"program-counter",children:"Program Counter"}),"\n",(0,r.jsxs)(s.p,{children:["The core of a CPU is a word-sized storage device (or ",(0,r.jsx)(s.em,{children:"register"}),") called ",(0,r.jsx)(s.em,{children:"program counter"})," (PC). It contains the memory address of the next instruction to be executed. The ",(0,r.jsx)(s.strong,{children:"PC"})," is incremented each an instruction is fetched, so it always points to the address of the next instruction in memory."]}),"\n",(0,r.jsx)(s.h4,{id:"register",children:"Register"}),"\n",(0,r.jsx)(s.p,{children:"Is a small amount of storage that is easily accessible to the processor. It is used to hold data and instructions temporarily."}),"\n",(0,r.jsx)(s.h2,{id:"caches",children:"Caches"}),"\n",(0,r.jsx)(s.p,{children:"A system spends a lot of time moving information from one place to another."}),"\n",(0,r.jsxs)(s.p,{children:["To improve the performance, system designers include smaller faster storage devices called ",(0,r.jsx)(s.em,{children:"cache memories"})," that serve as temporary staging areas for information that the processor is likely to need in the near future."]}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"L1"})," and ",(0,r.jsx)(s.strong,{children:"L2"})," caches are implemented with a hardware techonology known as ",(0,r.jsx)(s.em,{children:"static random access memory"})," (SRAM)."]}),"\n",(0,r.jsx)(s.h2,{id:"storage-devices-from-a-hierarchy",children:"Storage Devices From a Hierarchy"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Memory Hierarchy",src:t(40230).Z+"",width:"1167",height:"693"})}),"\n",(0,r.jsx)(s.p,{children:"The main idea of a memory hierarchy is that storage at one level serves as a cache for storage at the next lower level."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The register file is a cache for the L1 cache."}),"\n",(0,r.jsx)(s.li,{children:"Caches L1 and L2 are caches for L2 and L3 respectively."}),"\n",(0,r.jsx)(s.li,{children:"The L3 cache is a cache for the main memory, which is a cache for the disk."}),"\n",(0,r.jsx)(s.li,{children:"The local disk serves as a cache for data stored on the disks of other systems. (S3 buckets)"}),"\n"]})]})}const l=function(e={}){const{wrapper:s}=Object.assign({},(0,n.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(h,e)})):h(e)}},84689:(e,s,t)=>{t.d(s,{Z:()=>r});const r=t.p+"assets/images/fig-1.4-6c79bff5fd287f1290d6f37996d67470.png"},40230:(e,s,t)=>{t.d(s,{Z:()=>r});const r=t.p+"assets/images/fig-1.9-5a8ceab83d61dd047696343d4b15f8a2.png"},11151:(e,s,t)=>{t.d(s,{Zo:()=>a,ah:()=>i});var r=t(67294);const n=r.createContext({});function i(e){const s=r.useContext(n);return r.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const o={};function a({components:e,children:s,disableParentContext:t}){let a;return a=t?"function"==typeof e?e({}):e||o:i(e),r.createElement(n.Provider,{value:a},s)}}}]);