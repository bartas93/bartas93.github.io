"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[2837],{54696:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=t(85893),r=t(11151);const s={description:"Introduction to the reflow and repaint."},o="Reflow and Repaint",l={id:"Web/Browser/reflow-repaint",title:"Reflow and Repaint",description:"Introduction to the reflow and repaint.",source:"@site/docs/Web/Browser/02-reflow-repaint.md",sourceDirName:"Web/Browser",slug:"/Web/Browser/reflow-repaint",permalink:"/docs/Web/Browser/reflow-repaint",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/docs/Web/Browser/02-reflow-repaint.md",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1695920464,formattedLastUpdatedAt:"28 Sept 2023",sidebarPosition:2,frontMatter:{description:"Introduction to the reflow and repaint."},sidebar:"notesSidebar",previous:{title:"What's a Preload Scanner?",permalink:"/docs/Web/Browser/preload-scanner"},next:{title:"Computer Network",permalink:"/docs/Web/Network/"}},a={},c=[{value:"Repaint",id:"repaint",level:2},{value:"Reflow (Layout)",id:"reflow-layout",level:2},{value:"Minimizing Repaints and Reflows",id:"minimizing-repaints-and-reflows",level:2},{value:"References",id:"references",level:2}];function d(e){const n=Object.assign({h1:"h1",p:"p",ol:"ol",li:"li",code:"code",strong:"strong",ul:"ul",h2:"h2",a:"a"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"reflow-and-repaint",children:"Reflow and Repaint"}),"\n",(0,i.jsx)(n.p,{children:"How the browser renders the document?"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Receives the data (bytes) from the server."}),"\n",(0,i.jsx)(n.li,{children:"Parses and converts into tokens (<, TagName, Attribute, AttributeValue, >)."}),"\n",(0,i.jsx)(n.li,{children:"Turns tokens into nodes."}),"\n",(0,i.jsx)(n.li,{children:"Turns nodes into the DOM tree."}),"\n",(0,i.jsxs)(n.li,{children:["Builds CSSOM tree from the ",(0,i.jsx)(n.code,{children:"css rules"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["CSSOM and DOM trees are combined into a ",(0,i.jsx)(n.strong,{children:"Render Tree"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Computes which elements are visible and their computed styles."}),"\n",(0,i.jsx)(n.li,{children:"Starting from the root of the dom tree."}),"\n",(0,i.jsxs)(n.li,{children:["Not visible elements like (",(0,i.jsx)(n.code,{children:"meta"}),", ",(0,i.jsx)(n.code,{children:"script"}),", ",(0,i.jsx)(n.code,{children:"link"}),") and ",(0,i.jsx)(n.code,{children:"display: none"})," are omitted from the render tree."]}),"\n",(0,i.jsx)(n.li,{children:"For each visible node, find the appropriate matching CSSOM rules and apply them."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"repaint",children:"Repaint"}),"\n",(0,i.jsxs)(n.p,{children:["Occurs when changes affect the visibility. For example, ",(0,i.jsx)(n.code,{children:"opacity"}),", ",(0,i.jsx)(n.code,{children:"color"}),"(the alpha channel), ",(0,i.jsx)(n.code,{children:"background-color"}),", ",(0,i.jsx)(n.code,{children:"visibility"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"reflow-layout",children:"Reflow (Layout)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Occurs when the changes affect the layout."}),"\n",(0,i.jsxs)(n.li,{children:["Triggers: ",(0,i.jsx)(n.code,{children:"width"}),", ",(0,i.jsx)(n.code,{children:"position"}),", ",(0,i.jsx)(n.code,{children:"float"}),", change DOM, scrolling."]}),"\n",(0,i.jsx)(n.li,{children:"Recalculate of positions and sizes."}),"\n",(0,i.jsxs)(n.li,{children:["Has a ",(0,i.jsx)(n.strong,{children:"bigger"})," impact, changing a single element can affect all children, ancestors, and siblings or the whole document."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"minimizing-repaints-and-reflows",children:"Minimizing Repaints and Reflows"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Batch DOM changes"}),"\n",(0,i.jsx)(n.li,{children:"Don't ask for computed styles repeatedly, cache them into variable."}),"\n",(0,i.jsx)(n.li,{children:"Use ID-Based Selectors."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://gist.github.com/faressoft/36cdd64faae21ed22948b458e6bf04d5",children:"DOM Performance"})}),"\n"]})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(d,e)})):d(e)}},11151:(e,n,t)=>{t.d(n,{Zo:()=>l,ah:()=>s});var i=t(67294);const r=i.createContext({});function s(e){const n=i.useContext(r);return i.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function l({components:e,children:n,disableParentContext:t}){let l;return l=t?"function"==typeof e?e({}):e||o:s(e),i.createElement(r.Provider,{value:l},n)}}}]);