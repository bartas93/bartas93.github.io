"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[2890],{76761:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var s=i(85893),r=i(11151);const a={sidebar_label:"Machine Learning Basics",title:"Machine Learning Basics"},t=void 0,l={id:"cab420-machine-learning/machine-learning-basics",title:"Machine Learning Basics",description:"What is Machine Learning?",source:"@site/university/cab420-machine-learning/010-machine-learning-basics.md",sourceDirName:"cab420-machine-learning",slug:"/cab420-machine-learning/machine-learning-basics",permalink:"/university/cab420-machine-learning/machine-learning-basics",draft:!1,unlisted:!1,editUrl:"https://github.com/xiaohai-huang/learning-notes/tree/master/university/cab420-machine-learning/010-machine-learning-basics.md",tags:[],version:"current",lastUpdatedBy:"xiaohai-huang",lastUpdatedAt:1648257355,formattedLastUpdatedAt:"26 Mar 2022",sidebarPosition:10,frontMatter:{sidebar_label:"Machine Learning Basics",title:"Machine Learning Basics"},sidebar:"university",previous:{title:"Machine Learning",permalink:"/university/cab420-machine-learning/"},next:{title:"Simple Linear Regression",permalink:"/university/cab420-machine-learning/simple-linear-regression"}},d={},o=[{value:"What is Machine Learning?",id:"what-is-machine-learning",level:2},{value:"Types of Machine Learning",id:"types-of-machine-learning",level:2},{value:"Supervised",id:"supervised",level:3},{value:"Unsupervised",id:"unsupervised",level:3},{value:"Semi-Supervised",id:"semi-supervised",level:3},{value:"Reinforcement",id:"reinforcement",level:3},{value:"Data Splitting for Machine Learning",id:"data-splitting-for-machine-learning",level:2},{value:"Training",id:"training",level:3},{value:"Validation",id:"validation",level:3},{value:"Testing",id:"testing",level:3},{value:"Holdout Validation",id:"holdout-validation",level:3},{value:"Cross-Fold Validation",id:"cross-fold-validation",level:3},{value:"Neural Networks",id:"neural-networks",level:2},{value:"History",id:"history",level:3},{value:"How Much Depth?",id:"how-much-depth",level:3},{value:"More Deep is More Better?",id:"more-deep-is-more-better",level:3},{value:"Deep Learning Pipeline",id:"deep-learning-pipeline",level:3},{value:"Deep Learning: Pros and Cons",id:"deep-learning-pros-and-cons",level:3},{value:"Pros",id:"pros",level:4},{value:"Cons",id:"cons",level:4},{value:"References",id:"references",level:2}];function h(e){const n=Object.assign({h2:"h2",blockquote:"blockquote",p:"p",h3:"h3",ol:"ol",li:"li",ul:"ul",admonition:"admonition",code:"code",a:"a",strong:"strong",img:"img",h4:"h4",em:"em"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"what-is-machine-learning",children:"What is Machine Learning?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Machine learning is a branch of artificial intelligence (AI) and computer science which focuses on the use of data and algorithms to imitate the way that humans learn, gradually improving its accuracy."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"types-of-machine-learning",children:"Types of Machine Learning"}),"\n",(0,s.jsx)(n.h3,{id:"supervised",children:"Supervised"}),"\n",(0,s.jsx)(n.p,{children:"Task Driven (Regression/Classification)"}),"\n",(0,s.jsx)(n.p,{children:"We have labeled data - we know that the answer should be"}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Object tracking"}),"\n",(0,s.jsx)(n.li,{children:"Image classification"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"unsupervised",children:"Unsupervised"}),"\n",(0,s.jsx)(n.p,{children:"Data Driven (Clustering)\nNo labelling - knowledge discovery"}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Detect abnormal behaviors"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"semi-supervised",children:"Semi-Supervised"}),"\n",(0,s.jsx)(n.p,{children:"Only some (usually a small amount of data) is labelled"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Half way between supervised and unsupervised learning"}),"\n",(0,s.jsx)(n.li,{children:"Learn from labelled and unlabelled data"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"reinforcement",children:"Reinforcement"}),"\n",(0,s.jsx)(n.p,{children:"Algorithms learn to react to an environment"}),"\n",(0,s.jsx)(n.p,{children:"Learn through interactive environment"}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Robot"}),"\n",(0,s.jsx)(n.li,{children:"AlphGo"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-splitting-for-machine-learning",children:"Data Splitting for Machine Learning"}),"\n",(0,s.jsx)(n.h3,{id:"training",children:"Training"}),"\n",(0,s.jsx)(n.p,{children:"It is the set of data that is used to train and make the model learn the hidden features/patterns in the data."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The training set should have a diversified set of inputs so that the model is trained in all scenarios and can predict any unseen data sample that may appear in the future."})}),"\n",(0,s.jsx)(n.h3,{id:"validation",children:"Validation"}),"\n",(0,s.jsx)(n.p,{children:"The validation set is a set of data, separate from the training set, that is used to validate our model performance during training"}),"\n",(0,s.jsx)(n.p,{children:"The model is trained on the training set, and, simultaneously, the model evaluation is performed on the validation set after every epoch."}),"\n",(0,s.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.p,{children:"The test set is a separate set of data used to test the model after completing the training."}),"\n",(0,s.jsx)(n.p,{children:'It answers the question of "How well does the model perform?"'}),"\n",(0,s.jsx)(n.h3,{id:"holdout-validation",children:"Holdout Validation"}),"\n",(0,s.jsx)(n.p,{children:"The data set is separated into two sets, called the training set and the testing set."}),"\n",(0,s.jsx)(n.h3,{id:"cross-fold-validation",children:"Cross-Fold Validation"}),"\n",(0,s.jsxs)(n.p,{children:["Pick up a number ",(0,s.jsx)(n.code,{children:"k"})," which stands for the number of groups that the data set is going to be split into. If k=10, it would be called 10-fold cross-validation."]}),"\n",(0,s.jsx)(n.p,{children:"The general procedure is as follows:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Shuffle the dataset randomly."}),"\n",(0,s.jsxs)(n.li,{children:["Split the dataset into ",(0,s.jsx)(n.code,{children:"k"})," groups."]}),"\n",(0,s.jsxs)(n.li,{children:["For each unique group:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Pick one group as a test set"}),"\n",(0,s.jsx)(n.li,{children:"Take the remaining groups as a training set"}),"\n",(0,s.jsx)(n.li,{children:"Fit the model on the training set and evaluate the model on the selected test set (from step i)."}),"\n",(0,s.jsx)(n.li,{children:"Record the evaluation score and discard the model"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=fSytzGwwBVw&t=78s",children:"StatQuest Explanation"})}),"\n",(0,s.jsx)(n.h2,{id:"neural-networks",children:"Neural Networks"}),"\n",(0,s.jsx)(n.p,{children:"A computer system modelled on the human brain and nervous system - Built on simple, stacked operations"}),"\n",(0,s.jsx)(n.p,{children:"Typically have high number of parameters & lots of interconnections"}),"\n",(0,s.jsxs)(n.p,{children:["Data ",(0,s.jsx)(n.strong,{children:"propagates"})," through the networks"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Input -> Intermediate Layers -> Output"}),"\n",(0,s.jsx)(n.li,{children:"Similar to how we think the brain works"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"neural network",src:i(77838).Z+"",width:"640",height:"853"})}),"\n",(0,s.jsx)(n.h3,{id:"history",children:"History"}),"\n",(0,s.jsx)(n.p,{children:"Initial research started in 1940's and 50's"}),"\n",(0,s.jsx)(n.p,{children:"Deep Learning"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Emerged in the late 2000's"}),"\n",(0,s.jsx)(n.li,{children:'Win ImageNet competition in 2012 with "AlexNet"'}),"\n",(0,s.jsx)(n.li,{children:"The dominant machine learning method across most domains"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"how-much-depth",children:"How Much Depth?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"deep networks",src:i(90571).Z+"",width:"570",height:"507"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AlexNet, 8 layers"}),"\n",(0,s.jsx)(n.li,{children:"VGG10, 19 layers"}),"\n",(0,s.jsx)(n.li,{children:"ResNet, 50 to 152 layers"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Benefits diminish as we get deeper. i.e. going from 3 to 15 layers gives a huge ",(0,s.jsx)(n.strong,{children:"gain"}),", however, going from 100 to 500 doesn't add much"]})}),"\n",(0,s.jsx)(n.h3,{id:"more-deep-is-more-better",children:"More Deep is More Better?"}),"\n",(0,s.jsx)(n.p,{children:"More depth gives"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Pros:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ability to learn higher level features -> a richer representation"}),"\n",(0,s.jsx)(n.li,{children:"More parameters -> more representative power"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Cons:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"More parameters -> harder to learn & more likely to overfit"}),"\n",(0,s.jsx)(n.li,{children:"More layers -> further for gradients to propagate"}),"\n",(0,s.jsxs)(n.li,{children:["Harder to fit ",(0,s.jsx)(n.strong,{children:"networks"})," in memory","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Need specialist hardware, and very long times to train"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"deep-learning-pipeline",children:"Deep Learning Pipeline"}),"\n",(0,s.jsx)(n.p,{children:"Common Pipeline:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Pre-processing","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Resizing, filtering, noise reduction"}),"\n",(0,s.jsx)(n.li,{children:"Input images (usually) need to be the same size"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Deep Learning","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Pass raw data to network"}),"\n",(0,s.jsx)(n.li,{children:"Let the network learn its own representation and make the decision in one pass"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"How do we remove the human-driven feature extraction process?"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Answer:"})," It is being done in the network. The layers at the beginning of deep networks can perform feature extractions, then the later layers learn the classification (or other tasks)"]})]}),"\n",(0,s.jsx)(n.h3,{id:"deep-learning-pros-and-cons",children:"Deep Learning: Pros and Cons"}),"\n",(0,s.jsx)(n.h4,{id:"pros",children:"Pros"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Easy to extend model to multiple tasks, or ",(0,s.jsx)(n.strong,{children:"adapt"})," to new tasks (utilize ",(0,s.jsx)(n.em,{children:"image models"})," in audio domain - sound wave image)"]}),"\n",(0,s.jsx)(n.li,{children:"No feature engineering"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"cons",children:"Cons"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:'Models are huge compared to "traditional" approaches'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Millions"})," vs ",(0,s.jsx)(n.strong,{children:"Hundreds"})," of parameters"]}),"\n",(0,s.jsx)(n.li,{children:"Requires more data, runtime, and memory"}),"\n",(0,s.jsxs)(n.li,{children:["Models are harder to interpret","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Explainable AI. Why did my model make this decision? Too many parameters"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Get rid of feature engineering, but introduce network engineering"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Choose hyper parameters - what layers, how many, what parameters, etc."}),"\n",(0,s.jsxs)(n.li,{children:["Can be very ",(0,s.jsx)(n.strong,{children:"slow"})," to iterate over these decisions."]}),"\n",(0,s.jsx)(n.li,{children:'May not be possible to determine a truly "optimal" decision.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.v7labs.com/blog/train-validation-test-set",children:"The Train, Validation, and Test Sets: How to Split Your Machine Learning Data"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.cs.cmu.edu/~schneide/tut5/node42.html",children:"Cross Validation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=fSytzGwwBVw&t=78s",children:"Cross Validation - StatQuest Explanation"})}),"\n"]})]})}const c=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(h,e)})):h(e)}},77838:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/Neural_network_example-68b974d8eb3cc0ada93fba50965896ce.png"},90571:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/deep_networks-3aad709e8b94e60cd39e6b7caa462e45.jpg"},11151:(e,n,i)=>{i.d(n,{Zo:()=>l,ah:()=>a});var s=i(67294);const r=s.createContext({});function a(e){const n=s.useContext(r);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const t={};function l({components:e,children:n,disableParentContext:i}){let l;return l=i?"function"==typeof e?e({}):e||t:a(e),s.createElement(r.Provider,{value:l},n)}}}]);