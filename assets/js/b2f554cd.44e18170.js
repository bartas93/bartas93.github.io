"use strict";(self.webpackChunklearning_notes=self.webpackChunklearning_notes||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2024/02/28/taobao-interview-round-1","metadata":{"permalink":"/blog/2024/02/28/taobao-interview-round-1","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2024/02-28-taobao-interview-round-1/index.mdx","source":"@site/blog/2024/02-28-taobao-interview-round-1/index.mdx","title":"Taobao HangZhou Interview Round 1","description":"1.  How do you decide when to run useLayoutEffect?","date":"2024-02-28T00:00:00.000Z","formattedDate":"28 February 2024","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":2.585,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Taobao HangZhou Interview Round 1","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"nextItem":{"title":"Perform In-Game Updates in Unity using HybridCLR and Addressables","permalink":"/blog/2023/03/25/unity-hot-update"}},"content":"1.  How do you decide when to run `useLayoutEffect`?\\n\\n    Ans: `useLayoutEffect` is a version of `useEffect` that fires before the browser **repaints** the screen.\\n\\n    - Measuring layout before the browser repaints the screen.\\n    - Blocks the browser from repainting.\\n\\n1.  The execution order of `useEffect` and `useLayoutEffect`.\\n\\n    | Feature          | useEffect                                                                                                                 | useLayoutEffect                                                                                                                                                                             |\\n    | ---------------- | ------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n    | Execution Timing | Runs after the render is committed to the screen. This means it runs after the browser has painted changes to the screen. | Runs synchronously after all DOM mutations. This means it runs before the browser has a chance to paint, making it suitable for reading layout from the DOM and synchronously re-rendering. |\\n    | Use Cases        | Most side effects (data fetching, subscriptions)                                                                          | DOM manipulation, measuring elements, critical layout updates                                                                                                                               |\\n    | Performance      | Generally better performance due to async nature                                                                          | Can impact performance if used excessively, as it blocks the browser from repainting                                                                                                        |\\n\\n\x3c!-- truncate --\x3e\\n\\n    ```jsx live\\n    function Clock(props) {\\n      const [a, setA] = useState(0);\\n      useEffect(() => {\\n        console.log(\\"1\\");\\n      }, []);\\n      useEffect(() => {\\n        console.log(\\"2\\");\\n      }, [a]);\\n      useEffect(() => {\\n        console.log(\\"3\\");\\n      }, []);\\n      useEffect(() => {\\n        console.log(\\"4\\");\\n      }, []);\\n\\n      useLayoutEffect(() => {\\n        console.log(\\"layoutEffect\\");\\n      }, []);\\n\\n      return (\\n        <pre>\\n          {`\\n    layoutEffect\\n    1\\n    2\\n    3\\n    4\\n    `}\\n        </pre>\\n      );\\n    }\\n    ```\\n\\n1.  function chaining\\n\\n    ```js\\n    // new Monkey(\'xiaohai\').eat(\'apple\').sleep(3).eat(\'banana\').eat(\'rice\').sleep(1).eat(\'orange\')\\n    // My name is xiaohai\\n    // Eating apple\\n    // ...sleep for 3 seconds\\n    // Eating banana\\n    // Eating rice\\n    // ...sleep for 1 seconds\\n    // Eating orange\\n    class Monkey {\\n      constructor(name) {\\n        this.name = name;\\n        this.queue = [];\\n        console.log(`My name is ${name}`);\\n\\n        // start all the tasks\\n        setTimeout(() => {\\n          this.#onComplete();\\n        }, 0);\\n      }\\n\\n      #onComplete = () => {\\n        const task = this.queue.shift();\\n        task && task();\\n      };\\n\\n      #enqueue = (task) => {\\n        this.queue.push(() => task(this.#onComplete));\\n      };\\n\\n      sleep(seconds) {\\n        this.#enqueue((next) => {\\n          setTimeout(next, seconds * 1000);\\n        });\\n\\n        return this;\\n      }\\n\\n      eat(food) {\\n        this.#enqueue((next) => {\\n          console.log(`Eating ${food}`);\\n          next();\\n        });\\n        return this;\\n      }\\n    }\\n    ```\\n\\n1.  HTTP 1 vs HTTP 2\\n\\n    | **Protocol Version**      | HTTP/1.1                                                             | HTTP/2                                                                                  |\\n    | ------------------------- | -------------------------------------------------------------------- | --------------------------------------------------------------------------------------- |\\n    | **Multiplexing**          | No                                                                   | Yes, multiple requests can be sent over a single connection                             |\\n    | **Stream Prioritization** | No                                                                   | Yes, allows the client to prioritize requests                                           |\\n    | **Header Compression**    | No                                                                   | Yes, using HPACK compression                                                            |\\n    | **Server Push**           | No                                                                   | Yes, allows the server to send resources to the client proactively                      |\\n    | **Binary Protocol**       | Text-based                                                           | Binary, more efficient for parsing                                                      |\\n    | **Connection Management** | Connection per request/response                                      | Single connection for multiple requests/responses                                       |\\n    | **Performance**           | Slower due to multiple connections and latency                       | Faster due to multiplexing, header compression, and binary protocol                     |\\n    | **Security**              | SSL/TLS for encryption                                               | TLS 1.2 or higher required, with additional features like ALPN for protocol negotiation |\\n    | **Compatibility**         | Widely supported, but requires separate connections for each request | Requires HTTPS and modern browsers/servers                                              |\\n    | **Use Cases**             | Ideal for simple, stateless requests                                 | Ideal for complex, stateful applications with many small requests                       |"},{"id":"/2023/03/25/unity-hot-update","metadata":{"permalink":"/blog/2023/03/25/unity-hot-update","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2023/03-25-unity-hot-update/index.md","source":"@site/blog/2023/03-25-unity-hot-update/index.md","title":"Perform In-Game Updates in Unity using HybridCLR and Addressables","description":"A solution that allows you to update both code and resources without requiring users to download a new version of the app","date":"2023-03-25T00:00:00.000Z","formattedDate":"25 March 2023","tags":[{"label":"Unity","permalink":"/blog/tags/unity"},{"label":"Game","permalink":"/blog/tags/game"},{"label":"Hot Update","permalink":"/blog/tags/hot-update"},{"label":"Addressables","permalink":"/blog/tags/addressables"}],"readingTime":11.82,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Perform In-Game Updates in Unity using HybridCLR and Addressables","authors":"xiaohai","description":"A solution that allows you to update both code and resources without requiring users to download a new version of the app","tags":["Unity","Game","Hot Update","Addressables"]},"unlisted":false,"prevItem":{"title":"Taobao HangZhou Interview Round 1","permalink":"/blog/2024/02/28/taobao-interview-round-1"},"nextItem":{"title":"Serve Static Website Stored On Remote Server Using Nginx","permalink":"/blog/2023/03/18/serve-static-site-with-nginx"}},"content":"Imagine you are playing your favorite game on your phone. You are enjoying the graphics, the gameplay, and the story. Suddenly, you encounter a bug that crashes the game. You check the app store for an update, but there is none. You are frustrated and disappointed.\\n\\nNow imagine you are developing a game with Unity. You want to deliver the best experience to your players, but you also want to save time and money. You don\'t want to recompile and resubmit your entire project every time you need to fix a bug or add a feature. You want to update your game without requiring users to download a new version of the app.\\n\\nHow can you achieve this?\\n\\nThe answer is hot updating.\\n\\nHot updating is a technique that allows you to update both code and resources of your game at runtime. This means that you can fix bugs, add features, and optimize performance without affecting the user experience.\\n\\nBut how can you implement hot updating in Unity?\\n\\nIn this blog post, I will introduce you a solution that can help you perform in-game updates in Unity with minimal effort and maximum flexibility. It is based on two open source projects: [__HybridCLR__](https://github.com/focus-creative-games/hybridclr) and  [__Addressables__](https://docs.unity3d.com/Packages/com.unity.addressables@1.21/manual/index.html).\\n\\n[__HybridCLR__](https://github.com/focus-creative-games/hybridclr) is a framework that allows you to write C# code that can be compiled into IL2CPP or Mono assemblies at runtime. This means that you can update your game logic without recompiling your entire project.\\n\\n[__Addressables__](https://docs.unity3d.com/Packages/com.unity.addressables@1.21/manual/index.html) is a Unity package that provides an easy way to load assets by key from local or remote locations.\\n\\nBy combining these two tools, you can perform in-game updates in Unity with minimal effort and maximum flexibility.\\n\\nIn this blog post, I will show you how to use HybridCLR and Addressables to perform in-game updates in Unity, and demonstrate how this solution can improve your game development workflow and user experience.\\n\\n\x3c!-- truncate --\x3e\\n\\n## How to Install HybridCLR and Addressables\\n\\nBefore we can use HybridCLR and Addressables to perform in-game updates in Unity, we need to install and configure them properly. In this section, I will show you how to do that in a few simple steps.\\n\\nFirst, open __Package Manager__ from the menu bar and install the following two packages:\\n\\n- __Addressables__ - This package is available in Unity Registry. It provides an easy way to load assets by key from local or remote locations.\\n- __HybridCLR__ - This package is not available in Unity Registry. You need to use `Add package from git URL...` option and enter this URL: [https://gitee.com/focus-creative-games/hybridclr_unity.git](https://gitee.com/focus-creative-games/hybridclr_unity.git). This package is a framework that allows you to write C# code that can be compiled into IL2CPP or Mono assemblies at runtime.\\n\\n## Initialize HybridCLR\\n\\nNext, open `HybridCLR/Installer...` from the menu bar to install and initialize HybridCLR.\\n\\n![installer](./HybridCLR-Installer.png)\\n\\n## Project Configuration For HybridCLR\\n\\n### Configure Player Settings\\n\\n- Disable __`Use Incremental GC`__. HybridCLR does not support this feature at the moment. This means that garbage collection will happen less frequently but more intensively.\\n- Set __`Scripting Backend`__ to `IL2CPP`. This is the scripting backend that HybridCLR uses to compile dynamic assemblies at runtime. It has better performance and security than Mono.\\n- Set __`Api Compatiability Level`__ to `.Net Framework`. This is the API level that HybridCLR uses to compile dynamic assemblies at runtime.\\n\\n\\n![Player settings](player-settings.png)\\n\\n### How to Split Assemblies into Static and Dynamic\\n\\nIn order to use HybridCLR to update our game code at runtime, we need to split our project\'s assemblies into two main categories: static assemblies and dynamic assemblies. Static assemblies are the ones that will be compiled into our app\'s binary file. Dynamic assemblies are the ones that will be compiled at runtime and can be updated without recompiling our app.\\n\\n\\nStatic assemblies are also called AOT (Ahead-of-Time) assemblies because they are compiled before the app is launched. They have better performance and security than dynamic assemblies, but they cannot be updated after publishing.\\n\\nDynamic assemblies are also called Hot Update assemblies because they can be updated after publishing. They have more flexibility and convenience than static assemblies, but they have lower performance and security.\\n\\nIn this section, I will show you how to split our project\'s assemblies into static and dynamic using assembly definitions. I will also show you how to configure HybridCLR settings to recognize which assemblies are Hot Update assemblies.\\n\\nIn this example, I will create a static assembly called __`Assembly-Entry.dll`__ using an assembly definition. It simply loads the Home Screen of my app using `Addressables.LoadSceneAsync();`. The Home Screen will download the Hot Update assemblies from the remote server and load them.\\n\\n\\nAnd I will use the default __`Assembly-CSharp.dll`__ for game logic and __`Assembly-Updater.dll`__ for updater as my Hot Update assemblies. The published app will load these two assemblies dynamically in order to update the game. Note: I can add more assemblies as Hot Update assemblies if necessary.\\n\\n\\nHere is how to do it in action:\\n\\n1. Create a folder `Assets/Scripts/Entry` and create an assembly definition \\"Assembly-Entry.asmdef\\".\\n2. Create a folder `Assets/Scripts/Home Screen` and create an assembly definition \\"Assembly-Updater.asmdef\\".\\n\\n\\n:::info\\n\\nBy default, Unity compiles almost all of your game scripts into the predefined assembly, __`Assembly-CSharp.dll`__.\\n\\n:::\\n\\nNext, open __`HybridCLR/Settings`__ from the menu bar and pay attention to these two fields:\\n\\n- __`Hot Update Assembly Definitions`__\\n- __`Hot Update Assemblies`__\\n\\nThese two fields are equivalent. Do not add the same assembly twice.\\n\\n\\nIn this example, I will add `Assembly-CSharp` and `Assembly-Updater` (without `.dll`) to __`Hot Update Assemblies`__.\\n\\n![add hot assemblies in settings](hybrid-settings.png)\\n\\n\\n:::warning\\n\\nDo not add __`Assembly-Entry.dll`__, because it is shipped with the app and cannot be updated.\\n\\n:::\\n\\nNow we have split our project\'s assemblies into static and dynamic using assembly definitions. We have also configured HybridCLR settings to recognize which assemblies are Hot Update assemblies. In the next section, we will see how to use Addressables to update our game resources.\\n\\n## Set Up Scenes and Addressables\\n\\nIn order to use Addressables to update our game resources at runtime, we need to set up our scenes and configure Addressables properly. In this section, I will show you how to do that in a few simple steps.\\n\\nAddressables is a Unity package that provides an easy way to load assets by key from local or remote locations. It has many advantages over traditional asset management methods, such as reducing build size, improving loading speed, simplifying dependency resolution, and enabling hot updating.\\n\\nHowever, using Addressables also comes with some challenges. We need to create different profiles and groups for our assets, assign them labels and addresses, and manage their loading and unloading.\\n\\n\\nIn this example, I will create three scenes:\\n\\n1. Entry Scene (the only scene that is in the app, the only scene in __Build Settings__)\\n2. Home Screen Scene (used to download dynamic assemblies and assets from the remote server and load them)\\n3. Game Play Scene (normal game play scene)\\n\\n![setup](scene-and-addressables-setup.png)\\n\\n\\nNext, I will configure Addressables for these scenes.\\n\\n#### Addressables Profile\\n\\n![production profile](addressables-profile.png)\\n\\nCreate an __Addressables Profile__ called __Production__. Change `Remote.LoadPath` to your URL (the place that stores your dlls and hot update assets). In my case, these hot update assets are stored in `https://storage.xiaohai-huang.net/unity-demo/tutorial-storage/StandaloneWindows64`\\n\\n![remote load path](remote-load-path.png)\\n\\n#### Addressables Group\\n\\nCreate two groups, __Scene Group__ and __Dll Group__.\\n\\n- Add \\"Home Screen Scene\\" and \\"Game Play Scene\\" to the Addressable Group called \\"Scene Group\\".\\n- Add `xxx.dll.bytes` files under `Assets/Dlls` to the \\"Dll Group\\" and assign them labels as shown in the screenshot above. \\n\\n:::note\\n\\nThese `xxx.dll.bytes` will be generated when we compile the code using __`HybridCLR/Build/Copy Hot Update Dlls and Metadata for AOT Assemblies`__.\\n\\n:::\\n\\n### Entry Scene\\n\\nThe Entry Scene is the only scene that is in our app\'s binary file. It is responsible for loading the Home Screen Scene from the remote server. The Home Screen Scene will download and load the dynamic assemblies and assets that we want to update.\\n\\nThe Entry Scene is also responsible for executing `LoadMetadataForAOTAssembly` to supply metadata for AOT assemblies. This is necessary for generics to work with HybridCLR.\\n\\nIn this section, I will show you how to create the Entry Scene which contains a game object that uses HybridCLR and Addressables.\\n\\nThe script should be part of the `Assembly-Entry.dll` assembly because it will be shipped with the app and cannot be updated after we build the app.\\n\\nHere is the code for the script:\\n\\n```csharp title=\\"Assets/Scripts/Entry/GameEntry.cs\\"\\nusing HybridCLR;\\nusing System.Data.SqlTypes;\\nusing System.Reflection;\\nusing System.Threading.Tasks;\\nusing UnityEngine;\\nusing UnityEngine.AddressableAssets;\\n\\npublic class GameEntry : MonoBehaviour\\n{\\n    public AssetLabelReference UpdaterDllLabelRef;\\n    public AssetLabelReference AOTMetadataDllLabelRef;\\n\\n    public AssetReference HomeScreenSceneAssetRef;\\n\\n    async void Start()\\n    {\\n        print(\\"[GameEntry] Loading Metadata for AOT Dll...\\");\\n        await LoadMetadataForAOTAssemblies();\\n\\n        print(\\"[GameEntry] Loading Updater Dll...\\");\\n        var dll = await Addressables.LoadAssetAsync<TextAsset>(UpdaterDllLabelRef.labelString).Task;\\n        Assembly.Load(dll.bytes);\\n\\n\\n        print(\\"[GameEntry] Loading Home Screen...\\");\\n        HomeScreenSceneAssetRef.LoadSceneAsync();\\n    }\\n\\n    async Task LoadMetadataForAOTAssemblies()\\n    {\\n        var dlls = await Addressables.LoadAssetsAsync<TextAsset>(AOTMetadataDllLabelRef.labelString, null).Task;\\n        HomologousImageMode mode = HomologousImageMode.SuperSet;\\n\\n        foreach (var dll in dlls)\\n        {\\n            LoadImageErrorCode err = RuntimeApi.LoadMetadataForAOTAssembly(dll.bytes, mode);\\n            print(\\"[LoadMetadataForAOTAssemblies] Loading \\" + dll.name + err);\\n        }\\n    }\\n}\\n```\\n\\n### Home Screen Scene\\n\\nThe Home Screen Scene is the scene that we load from the remote server using Addressables. It is responsible for downloading and loading the dynamic assemblies and assets that we want to update. It also provides a button for the user to start playing the game.\\n\\nThe Home Screen Scene is part of the `Scene Group` in Addressables. It can be updated without recompiling our app.\\n\\nThe script that controls the Home Screen Scene is part of the `Assembly-Updater.dll` assembly. It is also a dynamic assembly that can be updated without recompiling our app.\\n\\nIn this scene, create a Empty Game Object called \\"App Updater\\" and attach it with the following script.\\n\\n```csharp title=\\"Assets/Scripts/Home Screen/Updater.cs\\"\\nusing TMPro;\\nusing System.Reflection;\\nusing System.Threading.Tasks;\\nusing UnityEngine;\\nusing UnityEngine.AddressableAssets;\\nusing UnityEngine.UI;\\n\\npublic class Updater : MonoBehaviour\\n{\\n    public AssetLabelReference HotUpdateDllLabelRef;\\n    public Button PlayButton;\\n\\n    async void Start()\\n    {\\n\\n        print(\\"[Updater] Loading Dlls\\");\\n\\n        PlayButton.interactable = false;\\n        var text = PlayButton.GetComponentInChildren<TextMeshProUGUI>();\\n        text.text = \\"Loading...\\";\\n        await LoadDlls();\\n        text.text = \\"Play\\";\\n        PlayButton.onClick.AddListener(LoadGamePlayScene);\\n        PlayButton.interactable = true;\\n    }\\n\\n    async Task LoadDlls()\\n    {\\n        await LoadHotUpdateAssemblies();\\n    }\\n\\n    async Task LoadHotUpdateAssemblies()\\n    {\\n        var dlls = await Addressables.LoadAssetsAsync<TextAsset>(HotUpdateDllLabelRef.labelString, null).Task;\\n        foreach (var dll in dlls)\\n        {\\n            print(\\"[LoadHotUpdateAssemblies] Loading \\" + dll.name);\\n            Assembly.Load(dll.bytes);\\n        }\\n    }\\n    void LoadGamePlayScene()\\n    {\\n        Addressables.LoadSceneAsync(\\"Assets/Scenes/Game Play Scene.unity\\");\\n    }\\n}\\n```\\n\\n### Game Play Scene\\n\\nIn this scene, you can do the normal unity stuff.\\n\\n## How to Buiild the Player\\n\\nIn order to build our app with HybridCLR and Addressables, we need to create an editor command that compiles and copies our dynamic assemblies to the desired location. This location will be later bundled by Addressables and uploaded to the remote server\\n\\nThe editor command is a script that uses `HybridCLR.Editor.Commands` namespace. It performs three tasks: compiling dynamic assemblies for the current build target, copying them to `Assets/Dlls/Hot Update Dlls` folder, and copying metadata for AOT assemblies to `Assets/Dlls/Metadata For AOT Dlls` folder.\\n\\nThe editor command also clears Addressables output cache to ensure that the latest dynamic assemblies are bundled.\\n\\nThis command is necessary because we want to update our game code without recompiling our app. By using Addressables to bundle and distribute our dynamic assemblies, we can reduce our app size, improve our loading speed, simplify our dependency resolution, and enable hot updating.\\n\\nHowever, using Addressables also comes with some challenges. We need to make sure that our dynamic assemblies are compatible with our static assemblies, that they are compiled for the correct build target, that they have metadata for AOT assemblies, and that they are bundled with the correct settings.\\n\\nIn this section, I will show you how to create an editor command that compiles and copies our dynamic assemblies using HybridCLR.Editor.Commands.\\n\\n\\n```csharp title=\\"Assets/Editor/Hot Update/CopyDllsAndClearAddressablesCacheCommand.cs\\"\\nusing HybridCLR.Editor;\\nusing HybridCLR.Editor.Commands;\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing UnityEditor;\\nusing UnityEditor.AddressableAssets.Build;\\nusing UnityEditor.AddressableAssets.Settings;\\nusing UnityEditor.AddressableAssets;\\nusing UnityEditor.Build.Pipeline.Utilities;\\nusing UnityEngine;\\n\\npublic static class CopyDllsAndClearAddressablesCacheCommand \\n{\\n    [MenuItem(\\"HybridCLR/Build/Copy Hot Update Dlls and Metadata for AOT Assemblies\\")]\\n    private static void Execute()\\n    {\\n        BuildTarget target = EditorUserBuildSettings.activeBuildTarget;\\n        CompileDllCommand.CompileDll(target);\\n\\n        CopyHotUpdateAssembliesToMyFolder(target);\\n        CopyMetadataForAOTAssembliesToFolder(target);\\n        ClearAddressablesOutput();\\n    }\\n\\n    private static readonly string MY_HOT_UPDATE_ASSEMBLIES_FOLDER = \\"Assets/Dlls/Hot Update Dlls\\";\\n    private static void CopyHotUpdateAssembliesToMyFolder(BuildTarget target)\\n    {\\n        string hotfixDllSrcDir = SettingsUtil.GetHotUpdateDllsOutputDirByTarget(target);\\n        string hotfixAssembliesDstDir = MY_HOT_UPDATE_ASSEMBLIES_FOLDER;\\n\\n        foreach (var dll in SettingsUtil.HotUpdateAssemblyFilesExcludePreserved)\\n        {\\n            string dllPath = $\\"{hotfixDllSrcDir}/{dll}\\";\\n            string dllBytesPath = $\\"{hotfixAssembliesDstDir}/{dll}.bytes\\";\\n            File.Copy(dllPath, dllBytesPath, true);\\n            Debug.Log($\\"[CopyHotUpdateAssembliesToMyFolder] copy hotfix dll {dllPath} -> {dllBytesPath}\\");\\n        }\\n    }\\n\\n    private static readonly string METADATA_FOR_AOT_ASSEMBLIES_FOLDER = \\"Assets/Dlls/Metadata For AOT Dlls\\";\\n    private static void CopyMetadataForAOTAssembliesToFolder(BuildTarget target)\\n    {\\n        string aotAssembliesSrcDir = SettingsUtil.GetAssembliesPostIl2CppStripDir(target);\\n        string aotAssembliesDstDir = METADATA_FOR_AOT_ASSEMBLIES_FOLDER;\\n\\n        foreach (var dll in SettingsUtil.AOTAssemblyNames)\\n        {\\n            string srcDllPath = $\\"{aotAssembliesSrcDir}/{dll}.dll\\";\\n            if (!File.Exists(srcDllPath))\\n            {\\n                Debug.LogError($\\"ab\u4e2d\u6dfb\u52a0AOT\u8865\u5145\u5143\u6570\u636edll:{srcDllPath} \u65f6\u53d1\u751f\u9519\u8bef,\u6587\u4ef6\u4e0d\u5b58\u5728\u3002\u88c1\u526a\u540e\u7684AOT dll\u5728BuildPlayer\u65f6\u624d\u80fd\u751f\u6210\uff0c\u56e0\u6b64\u9700\u8981\u4f60\u5148\u6784\u5efa\u4e00\u6b21\u6e38\u620fApp\u540e\u518d\u6253\u5305\u3002\\");\\n                continue;\\n            }\\n            string dllBytesPath = $\\"{aotAssembliesDstDir}/{dll}.dll.bytes\\";\\n            File.Copy(srcDllPath, dllBytesPath, true);\\n            Debug.Log($\\"[CopyMetadataForAOTAssembliesToFolder] copy AOT dll {srcDllPath} -> {dllBytesPath}\\");\\n        }\\n    }\\n\\n    private static void ClearAddressablesOutput()\\n    {\\n        var settings = AddressableAssetSettingsDefaultObject.Settings;\\n        var pathValue = settings.profileSettings.GetValueByName(settings.activeProfileId, \\"Remote.BuildPath\\");\\n        var path = settings.profileSettings.EvaluateString(settings.activeProfileId, pathValue);\\n        Debug.Log($\\"build path = {path} {Directory.Exists(path)}\\");\\n        if (Directory.Exists(path))\\n        {\\n            Directory.Delete(path, true);\\n            Debug.Log($\\"[ClearAddressablesOutput] Deleted {path}\\");\\n        }\\n        CleanBuildCache();\\n        Debug.Log($\\"[ClearAddressablesOutput] Clean Addressables Build Cache\\");\\n\\n    }\\n\\n    static void CleanBuildCache()\\n    {\\n        OnCleanAddressables(null);\\n        OnCleanSBP();\\n    }\\n\\n    static void OnCleanAddressables(object builder)\\n    {\\n        AddressableAssetSettings.CleanPlayerContent(builder as IDataBuilder);\\n    }\\n\\n    static void OnCleanSBP()\\n    {\\n        BuildCache.PurgeCache(true);\\n    }\\n}\\n```\\n\\n### Full Player Build\\n\\nFor a full player build, you need to do the following steps:\\n\\n1. Click `HybridCLR/Generate/All`.\\n2. Click `HybridCLR/Build/Copy Hot Update Dlls and Metadata for AOT Assemblies`. (Note: add these `xxx.dll.bytes` to the \\"Dll Group\\" in `Addressables Groups` tab if you have not done, see [add \\"xxx.dll.bytes\\" to Dll Group](#addressables-group))\\n3. In `Addressables Group` tab, click `Build/New Build/Default Build Script`.\\n4. Upload the folder `ServerData` at your project root to the remote storage.\\n5. Build your player using `File/Build And Run`.\\n\\n### Hot Update\\n\\nFor updating code in your published app, you need to do the following steps:\\n\\n1. Click `HybridCLR/Build/Copy Hot Update Dlls and Metadata for AOT Assemblies`.\\n2. In `Addressables Group` tab, click `Build/Update A Previous Build` and choose the target platform\'s `.bin` file generated by `Build/New Build/Default Build Script` when you do the full player build.\\n3. Upload the folder `ServerData` at your project root to the remote storage.\\n\\n## References\\n\\n- [HybridCLR Example Demo Project](https://github.com/focus-creative-games/hybridclr_trial)\\n- [HybridCLR Docs](https://focus-creative-games.github.io/hybridclr/install/#%E5%AE%89%E8%A3%85%E5%89%8D%E9%A2%84%E5%A4%87%E5%B7%A5%E4%BD%9C)"},{"id":"/2023/03/18/serve-static-site-with-nginx","metadata":{"permalink":"/blog/2023/03/18/serve-static-site-with-nginx","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2023/03-18-serve-static-site-with-nginx/index.md","source":"@site/blog/2023/03-18-serve-static-site-with-nginx/index.md","title":"Serve Static Website Stored On Remote Server Using Nginx","description":"I stored the build folder of react app on my MiniO server under the path https://storage.xiaohai-huang.net/website/build/index.html. I want to serve the web app using a custom domain pxd.pink. Here is how I achieve this with the help of Nginx.","date":"2023-03-18T00:00:00.000Z","formattedDate":"18 March 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"object storage","permalink":"/blog/tags/object-storage"},{"label":"nginx","permalink":"/blog/tags/nginx"}],"readingTime":1.865,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Serve Static Website Stored On Remote Server Using Nginx","authors":"xiaohai","tags":["docker","object storage","nginx"]},"unlisted":false,"prevItem":{"title":"Perform In-Game Updates in Unity using HybridCLR and Addressables","permalink":"/blog/2023/03/25/unity-hot-update"},"nextItem":{"title":"Host a MinIO Server with Nginx as Reverse Proxy","permalink":"/blog/2023/03/15/host-minio-server"}},"content":"I stored the `build` folder of react app on my MiniO server under the path `https://storage.xiaohai-huang.net/website/build/index.html`. I want to serve the web app using a custom domain `pxd.pink`. Here is how I achieve this with the help of Nginx.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Setup Nginx Proxy Manager\\n\\nUse the Docker to setup the [**Nginx Proxy Manager**](https://github.com/NginxProxyManager/nginx-proxy-manager).\\n\\n1. Create a Docker network\\n\\nCreate a Docker network for the Nginx server and the upstream services. So they can communicate with each other and the services do not need to expose/publish ports to the host.\\n\\nCreate a network, e.g., \\"`nginx-network`\\"\\n\\n```bash\\ndocker network create nginx-network\\n```\\n\\nThen add the following to the bottom of the `docker-compose.yaml` of the Nginx Proxy Manager and any other services that need to use the reverse proxy server.\\n\\n```yaml title=\\"docker-compose.yaml\\"\\nnetworks:\\n  nginx-network-alias:\\n    name: nginx-network\\n    external: true\\n```\\n\\n2. Launch the Nginx Proxy Manager\\n\\nUse the `docker-compose.yaml`. And `docker-compose up -d`\\n\\n```yaml title=\\"docker-compose.yaml\\"\\nversion: \\"3\\"\\nservices:\\n  app:\\n    image: \\"jc21/nginx-proxy-manager:latest\\"\\n    restart: unless-stopped\\n    ports:\\n      - \\"80:80\\"\\n      - \\"81:81\\"\\n      - \\"443:443\\"\\n    volumes:\\n      - ./data:/data\\n      - /etc/letsencrypt:/etc/letsencrypt\\n\\n// highlight-start\\n# connect to the same network\\n    networks:\\n      - reverse-proxy-network\\n// highlight-end\\n\\n// highlight-start\\nnetworks:\\n  reverse-proxy-network:\\n    external: true\\n    name: nginx-network\\n// highlight-end\\n\\n```\\n\\n## Redirect Domain to Subpath\\n\\n- domain: \\"[pxd.pink](https://pxd.pink)\\"\\n- `build` folder location: \\"https://storage.xiaohai-huang.net/website/build/\\"\\n\\nWrite the following config in the `Advanced tab` of the `Edit Proxy Host` menu.\\n\\n```nginx\\nlocation / {\\n    proxy_intercept_errors on;\\n    error_page 404 = /index.html;\\n    proxy_pass http://my-minio-server:9000/website/xiaohai-test-site/dist/;\\n}\\n```\\n\\nThe above config makes the Nginx server to return `/index.html` on the storage server if the storage server cannot find the specified object in its bucket. This is necessary in order to make react-router function properly.\\n\\n## Expose the Storage Service\\n\\nLet\'s look at how to expose the storage service to the world.\\n\\n```yaml title=\\"docker-compose.yaml\\"\\nversion: \\"3\\"\\nservices:\\n  minio-service:\\n    hostname: my-minio-server\\n    image: minio/minio\\n    restart: always\\n    command: server /data --address \':9000\' --console-address \':9001\'\\n    environment:\\n      MINIO_ACCESS_KEY: admin\\n      MINIO_SECRET_KEY: hello-world\\n      MINIO_SERVER_URL: https://storage.xiaohai-huang.net\\n      MINIO_BROWSER_REDIRECT_URL: https://storage.xiaohai-huang.net/minio-console\\n    ports:\\n      - 9000\\n      - 9001\\n    volumes:\\n      - minio-data:/data\\n\\n// highlight-start\\n# connect to the same network\\n    networks:\\n      - nginx-network-alias\\n// highlight-end\\n\\n// highlight-start\\nnetworks:\\n  nginx-network-alias:\\n    name: nginx-network\\n    external: true\\n// highlight-end\\n\\n\\nvolumes:\\n  minio-data:\\n    driver_opts:\\n      type: none # stands for bind mount\\n      device: /docker/minio\\n      o: bind\\n```\\n\\n## References\\n\\n- [NPM | Advanced Configuration](https://nginxproxymanager.com/advanced-config/#best-practice-use-a-docker-network)"},{"id":"/2023/03/15/host-minio-server","metadata":{"permalink":"/blog/2023/03/15/host-minio-server","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2023/03-15-host-minio-server/index.md","source":"@site/blog/2023/03-15-host-minio-server/index.md","title":"Host a MinIO Server with Nginx as Reverse Proxy","description":"This documentation covers the minimum settings required to configure NGINX to proxy requests to MinIO.","date":"2023-03-15T00:00:00.000Z","formattedDate":"15 March 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"object storage","permalink":"/blog/tags/object-storage"}],"readingTime":1.935,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Host a MinIO Server with Nginx as Reverse Proxy","authors":"xiaohai","tags":["docker","object storage"]},"unlisted":false,"prevItem":{"title":"Serve Static Website Stored On Remote Server Using Nginx","permalink":"/blog/2023/03/18/serve-static-site-with-nginx"},"nextItem":{"title":"Alibaba Beijing Interview Round 1","permalink":"/blog/2022/12/08/alibaba-interview-round-1"}},"content":"This documentation covers the minimum settings required to configure NGINX to proxy requests to MinIO.\\n\\nGiven domain `storage.xiaohai-huang.net`\\n\\n- Proxy requests to `https://storage.xiaohai-huang.net` to the MinIO S3 API server listening on `http://my-minio-server:9000`\\n- Proxy requests to the subpath (`/minio-console`) of the domain `https://storage.xiaohai-huang.net/minio-console` to the MinIO Web Console listening on `http://my-minio-server:9001`\\n\\n| Host                                              | Container                     |\\n| ------------------------------------------------- | ----------------------------- |\\n| `https://storage.xiaohai-huang.net`               | `http://my-minio-server:9000` |\\n| `https://storage.xiaohai-huang.net/minio-console` | `http://my-minio-server:9001` |\\n\\n\x3c!-- truncate --\x3e\\n:::info\\n\\n`my-minio-server` is defined in `docker-compose.yaml` by `hostname`. This allows nginx to access it using hostname rather than IP.\\n\\ni.e. `proxy_pass http://my-minio-server:9000/;`\\n\\n:::\\n## Get Certificates\\n\\nUse `certbot` to generate TLS certificates.\\n\\n```bash\\ndocker run -it --rm --name certbot \\\\\\n      -p 80:80 -p 443:443 \\\\\\n      -v \\"/etc/letsencrypt:/etc/letsencrypt\\" \\\\\\n      certbot/certbot certonly --standalone -d storage.xiaohai-huang.net\\n```\\n\\n## Servers Configurations\\n\\nThings to change:\\n\\n- `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`\\n- `MINIO_SERVER_URL` used by Web Console to correctly generate share URL.\\n- `MINIO_BROWSER_REDIRECT_URL` used by Web Console to redireact correctly even if it is behind a proxy.\\n\\n### Docker Compose File\\n\\n```yaml title=\\"docker-compose.yaml\\"\\nversion: \\"3\\"\\nservices:\\n  minio-service:\\n    hostname: my-minio-server\\n    image: minio/minio\\n    restart: always\\n    command: server /data --address \':9000\' --console-address \':9001\'\\n    environment:\\n      MINIO_ACCESS_KEY: <user-name>\\n      MINIO_SECRET_KEY: <password>\\n      MINIO_SERVER_URL: https://storage.xiaohai-huang.net\\n      MINIO_BROWSER_REDIRECT_URL: https://storage.xiaohai-huang.net/minio-console\\n    ports:\\n      - 9000\\n      - 9001\\n    volumes:\\n      - minio-data:/data\\n    networks:\\n      - minio-net\\n\\n  nginx:\\n    image: nginx\\n    restart: always\\n    ports:\\n      - \\"80:80\\"\\n      - \\"443:443\\"\\n    volumes:\\n      - ./nginx.conf:/etc/nginx/nginx.conf\\n      - /etc/letsencrypt:/etc/letsencrypt\\n    depends_on:\\n      - minio-service\\n    networks:\\n      - minio-net\\n\\nnetworks:\\n  minio-net:\\n\\nvolumes:\\n  minio-data:\\n    driver_opts:\\n      type: none # stands for bind mount\\n      device: /docker/minio\\n      o: bind\\n```\\n\\n### Nginx Configuration\\n\\n```nginx title=\\"nginx.conf\\"\\nevents {}\\n\\nhttp {\\n  server {\\n    listen 80;\\n    server_name storage.xiaohai-huang.net;\\n    return 301 https://$host$request_uri;\\n  }\\n\\n  server {\\n    listen 443 ssl;\\n    server_name storage.xiaohai-huang.net;\\n\\n    ssl_certificate /etc/letsencrypt/live/storage.xiaohai-huang.net/fullchain.pem;\\n    ssl_certificate_key /etc/letsencrypt/live/storage.xiaohai-huang.net/privkey.pem;\\n\\n    location / {\\n      proxy_set_header Host $http_host;\\n      proxy_set_header X-Real-IP $remote_addr;\\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n      proxy_set_header X-Forwarded-Proto $scheme;\\n\\n      proxy_connect_timeout 300;\\n      # Default is HTTP/1, keepalive is only enabled in HTTP/1.1\\n      proxy_http_version 1.1;\\n      proxy_set_header Connection \\"\\";\\n      chunked_transfer_encoding off;\\n\\n      proxy_pass http://my-minio-server:9000/;\\n    }\\n\\n    location /minio-console/ {\\n      proxy_set_header Host $http_host;\\n      proxy_set_header X-Real-IP $remote_addr;\\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n      proxy_set_header X-Forwarded-Proto $scheme;\\n      proxy_set_header X-NginX-Proxy true;\\n\\n      # This is necessary to pass the correct IP to be hashed\\n      real_ip_header X-Real-IP;\\n\\n      proxy_connect_timeout 300;\\n\\n      # To support websockets in MinIO versions released after January 2023\\n      proxy_http_version 1.1;\\n      proxy_set_header Upgrade $http_upgrade;\\n      proxy_set_header Connection \\"upgrade\\";\\n\\n      chunked_transfer_encoding off;\\n\\n    #   rewrite   ^/minio-console/(.*) /$1 break;\\n      proxy_pass http://my-minio-server:9001/;\\n    }\\n  }\\n}\\n```\\n\\n## References\\n\\n- [Configure NGINX Proxy for MinIO Server](https://min.io/docs/minio/linux/integrations/setup-nginx-proxy-with-minio.html)"},{"id":"/2022/12/08/alibaba-interview-round-1","metadata":{"permalink":"/blog/2022/12/08/alibaba-interview-round-1","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/12-08-alibaba-interview-round-1/index.mdx","source":"@site/blog/2022/12-08-alibaba-interview-round-1/index.mdx","title":"Alibaba Beijing Interview Round 1","description":"1. What are JS primitive data types?","date":"2022-12-08T00:00:00.000Z","formattedDate":"8 December 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":0.52,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Alibaba Beijing Interview Round 1","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"prevItem":{"title":"Host a MinIO Server with Nginx as Reverse Proxy","permalink":"/blog/2023/03/15/host-minio-server"},"nextItem":{"title":"How to Setup a ShadowSocks VPN Server?","permalink":"/blog/2022/11/7/how-to-setup-a-ss-vpn-server"}},"content":"import curryFunction from \\"!!raw-loader!./curry.js\\";\\nimport CodeBlock from \\"@theme/CodeBlock\\";\\n\\n1. What are JS primitive data types?\\n   1. What\'s the use of `Symbol`?\\n   1. Have you used `BigInt`?\\n1. Tell me about `prototype chain`.\\n1. How do you implement a **virtualized** list? [**solution**](https://medium.com/ingeniouslysimple/building-a-virtualized-list-from-scratch-9225e8bec120)\\n1. `Map` vs plain object? [**MDN solution**](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#objects_vs._maps)\\n1. flexbox\\n1. How to narrow a variable\'s type in typescript?\\n\\n\x3c!-- truncate --\x3e\\n\\n## Programming\\n\\n### Curry\\n\\nImplement the following function\\n\\n<CodeBlock language=\\"js\\">{curryFunction}</CodeBlock>\\n\\n### Sort\\n\\nSort an array, even number on the left (in descending order), odd number on the right (in ascending order) and 0 in the middle.\\n\\n```js\\n// [1,4,5,2,7,0]   =>   [4,2,0,1,5,7]\\n```"},{"id":"/2022/11/7/how-to-setup-a-ss-vpn-server","metadata":{"permalink":"/blog/2022/11/7/how-to-setup-a-ss-vpn-server","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/11-7-how-to-setup-a-ss-vpn-server/index.md","source":"@site/blog/2022/11-7-how-to-setup-a-ss-vpn-server/index.md","title":"How to Setup a ShadowSocks VPN Server?","description":"Setup a ShadowSocks VPN server using Docker in just one command.","date":"2022-11-07T00:00:00.000Z","formattedDate":"7 November 2022","tags":[{"label":"Docker","permalink":"/blog/tags/docker"},{"label":"VPN","permalink":"/blog/tags/vpn"}],"readingTime":0.645,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"How to Setup a ShadowSocks VPN Server?","authors":"xiaohai","tags":["Docker","VPN"],"image":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Shadowsocks_logo.png/180px-Shadowsocks_logo.png","description":"Setup a ShadowSocks VPN server using Docker in just one command."},"unlisted":false,"prevItem":{"title":"Alibaba Beijing Interview Round 1","permalink":"/blog/2022/12/08/alibaba-interview-round-1"},"nextItem":{"title":"Accessing a WSL2 Networking Apps From Your LAN","permalink":"/blog/2022/08/17/accessing-wsl2-networking-apps"}},"content":"A fast and reliable VPN server.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Setup Server\\n\\nCopy the following two files into a folder and run `docker-compose up -d`\\n\\n```yaml title=\\"docker-compose.yaml\\"\\nversion: \\"3.7\\"\\nservices:\\n  ss-v2ray-service:\\n    image: teddysun/shadowsocks-libev\\n    container_name: ss-v2ray\\n    cap_add:\\n      - NET_ADMIN\\n    environment:\\n      - PUID=1000\\n      - PGID=1000\\n    volumes:\\n      - ./:/etc/shadowsocks-libev # folder of SS config file\\n    ports:\\n      - 8333:9000\\n      - 8333:9000/udp\\n    restart: always\\n```\\n\\n```json title=\\"config.json\\"\\n{\\n  \\"server\\": \\"0.0.0.0\\",\\n  \\"server_port\\": 9000,\\n  \\"password\\": \\"xiaohai666\\",\\n  \\"timeout\\": 300,\\n  \\"method\\": \\"aes-256-gcm\\",\\n  \\"fast_open\\": false,\\n  \\"nameserver\\": \\"8.8.8.8\\",\\n  \\"mode\\": \\"tcp_and_udp\\",\\n  \\"plugin\\": \\"v2ray-plugin\\",\\n  \\"plugin_opts\\": \\"server\\"\\n}\\n```\\n\\n## Connect to Server\\n\\nDownload the GUI client for these different platforms.\\n\\n### Android\\n\\nDownload the apks from [GitHub releases](https://github.com/shadowsocks/shadowsocks-android/releases).\\n\\n### Windows\\n\\nDownload the app from [GitHub releases](https://github.com/shadowsocks/shadowsocks-windows/releases).\\n\\n### Linux\\n\\nDownload the app from snap store - [shadowsocks-electron](https://snapcraft.io/shadowsocks-electron).\\n\\n## References\\n\\n- [teddysun/shadowsocks-libev | DockerHub](https://hub.docker.com/r/teddysun/shadowsocks-libev)"},{"id":"/2022/08/17/accessing-wsl2-networking-apps","metadata":{"permalink":"/blog/2022/08/17/accessing-wsl2-networking-apps","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/08-17-accessing-wsl2-networking-apps/index.md","source":"@site/blog/2022/08-17-accessing-wsl2-networking-apps/index.md","title":"Accessing a WSL2 Networking Apps From Your LAN","description":"This blog shows how to access networking apps running on WSL2 from your LAN. This can be useful for making the application available for other devices on the network","date":"2022-08-17T00:00:00.000Z","formattedDate":"17 August 2022","tags":[{"label":"technology","permalink":"/blog/tags/technology"},{"label":"WSL","permalink":"/blog/tags/wsl"}],"readingTime":1.365,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Accessing a WSL2 Networking Apps From Your LAN","authors":"xiaohai","tags":["technology","WSL"],"description":"This blog shows how to access networking apps running on WSL2 from your LAN. This can be useful for making the application available for other devices on the network"},"unlisted":false,"prevItem":{"title":"How to Setup a ShadowSocks VPN Server?","permalink":"/blog/2022/11/7/how-to-setup-a-ss-vpn-server"},"nextItem":{"title":"LeetCode 75 Study Plan","permalink":"/blog/2022/07/09/leetcode-75"}},"content":"When using a WSL 1 distribution, if your computer was set up to be accessed by your LAN, then applications run in WSL could be accessed on your LAN directly.\\n\\nHowever, this isn\'t the default case in WSL2 as it has a virtualized ethernet adapter with its own unique IP address.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Motivation\\n\\nThis can be useful for making the application available for other devices on the network, which allows us to debug a web app from mobile devices.\\n\\n## Solution\\n\\n### Make the App Accept LAN Connections\\n\\n> When using remote IP addresses to connect to your applications, they will be treated as connections from the Local Area Network (LAN). This means that you will need to make sure your application can accept LAN connections.\\n\\nFor example, you may need to **bind** your application to `0.0.0.0` instead of `127.0.0.1`.\\n\\nIn the example of a Next.js app, this can be done with the command: `npx next dev -H 0.0.0.0`\\n\\n### Port Proxy\\n\\nHere\'s an example PowerShell command to add a port proxy that listens on port 3000 on the host and connects it to port 3000 to the WSL2 VM with IP address `172.22.94.49`.\\n\\n```powershell\\nnetsh interface portproxy add v4tov4 listenport=3000 listenaddress=0.0.0.0 connectport=3000 connectaddress=172.22.94.49\\n```\\n\\n:::info\\n\\nWhen you restart your PC, the IP address of the WSL2 instance will change, you need to delete the old **port proxy** and run the command above again. Below shows how to delete the old **port proxy** which listens on port 3000 on the host.\\n\\n```powershell\\nnetsh interface portproxy delete v4tov4 listenport=3000 listenaddress=0.0.0.0\\n```\\n\\n:::\\n\\n## References\\n\\n- [MS Docs](https://docs.microsoft.com/en-us/windows/wsl/networking)\\n- [Next.js CLI Docs](https://nextjs.org/docs/api-reference/cli#development)"},{"id":"/2022/07/09/leetcode-75","metadata":{"permalink":"/blog/2022/07/09/leetcode-75","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/07-09-leetcode-75/index.mdx","source":"@site/blog/2022/07-09-leetcode-75/index.mdx","title":"LeetCode 75 Study Plan","description":"Follow LeetCode 75 Study Plan.","date":"2022-07-09T00:00:00.000Z","formattedDate":"9 July 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"algorithm","permalink":"/blog/tags/algorithm"}],"readingTime":13.105,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"LeetCode 75 Study Plan","authors":"xiaohai","tags":["study","algorithm"],"description":"Follow LeetCode 75 Study Plan."},"unlisted":false,"prevItem":{"title":"Accessing a WSL2 Networking Apps From Your LAN","permalink":"/blog/2022/08/17/accessing-wsl2-networking-apps"},"nextItem":{"title":"Turn a Tablet Into a Secondary Monitor","permalink":"/blog/2022/05/22/tablet-as-monitor"}},"content":"import JSEditor from \\"@src/components/js-live-code-editor\\";\\nimport YouTubeVideo from \\"@src/components/youtube-video\\";\\nimport solution1 from \\"!!raw-loader!./_day-01/1480-running-sum-of-1d-array.js\\";\\nimport solution2 from \\"!!raw-loader!./_day-01/724-find-pivot-index.js\\";\\nimport solution3 from \\"!!raw-loader!./_day-02/205-isomorphic-strings.js\\";\\nimport solution4 from \\"!!raw-loader!./_day-02/392-is-subsequence.js\\";\\nimport solution5 from \\"!!raw-loader!./_day-03/21-merge-two-sorted-lists.js\\";\\nimport solution6 from \\"!!raw-loader!./_day-03/206-reverse-linked-list.js\\";\\nimport solution7 from \\"!!raw-loader!./_day-04/876-middle-of-the-linked-list.js\\";\\nimport solution8 from \\"!!raw-loader!./_day-04/142-linked-list-cycle-ii.js\\";\\nimport solution9 from \\"!!raw-loader!./_day-05/121-best-time-to-buy-and-sell-stock.js\\";\\nimport solution10 from \\"!!raw-loader!./_day-05/409-longest-palindrome.js\\";\\nimport solution11 from \\"!!raw-loader!./_day-06/589-n-ary-tree-preorder-traversal.js\\";\\nimport solution12 from \\"!!raw-loader!./_day-06/102-binary-tree-level-order-traversal.js\\";\\nimport solution13 from \\"!!raw-loader!./_day-07/704-binary-search.js\\";\\nimport solution14 from \\"!!raw-loader!./_day-07/278-first-bad-version.js\\";\\nimport solution15 from \\"!!raw-loader!./_day-08/98-validate-binary-search-tree.js\\";\\nimport solution16 from \\"!!raw-loader!./_day-08/235-lowest-common-ancestor-of-a-binary-search-tree.js\\";\\nimport solution17 from \\"!!raw-loader!./_day-09/733-flood-fill.js\\";\\nimport solution18 from \\"!!raw-loader!./_day-09/200-number-of-islands.js\\";\\nimport solution19 from \\"!!raw-loader!./_day-10/509-fibonacci-number.js\\";\\nimport solution20 from \\"!!raw-loader!./_day-10/70-climbing-stairs.js\\";\\nimport solution21 from \\"!!raw-loader!./_day-11/746-min-cost-climbing-stairs.js\\";\\nimport solution22 from \\"!!raw-loader!./_day-11/62-unique-paths.js\\";\\nimport solution23 from \\"!!raw-loader!./_day-12/438-find-all-anagrams-in-a-string\\";\\nimport solution24 from \\"!!raw-loader!./_day-12/424-longest-repeating-character-replacement.js\\";\\nimport solution25 from \\"!!raw-loader!./_day-13/438-find-all-anagrams-in-a-string.js\\";\\nimport solution26 from \\"!!raw-loader!./_day-14/394-decode-string.js\\";\\nimport solution28 from \\"!!raw-loader!./_day-15/1046-last-stone-weight.js\\";\\nimport solution29 from \\"!!raw-loader!./_day-15/692-top-k-frequent-words.js\\";\\n\\n> This study plan is for those who want to prepare for technical interviews but are uncertain which problems they should focus on. The problems have been carefully curated so that levels 1 and 2 will guide beginner and intermediate users through problems that cover the data structures and algorithms necessary to succeed in interviews with most mid-tier companies. While level 3 provides material to help users whose targets are top-tier companies.\\n> -- <cite><a href=\\"https://leetcode.com/study-plan/leetcode-75\\" target=\\"_blank\\">LeetCode</a></cite>\\n\\n\x3c!-- truncate --\x3e\\n\\n## Day 1 Prefix Sum\\n\\n### 1480. Running Sum of 1d Array\\n\\nsrc: [https://leetcode.com/problems/running-sum-of-1d-array](https://leetcode.com/problems/running-sum-of-1d-array/)\\n\\n<JSEditor run={false}>{solution1}</JSEditor>\\n\\n### 724. Find Pivot Index\\n\\nsrc: [https://leetcode.com/problems/find-pivot-index](https://leetcode.com/problems/find-pivot-index/)\\n\\n:::note\\n\\nAt a given index `i`, how do I get the value of `leftSum` and `rightSum`?\\n\\nAns:\\n\\n- `leftSum` of **i**-th element can be computed by **summing** up all the values on the left of the **i**-th element.\\n- `rightSum` of **i**-th element is equal to the sum of the array **minus** the value of the current element **and** `leftSum`.\\n\\n:::\\n\\n<JSEditor run={false}>{solution2}</JSEditor>\\n\\n## Day 2 String\\n\\n### 205. Isomorphic Strings\\n\\nsrc: [https://leetcode.com/problems/isomorphic-strings](https://leetcode.com/problems/isomorphic-strings/)\\n\\n:::note\\n\\nGiven two strings s and t, determine if they are isomorphic.\\n\\nTwo strings s and t are isomorphic if the characters in s can be replaced to get t.\\n\\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.\\n\\n:::\\n\\nShould pay more attention on the last paragraph of the requirement. A character can only be mapped to one character. Therefore, create a set to store the `values`. i.e. **one-to-one** relationship.\\n\\n|    input     | map                                                                   | result  |\\n| :----------: | --------------------------------------------------------------------- | ------- |\\n|  egg -> add  | `{e : a, g : d}`                                                      | `true`  |\\n| badc -> baba | <ol><li>b -> b</li><li>a -> a</li><li>d -> b</li><li>c -> a</li></ol> | `false` |\\n\\nFor \\"badc -> baba\\", it has two characters that map to b (**b** and **d**) so it is not isomorphic.\\n\\n<JSEditor run={false}>{solution3}</JSEditor>\\n\\n### 392. Is Subsequence\\n\\nsrc: [https://leetcode.com/problems/is-subsequence](https://leetcode.com/problems/is-subsequence/)\\n\\n:::note\\n\\nGiven two strings s and t, return true if s is a subsequence of t, or false otherwise.\\n\\nA subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., \\"ace\\" is a subsequence of \\"abcde\\" while \\"aec\\" is not).\\n\\n:::\\n\\nA simple example `isSubsequence(\\"bc\\", \\"abagdc\\")`\\n\\nFirst, check if `b` in the string if it does exist then check the **remaining characters** to see if `c` exist.\\n\\n<JSEditor run={false}>{solution4}</JSEditor>\\n\\n## Day 3 Linked List\\n\\n### 21. Merge Two Sorted Lists\\n\\nsrc: [https://leetcode.com/problems/merge-two-sorted-lists](https://leetcode.com/problems/merge-two-sorted-lists/)\\n\\n<JSEditor run={false}>{solution5}</JSEditor>\\n\\n### 206. Reverse Linked List\\n\\nsrc: [https://leetcode.com/problems/reverse-linked-list](https://leetcode.com/problems/reverse-linked-list/)\\n\\n![reverse linked list](https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg)\\n\\n:::tip\\n\\nChange each node\'s **next** pointer to its left node.\\n\\n`null <- 1 <- 2 <- 3`\\n\\n:::\\n\\n<JSEditor run={false}>{solution6}</JSEditor>\\n\\n## Day 4 Linked List\\n\\n### 876. Middle of the Linked List\\n\\nsrc: [https://leetcode.com/problems/middle-of-the-linked-list](https://leetcode.com/problems/middle-of-the-linked-list/)\\n\\n:::note\\n\\nGiven the head of a singly linked list, return the middle node of the linked list.\\n\\nIf there are two middle nodes, return the second middle node.\\n\\n**Example 1**\\n\\n![example 1](https://assets.leetcode.com/uploads/2021/07/23/lc-midlist1.jpg)\\n\\n```\\nInput: head = [1,2,3,4,5]\\nOutput: [3,4,5]\\nExplanation: The middle node of the list is node 3.\\n```\\n\\n**Example 2**\\n\\n![example 2](https://assets.leetcode.com/uploads/2021/07/23/lc-midlist2.jpg)\\n\\n```\\nInput: head = [1,2,3,4,5,6]\\nOutput: [4,5,6]\\nExplanation: Since the list has two middle nodes with values 3 and 4, we return the second one.\\n```\\n\\n:::\\n\\n:::tip\\n\\n**Fast and Slow Pointer**\\n\\nWhen traversing the list with a pointer slow, make another pointer fast that traverses **twice as fast**.\\n\\n- `slow = slow.next`\\n- `fast = fast.next.next`\\n\\nWhen fast reaches the end of the list, slow must be in the middle.\\n\\n:::\\n\\n<JSEditor run={false}>{solution7}</JSEditor>\\n\\n### 142. Linked List Cycle II\\n\\nsrc: [https://leetcode.com/problems/linked-list-cycle-ii](https://leetcode.com/problems/linked-list-cycle-ii/)\\n\\n:::note\\n\\nGiven the head of a linked list, return the node where the cycle begins. If there is no cycle, return `null`.\\n\\n:::\\n\\n<JSEditor run={false}>{solution8}</JSEditor>\\n\\n## Day 5 Greedy\\n\\n### 121. Best Time to Buy and Sell Stock\\n\\nsrc: [https://leetcode.com/problems/best-time-to-buy-and-sell-stock](https://leetcode.com/problems/best-time-to-buy-and-sell-stock/)\\n\\nTwo import information to keep track of:\\n\\n- min price\\n- max profit\\n\\n<JSEditor run={false}>{solution9}</JSEditor>\\n\\n### 409. Longest Palindrome\\n\\nsrc: [https://leetcode.com/problems/longest-palindrome](https://leetcode.com/problems/longest-palindrome/)\\n\\n:::note\\n\\nGiven a string s which consists of lowercase or uppercase letters,\\nreturn the length of the **longest palindrome** that **can be built** with those letters.\\n\\n:::\\n\\nImagine we build a palindrome string, it will have as many as _partnered letters_ as possible,\\nplus possibly a unique **center** character.\\n\\n- If the number of occurrences of a letter is **even**, add the count to the total length of the palindrome.\\n- If the number of occurrences of a letter is **odd**, subtract the count by 1 and add it to the total length of the palindrome.\\n- If the palindrome haven\'t added a unique character to the center, add 1 to the length of the palindrome if a character with the number of occurrences equals 1 is found.\\n  - e.g. `{b : 2, f : 1, c : 1}`, `f` can be added to the center of the palindrome and it is the only character that is unique.\\n\\n:::warning\\n\\n- We can only insert 1 unique character and it has to be at the center.\\n- `aa`, `abba` are palindrome strings. The center of the palindrome can have 2 characters.\\n\\n:::\\n\\n<JSEditor run={false}>{solution10}</JSEditor>\\n\\n## Day 6 Tree\\n\\n### 589. N-ary Tree Preorder Traversal\\n\\nsrc: [https://leetcode.com/problems/n-ary-tree-preorder-traversal](https://leetcode.com/problems/n-ary-tree-preorder-traversal/)\\n\\n:::note\\n\\n![example 1](https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png)\\n\\n- Input: root = `[1,null,3,2,4,null,5,6]`\\n- Output: `[1,3,5,6,2,4]`\\n\\n:::\\n\\nPre-order traversal is `root -> left -> right`.\\n\\n<JSEditor run={false}>{solution11}</JSEditor>\\n\\n### 102. Binary Tree Level Order Traversal\\n\\nsrc: [https://leetcode.com/problems/binary-tree-level-order-traversal](https://leetcode.com/problems/binary-tree-level-order-traversal/)\\n\\n:::note\\n\\n![level order traversal example](https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg)\\n\\n- Input: root = `[3,9,20,null,null,15,7]`\\n- Output: `[[3],[9,20],[15,7]]`\\n\\n:::\\n\\n- Enqueue all nodes of a level.\\n- Process the tree level-by-level.\\n  - Enqueue all children of each node in the current level.\\n  - How to process level-by-level? This is achieved by checking the number of nodes in a level before processing a level.\\n\\n<JSEditor run={false}>{solution12}</JSEditor>\\n\\n## Day 7 Binary Search\\n\\n### 704. Binary Search\\n\\nsrc: [https://leetcode.com/problems/binary-search](https://leetcode.com/problems/binary-search/)\\n\\n:::note\\n\\nGiven an array of integers `nums` which is sorted in **ascending order**, and an integer `target`,\\nwrite a function to search `target` in `nums`.\\nIf `target` exists, then return its index. Otherwise, return `-1`.\\n\\n```\\nInput: nums = [-1,0,3,5,9,12], target = 9\\nOutput: 4\\nExplanation: 9 exists in nums and its index is 4\\n```\\n\\n```\\nInput: nums = [-1,0,3,5,9,12], target = 2\\nOutput: -1\\nExplanation: 2 does not exist in nums so return -1\\n```\\n\\n:::\\n\\n<JSEditor run={false}>{solution13}</JSEditor>\\n\\n### 278. First Bad Version\\n\\nsrc: [https://leetcode.com/problems/first-bad-version](https://leetcode.com/problems/first-bad-version/)\\n\\n<JSEditor run={false}>{solution14}</JSEditor>\\n\\n## Day 8 Binary Search Tree\\n\\n### 98. Validate Binary Search Tree\\n\\nsrc: [https://leetcode.com/problems/validate-binary-search-tree](https://leetcode.com/problems/validate-binary-search-tree/)\\n\\n:::note\\n\\nGiven the `root` of a binary tree, determine if it is a valid _binary search tree (BST)_.\\n\\nA valid **BST** is defined as follows:\\n\\n- The left subtree of a node contains only nodes with keys **less than** the node\'s key.\\n- The right subtree of a node contains only nodes with keys **greater than** the node\'s key.\\n- Both the left and right subtrees must also be binary search trees.\\n\\n**Example 1**\\n\\n![example 1](https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg)\\n\\n```\\nInput: root = [2,1,3]\\nOutput: true\\n```\\n\\n![example 2](https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg)\\n\\n```\\nInput: root = [5,1,4,null,null,3,6]\\nOutput: false\\nExplanation: The root node\'s value is 5 but its right child\'s value is 4.\\n```\\n\\n:::\\n\\n#### Solution 1\\n\\n[solution](<https://leetcode.com/problems/validate-binary-search-tree/discuss/783930/Easy-to-understand-2-lines-solution!-O(n)-with-Examples-and-Explanation-JavaScript>)\\n\\nMain idea: Check if the current node\'s value is within the **valid range** (`floor`/`ceiling`).\\n\\n- Base case: `root=null`, the tree is a valid binary search tree.\\n- Recursively check the valid range of each node `floor < root.val < ceiling`:\\n  - Initially, the valid range of the `root` node is $[\\\\infty, +\\\\infty]$\\n  - After visiting the `root`, we start restricting the **valid range**.\\n    - If we move to the left child, the `ceiling` of the left child will be updated to `root.val`.\\n    - If we move to the right child, the `floor` of the right child will be updated to `root.val`.\\n\\n```js\\nvar isValidBST = function (root, floor = -Infinity, ceiling = Infinity) {\\n  if (!root) return true;\\n\\n  if (!(floor < root.val && root.val < ceiling)) {\\n    return false;\\n  }\\n\\n  return (\\n    isValidBST(root.left, floor, root.val) &&\\n    isValidBST(root.right, root.val, ceiling)\\n  );\\n};\\n```\\n\\n#### Solution 2\\n\\nUse **in-order traversal** to collect all the `values` of a binary search tree,\\nthen check if the `values` are in the correct order (ascending).\\n\\n<JSEditor run={false}>{solution15}</JSEditor>\\n\\n### 235. Lowest Common Ancestor of a Binary Search Tree\\n\\nsrc: [https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree](https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/)\\n\\n:::note\\n\\nGiven a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.\\n\\n\u201cThe lowest common ancestor is defined between two nodes `p` and `q` as the lowest node in `Tree`\\nthat has both `p` and `q` as descendants (where we allow a node to be a descendant of itself).\u201d\\n\\n**Example 1:**\\n\\n![eg 1](https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png)\\n\\n```\\nInput: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\\nOutput: 6\\nExplanation: The LCA of nodes 2 and 8 is 6.\\n```\\n\\n**Example 2:**\\n\\n![eg 2](https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png)\\n\\n```\\nInput: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\\nOutput: 2\\nExplanation: The LCA of nodes 2 and 4 is 2,\\nsince a node can be a descendant of itself according to the LCA definition.\\n```\\n\\n:::\\n\\n#### Solution 1\\n\\n- Level order traversal, `callback(node, levelNum)`\\n  - Search for the `target nodes` based on the current node.\\n    - Found target nodes - update the lowest common ancestor\\n    - Not found - break\\n\\n#### Solution 2\\n\\n![solution](https://raw.githubusercontent.com/hot13399/leetcode-graphic-answer/master/235.%20Lowest%20Common%20Ancestor%20of%20a%20Binary%20Search%20Tree.jpg)\\n\\n- If both `target nodes` are **less** than the `current node`, pick the left child as the potential common ancestor.\\n- If both `target nodes` are **greater** than the `current node`, pick the right child as the potential common ancestor.\\n- If the `current node` is causing a **diverging**, return the current node.\\n  e.g. **0** and **5** go for different subtrees at node **2**. So node **2** is the lowest common ancestor.\\n\\n:::info\\n\\nThere are some special **constraints**:\\n\\n- All `Node.val` are unique.\\n- `p != q`\\n- `p` and `q` will exist in the **BST**.\\n\\n:::\\n\\n<JSEditor run={false}>{solution16}</JSEditor>\\n\\n## Day 9 Graph/BFS/DFS\\n\\n### 733. Flood Fill\\n\\n- Array\\n- Depth-First Search\\n\\nsrc: [https://leetcode.com/problems/flood-fill](https://leetcode.com/problems/flood-fill/)\\n\\n:::note\\n\\nYou are given three integers `sr`, `sc`, and `color`.\\nYou should perform a flood fill on the image starting from the pixel `image[sr][sc]`.\\n\\n- sr: starting row\\n- sc: starting col\\n\\n> To perform a **flood** fill, consider the starting pixel, plus any pixels connected **4-directionally** to the **starting pixel** of the _same color_ as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color), and so on. Replace the color of all of the aforementioned pixels with color.\\n\\n**Example 1:**\\n\\n![example 1](https://assets.leetcode.com/uploads/2021/06/01/flood1-grid.jpg)\\n\\n```\\nInput: image = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, color = 2\\nOutput: [[2,2,2],[2,2,0],[2,0,1]]\\n```\\n\\n**Example 2:**\\n\\n```\\nInput: image = [[0,0,0],[0,0,0]], sr = 0, sc = 0, color = 0\\nOutput: [[0,0,0],[0,0,0]]\\n```\\n\\n:::\\n\\n<JSEditor run={false}>{solution17}</JSEditor>\\n\\n### 200. Number of Islands\\n\\n- Array\\n- Depth-First Search\\n\\nsrc: [https://leetcode.com/problems/number-of-islands](https://leetcode.com/problems/number-of-islands/)\\n\\n:::note\\n\\nGiven an `m x n` 2D binary grid grid which represents a map of `\'1\'`s (land) and `\'0\'`s (water), return the number of islands.\\n\\nAn **island** is surrounded by water and is formed by connecting adjacent lands **horizontally** or **vertically**. You may assume **all four edges** of the grid are all surrounded by water.\\n\\n:::\\n\\n#### Solution\\n\\n[https://leetcode.com/problems/number-of-islands/discuss/56340/Python-Simple-DFS-Solution](https://leetcode.com/problems/number-of-islands/discuss/56340/Python-Simple-DFS-Solution)\\n\\nIterate through each of the cell and if it is a land, do `DFS` to mark the all adjacent lands, then increment the counter by 1.\\n\\n```python\\ndef numIslands(self, grid):\\n    if not grid:\\n        return 0\\n\\n    count = 0\\n    for i in range(len(grid)):\\n        for j in range(len(grid[0])):\\n            if grid[i][j] == \'1\':\\n                self.dfs(grid, i, j)\\n                count += 1\\n    return count\\n\\ndef dfs(self, grid, i, j):\\n    if i<0 or j<0 or i>=len(grid) or j>=len(grid[0]) or grid[i][j] != \'1\':\\n        return\\n    grid[i][j] = \'#\' # mark/exclude the entire land, only count it once in the main loop\\n    self.dfs(grid, i+1, j)\\n    self.dfs(grid, i-1, j)\\n    self.dfs(grid, i, j+1)\\n    self.dfs(grid, i, j-1)\\n```\\n\\n<JSEditor run={false}>{solution18}</JSEditor>\\n\\n## Day 10 Dynamic Programming\\n\\n### 509. Fibonacci Number\\n\\nsrc: [https://leetcode.com/problems/fibonacci-number](https://leetcode.com/problems/fibonacci-number/)\\n\\n<JSEditor run={false}>{solution19}</JSEditor>\\n\\n### 70. Climbing Stairs\\n\\nsrc: [https://leetcode.com/problems/climbing-stairs](https://leetcode.com/problems/climbing-stairs/)\\n\\n```python\\ndef climbStairs(n):\\n    if n == 1:\\n        return 1\\n    if n == 2:\\n        return 2\\n    return climbStairs(n-1) + climbStairs(n-2)\\n```\\n\\n<JSEditor run={false}>{solution20}</JSEditor>\\n\\n## Day 11 Dynamic Programming\\n\\n<YouTubeVideo\\n  src=\\"https://www.youtube.com/embed/oBt53YbR9Kk\\"\\n  caption=\\"Dynamic Programming - Learn to Solve Algorithmic Problems\\"\\n/>\\n\\n### 746. Min Cost Climbing Stairs\\n\\nsrc: [https://leetcode.com/problems/min-cost-climbing-stairs](https://leetcode.com/problems/min-cost-climbing-stairs/)\\n\\n<JSEditor run={false}>{solution21}</JSEditor>\\n\\n### 62. Unique Paths\\n\\nsrc: [https://leetcode.com/problems/unique-paths](https://leetcode.com/problems/unique-paths/)\\n\\n<JSEditor run={false}>{solution22}</JSEditor>\\n\\n## Day 12 Sliding Window/Two Pointer\\n\\n### 438. Find All Anagrams in a String\\n\\nsrc: [https://leetcode.com/problems/find-all-anagrams-in-a-string](https://leetcode.com/problems/find-all-anagrams-in-a-string/)\\n\\nUse sliding window technique, which is inspired by this [https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/2052920/Clean-JavaScript](https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/2052920/Clean-JavaScript)\\n\\n<JSEditor run={false}>{solution23}</JSEditor>\\n\\n### 424. Longest Repeating Character Replacement\\n\\nsrc: [https://leetcode.com/problems/longest-repeating-character-replacement](https://leetcode.com/problems/longest-repeating-character-replacement/)\\n\\nInspired by this video: [https://www.youtube.com/watch?v=gqXU1UyA8pk](https://www.youtube.com/watch?v=gqXU1UyA8pk)\\n\\n<JSEditor run={false}>{solution24}</JSEditor>\\n\\n## Day 13 Hashmap\\n\\n### 299. Bulls and Cows\\n\\nsrc: [https://leetcode.com/problems/bulls-and-cows](https://leetcode.com/problems/bulls-and-cows)\\n\\nGiven the secret number `secret` and your friend\'s `guess`, return the **hint** for your friend\'s guess.\\n\\n- The number of \\"bulls\\", which are digits in the guess that are in the correct position.\\n- The number of \\"cows\\", which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.\\n\\n```\\nInput: secret = \\"1807\\", guess = \\"7810\\"\\nOutput: \\"1A3B\\"\\nExplanation: Bulls are connected with a \'|\' and cows are underlined:\\n\\"1807\\"\\n  |\\n\\"7810\\"\\n```\\n\\nFind the value of `bulls` and then find the value of `guess`.\\n\\n<JSEditor run={false}>{solution25}</JSEditor>\\n\\n## Day 14 Stack\\n\\n### 394. Decode String\\n\\nsrc: [https://leetcode.com/problems/decode-string](https://leetcode.com/problems/decode-string/)\\n\\nThe encoding rule is: `k[encoded_string]`, where the encoded_string inside the square brackets is being repeated exactly `k` times. Note that `k` is guaranteed to be a positive integer.\\n\\n[check for balanced brackets](https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/).\\n\\nInspired by NeetCode [https://www.youtube.com/watch?v=qB0zZpBJlh8](https://www.youtube.com/watch?v=qB0zZpBJlh8)\\n\\n:::note\\n\\n`\\"3[a2[c]]\\"`\\n\\nPush every `char` into the `stack` unless the `char` is `]`.\\n\\n- If `]` is found, process the content inside the brackets, and push the processed result to the stack.\\n\\n:::\\n\\n<JSEditor run={false}>{solution26}</JSEditor>\\n\\n## Day 15 Heap\\n\\n### 1046. Last Stone Weight\\n\\nYou are given an array of integers stones where ` stones[i]` is the weight of the `ith` stone.\\n\\nPick the **heaviest** two stones. Suppose the heaviest two stones have weights ` x`` and  `y`` with `x <= y``. The result of this smash is:\\n\\n- `x=y`, both stones are destroyed.\\n- `x<y`, the stone of weight `x` is destroyed, and the stone of weight `y` has a new weight `y-x`.\\n\\nAt the end of the game, there is at most one stone left. (could be zero stone left).\\n\\nReturn the weight of the last stone, if there are no stones left, return 0.\\n\\n:::note\\n\\n1. Push all elements into a max heap.\\n2. Pop the largest two stones, and do the smash.\\n3. Push the remaining stone after smashing into the max heap.\\n\\n:::\\n\\n<JSEditor run={false}>{solution28}</JSEditor>\\n\\n### 692. Top K Frequent Words\\n\\nGiven an array of strings words and an integer `k`, return the `k` most frequent strings.\\n\\nReturn the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.\\n\\n<JSEditor run={false}>{solution29}</JSEditor>"},{"id":"/2022/05/22/tablet-as-monitor","metadata":{"permalink":"/blog/2022/05/22/tablet-as-monitor","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/05-22-tablet-as-monitor/index.md","source":"@site/blog/2022/05-22-tablet-as-monitor/index.md","title":"Turn a Tablet Into a Secondary Monitor","description":"This blog shows how to turn a tablet into a secondary monitor/display on Windows.","date":"2022-05-22T00:00:00.000Z","formattedDate":"22 May 2022","tags":[{"label":"technology","permalink":"/blog/tags/technology"},{"label":"monitor","permalink":"/blog/tags/monitor"},{"label":"WebRTC","permalink":"/blog/tags/web-rtc"}],"readingTime":1.22,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Turn a Tablet Into a Secondary Monitor","authors":"xiaohai","tags":["technology","monitor","WebRTC"],"description":"This blog shows how to turn a tablet into a secondary monitor/display on Windows."},"unlisted":false,"prevItem":{"title":"LeetCode 75 Study Plan","permalink":"/blog/2022/07/09/leetcode-75"},"nextItem":{"title":"Zion Interview Round 3","permalink":"/blog/2022/05/18/zion-interview"}},"content":"This blog shows how to turn a tablet into a secondary monitor in just 2 steps.\\n\\nHere is what the final result would look like.\\n\\n![Final result](final-result.jpg)\\n\\n\x3c!-- truncate --\x3e\\n\\n## Step 1: Activate a Secondary Display\\n\\nCreate a virtual monitor.\\n\\nDownload the virtual display driver from [https://github.com/xiaohai-huang/resources/blob/master/xiaohai.wiki/blog-data/usbmmidd_v2.zip](https://github.com/xiaohai-huang/resources/blob/master/xiaohai.wiki/blog-data/usbmmidd_v2.zip)\\n\\nUse CMD to execute the following commands to create a virtual display. Note: Run as Administrator.\\n\\n```bash title=\\"install the virtual display driver\\"\\ndeviceinstaller64 install usbmmidd.inf usbmmidd\\n```\\n\\n```bash title=\\"activate a virtual monitor\\"\\ndeviceinstaller64 enableidd 1\\n```\\n\\n```bash title=\\"deactivate a virtual monitor\\"\\ndeviceinstaller64 enableidd 0\\n```\\n\\nAt this point, we should be able to see the secondary monitor that appears in the **Display Settings**.\\n\\n![Screenshot shows the secondary monitor exists in Display Settings](virtual-monitor.png)\\n\\n:::note\\n\\nTo completely remove the drivers from your system, run the following commands.\\n\\n```bash title=\\"remove the driver\\"\\ndeviceinstaller64 stop usbmmidd\\ndeviceinstaller64 remove usbmmid\\n```\\n\\n:::\\n\\n## Step2: Share the Secondary Display\\n\\nIn this step I will show you how to use **WebRTC** enabled web app to share the screen.\\n\\nNavigate to this website [https://screen.xiaohai-huang.net](https://screen.xiaohai-huang.net)\\n\\n- Tablet goes the the **Slave** page.\\n- PC goes to the **Master** page.\\n\\nIn the **Master** page, click the \\"share screen\\" button and share your secondary display.\\n\\n![Screenshot shows how to share the screen](share-screen.png)\\n\\n## References\\n\\n- [How To Create a Virtual Monitor - Windows [2022 New & Working - No Adapters/Hardware Needed]](https://www.youtube.com/watch?v=ybHKFZjSkVY)\\n- [Activating a Secondary Display on Windows 10 when no Monitor is Connected](https://www.amyuni.com/forum/viewtopic.php?t=3030)\\n- [screen-share app](https://github.com/xiaohai-huang/screen-share)"},{"id":"/2022/05/18/zion-interview","metadata":{"permalink":"/blog/2022/05/18/zion-interview","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/05-18-zion-interview/index.md","source":"@site/blog/2022/05-18-zion-interview/index.md","title":"Zion Interview Round 3","description":"- React virtual dom","date":"2022-05-18T00:00:00.000Z","formattedDate":"18 May 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":0.065,"hasTruncateMarker":false,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Zion Interview Round 3","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"prevItem":{"title":"Turn a Tablet Into a Secondary Monitor","permalink":"/blog/2022/05/22/tablet-as-monitor"},"nextItem":{"title":"ByteDance Shanghai Interview Failed 1","permalink":"/blog/2022/04/26/bytedance-interview-shanghai-failed-1"}},"content":"- React virtual dom\\n- Diff algorithm\\n- git merge vs git rebase"},{"id":"/2022/04/26/bytedance-interview-shanghai-failed-1","metadata":{"permalink":"/blog/2022/04/26/bytedance-interview-shanghai-failed-1","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/04-26-bytedance-interview-shanghai-failed-1/index.mdx","source":"@site/blog/2022/04-26-bytedance-interview-shanghai-failed-1/index.mdx","title":"ByteDance Shanghai Interview Failed 1","description":"1. Browser cache. - cookie.","date":"2022-04-26T00:00:00.000Z","formattedDate":"26 April 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":0.31,"hasTruncateMarker":false,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"ByteDance Shanghai Interview Failed 1","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"prevItem":{"title":"Zion Interview Round 3","permalink":"/blog/2022/05/18/zion-interview"},"nextItem":{"title":"ByteDance HangZhou Interview Failed 1","permalink":"/blog/2022/04/24/bytedance-interview-failed-1"}},"content":"1. Browser cache. - cookie.\\n2. Breadth-First Traversal and Depth First Traversal.\\n3. script tag. async and defer.\\n4. React Hook\\n\\n```js\\nvar obj = {\\n  a: 1,\\n  foo: function (b) {\\n    b = b || this.a;\\n    return function (c) {\\n      console.log(this.a);\\n      console.log(b);\\n      console.log(c);\\n    };\\n  },\\n};\\n\\nvar a = 2;\\nvar obj2 = { a: 3 };\\n\\nobj.foo(a).call(obj2, 1);\\nobj.foo.call(obj2)(1);\\n```"},{"id":"/2022/04/24/bytedance-interview-failed-1","metadata":{"permalink":"/blog/2022/04/24/bytedance-interview-failed-1","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/04-24-bytedance-interview-failed-1/index.md","source":"@site/blog/2022/04-24-bytedance-interview-failed-1/index.md","title":"ByteDance HangZhou Interview Failed 1","description":"1. Promise.all() vs Promise.race().","date":"2022-04-24T00:00:00.000Z","formattedDate":"24 April 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":0.235,"hasTruncateMarker":false,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"ByteDance HangZhou Interview Failed 1","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"prevItem":{"title":"ByteDance Shanghai Interview Failed 1","permalink":"/blog/2022/04/26/bytedance-interview-shanghai-failed-1"},"nextItem":{"title":"Self-Hosted typesense Service","permalink":"/blog/2022/03/26/migrate-search-to-typesense"}},"content":"1. `Promise.all()` vs `Promise.race()`.\\n2. Use CSS to draw a triangle.\\n3. HTTP1.1 vs HTTP2.0\\n4. DNS\\n5. `flex: 0 auto` or `flex: 1 auto`\\n6. CSS position.\\n7. What happen after typing www.google.com in your Browser?\\n8. prototype.\\n9. Determine if an object is an `Array`."},{"id":"/2022/03/26/migrate-search-to-typesense","metadata":{"permalink":"/blog/2022/03/26/migrate-search-to-typesense","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-26-migrate-search-to-typesense/index.md","source":"@site/blog/2022/03-26-migrate-search-to-typesense/index.md","title":"Self-Hosted typesense Service","description":"Self-host a typesense search server to perform document search for xiaohai.wiki.  This is an alternative to Algolia.","date":"2022-03-26T00:00:00.000Z","formattedDate":"26 March 2022","tags":[{"label":"Docker","permalink":"/blog/tags/docker"},{"label":"search engine","permalink":"/blog/tags/search-engine"}],"readingTime":1.275,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Self-Hosted typesense Service","authors":"xiaohai","tags":["Docker","search engine"],"description":"Self-host a typesense search server to perform document search for xiaohai.wiki.  This is an alternative to Algolia.","image":"https://typesense.org/_nuxt/img/typesense_logo.b12edde.svg"},"unlisted":false,"prevItem":{"title":"ByteDance HangZhou Interview Failed 1","permalink":"/blog/2022/04/24/bytedance-interview-failed-1"},"nextItem":{"title":"ByteDance Interview Round 3","permalink":"/blog/2022/03/24/bytedance-interview-round-3"}},"content":"[typesense](https://typesense.org/) is a open source Algolia alternative. This blog shows how to run a self-hosted `typesense` server on my own server.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Setup a `typesense` Server Using Docker\\n\\nRun the server with `docker-compose up`\\n\\n```yml title=\\"docker-compose.yml\\"\\nversion: \\"3.9\\"\\nservices:\\n  typesense:\\n    image: typesense/typesense:0.22.2\\n    environment:\\n      - TYPESENSE_DATA_DIR=/data\\n      - TYPESENSE_ENABLE_CORS=true\\n      - TYPESENSE_API_KEY=test-key\\n    ports:\\n      - \\"8108:8108\\"\\n    volumes:\\n      - /t-data:/data # /t-data is used to store search engine data\\n```\\n\\nsee \\"how to configure the server using [environment variables](https://typesense.org/docs/0.22.2/api/server-configuration.html#using-environment-variables)\\".\\n\\n## Crawl the Site\\n\\n1. Create a `docsearch-config.json` config file which contains the information about the document website.\\n\\n   1. [Download](https://github.com/algolia/docsearch-configs/blob/master/configs/docusaurus-2.json) config file.\\n   2. Update the `index_name` and domain name.\\n\\n2. Create a `.env` file which contains the information about the [typesense server](#setup-a-typesense-server-using-docker) created in the previous step.\\n\\n```bash title=\\".env\\"\\nTYPESENSE_API_KEY=test-key\\nTYPESENSE_HOST=xiaohai-huang.net\\nTYPESENSE_PORT=8108\\nTYPESENSE_PROTOCOL=http\\n```\\n\\n3. Run the scraper using Docker.\\n\\n```sh\\nCONFIG=\\"$(cat docsearch-config.json)\\" # Retrieved from step 1\\ndocker run -i --rm \\\\\\n        --env-file=$(pwd)/.env \\\\ # .env created at step 2\\n        -e CONFIG=\\"${CONFIG}\\" \\\\\\n        typesense/docsearch-scraper\\n```\\n\\n## Add `typesense` Search Bar\\n\\nInstall the package.\\n\\n```bash\\nyarn add docusaurus-theme-search-typesense@next\\n```\\n\\nAdd the following to `docusaurus.config.js` file:\\n\\n```js\\n{\\n  themes: [\'docusaurus-theme-search-typesense\'],\\n  themeConfig: {\\n    typesense: {\\n      typesenseCollectionName: \'xiaohai-mind-palace-index\', // the index_name in `docsearch-config.json`\\n\\n      typesenseServerConfig: {\\n        nodes: [ // typesense server info\\n          {\\n            host: \'xiaohai-huang.net\',\\n            port: 8108,\\n            protocol: \'http\',\\n          },\\n\\n        ],\\n        apiKey: \'test-key\', // TYPESENSE_API_KEY specified in docker-compose.yml\\n      },\\n\\n      // Optional: Typesense search parameters: https://typesense.org/docs/0.21.0/api/documents.md#search-parameters\\n      typesenseSearchParameters: {},\\n\\n      // Optional\\n      contextualSearch: true,\\n    },\\n  }\\n}\\n```\\n\\n## References\\n\\n- [Official Instructions](https://typesense.org/docs/guide/docsearch.html#step-1-set-up-docsearch-scraper)\\n- [Generate API keys for admin and user](https://typesense.org/docs/0.22.2/api/api-keys.html#create-an-api-key)\\n- [Add Search Bar](https://typesense.org/docs/guide/docsearch.html#option-a-docusaurus-powered-sites)"},{"id":"/2022/03/24/bytedance-interview-round-3","metadata":{"permalink":"/blog/2022/03/24/bytedance-interview-round-3","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-24-bytedance-interview-round-3/index.md","source":"@site/blog/2022/03-24-bytedance-interview-round-3/index.md","title":"ByteDance Interview Round 3","description":"When we are discussing about my projects. The interviewer asked the following questions:","date":"2022-03-24T00:00:00.000Z","formattedDate":"24 March 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":1.115,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"ByteDance Interview Round 3","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"prevItem":{"title":"Self-Hosted typesense Service","permalink":"/blog/2022/03/26/migrate-search-to-typesense"},"nextItem":{"title":"ByteDance Interview Round 2","permalink":"/blog/2022/03/17/bytedance-interview-round-2"}},"content":"When we are discussing about my projects. The interviewer asked the following questions:\\n\\n1. How do you achieve infinite play effect in a carousel?\\n2. Use JS to achieve `#id`\'s scroll to element effect.\\n3. CSS animation.\\n\\nAfter done talking my projects, I was asked a few questions about `Promise`, linked list, and heap sort, insertion sort.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Programming Questions\\n\\nPromisify `setTimeout`. Implement `wait(seconds).then(()=>{})`\\n\\n```js wait.js\\nfunction wait(seconds) {\\n  return new Promise((resolve) => {\\n    setTimeout(() => {\\n      resolve();\\n    }, seconds * 1000);\\n  });\\n}\\n\\nwait(3).then(() => {\\n  console.log(1);\\n});\\n```\\n\\nImplement a `timeout` function.\\n\\n```js timeout.js\\nfunction timeout(promise, seconds) {\\n  return new Promise((resolve, reject) => {\\n    const timer = setTimeout(() => {\\n      reject();\\n    }, seconds * 1000);\\n\\n    promise.then(() => {\\n      clearTimeout(timer);\\n      resolve();\\n    });\\n  });\\n}\\n\\ntimeout(wait(3), 4)\\n  .then(() => {\\n    console.log(\\"the p was completed within 4s\\");\\n  })\\n  .catch(() => {\\n    console.log(\\"the p execution time exceed 4s\\");\\n  });\\n```\\n\\nImplement a priority queue. This relates to `heap` data structure.\\n\\n```js\\nclass PQ {\\n  push() {}\\n  pop() {}\\n}\\n```\\n\\n## Feedback\\n\\n\u623f\u4ea7-app H5 \u9875\u9762\uff0c\u4e2d\u540e\u53f0\\n\\n\u623f\u4ea7\u4ea4\u6613\\n\u5bb6\u5177\\n\\nsort\\n\u573a\u666f\uff0c\u904d\u5386\u5bf9\u8c61\uff0c\u590d\u6742\u6570\u636e\u7ed3\u6784 \u83b7\u53d6\u6570\u636e\\n\\n\u591a\u5b9e\u8df5\\n\\nheap sort\\n\\n\u8f6e\u64ad\uff0c\u6eda\u52a8\uff0c\u591a\u603b\u7ed3\\n\\n\u91cd\u65b0\u5b9e\u73b0\u7ec4\u4ef6"},{"id":"/2022/03/17/bytedance-interview-round-2","metadata":{"permalink":"/blog/2022/03/17/bytedance-interview-round-2","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-17-bytedance-interview-round-2/index.md","source":"@site/blog/2022/03-17-bytedance-interview-round-2/index.md","title":"ByteDance Interview Round 2","description":"- React fiber","date":"2022-03-17T00:00:00.000Z","formattedDate":"17 March 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"interview","permalink":"/blog/tags/interview"}],"readingTime":1.51,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"ByteDance Interview Round 2","authors":"xiaohai","tags":["study","interview"]},"unlisted":false,"prevItem":{"title":"ByteDance Interview Round 3","permalink":"/blog/2022/03/24/bytedance-interview-round-3"},"nextItem":{"title":"How to Use git stash?","permalink":"/blog/2022/03/16/git-stash"}},"content":"- **React fiber**\\n- Event loop\\n  - why do we need two **task queues**? (priority)\\n- CSS animation vs. JS animation\\n- Some questions about CSS animation\\n- How Does JS Achieve Async?\\n- CSS Grid\\n- CSS Float\\n- Depth First Search\\n- Prototype\\n\\n\x3c!-- truncate --\x3e\\n\\n## Coding Questions\\n\\n```js title=\\"event loop question\\"\\nasync function async1() {\\n  console.log(\\"async1 start\\");\\n  await async2();\\n  console.log(\\"async1 end\\");\\n}\\n\\nasync function async2() {\\n  console.log(\\"async2\\");\\n}\\n\\nconsole.log(\\"script start\\");\\n\\nsetTimeout(function () {\\n  console.log(\\"setTimeout\\");\\n}, 0);\\n\\nasync1();\\n\\nnew Promise(function (resolve) {\\n  console.log(\\"promise1\\");\\n  resolve();\\n}).then(function () {\\n  console.log(\\"promise2\\");\\n});\\n\\nconsole.log(\\"script end\\");\\n```\\n\\n```js title=\\"prototype question\\"\\nfunction Foo() {\\n  try {\\n    console.log(this);\\n    console.log(\\"\u5185\u90e81\\", this.a());\\n  } catch (e) {}\\n\\n  this.a = function () {\\n    console.log(\\"\u5185\u90e82\\", 1);\\n  };\\n\\n  Foo.a = function () {\\n    console.log(\\"\u5185\u90e83\\", 2);\\n  };\\n  return Foo;\\n}\\n\\nFoo.a = function () {\\n  console.log(\\"\u5916\u90e8\\", 4);\\n};\\nFoo.prototype.a = function () {\\n  console.log(\\"\u5916\u90e85\\", 5);\\n};\\n\\nFoo.a();\\n\\nconst obj = new Foo();\\n\\nobj.a();\\nFoo.a();\\n```\\n\\n```bash title=\\"Algorithm\\"\\n\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5e8f\u5217 nums \uff0c\u6309\u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u6240\u6709\u4e0d\u91cd\u590d\u7684\u5168\u6392\u5217\u3002\\n\u5168\u6392\u5217\uff1a\u4ece n \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u4efb\u53d6 m\uff08m\u2264n\uff09\u4e2a\u5143\u7d20\uff0c\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6392\u5217\u8d77\u6765\uff0c\\n\u53eb\u505a\u4ece n \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa m \u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\u3002\u5f53 m=n \u65f6\u6240\u6709\u7684\u6392\u5217\u60c5\u51b5\u53eb\u5168\u6392\u5217\u3002\\n\\n\u793a\u4f8b 1:\\n\u8f93\u5165\uff1anums = [1,2]\\n\u8f93\u51fa\uff1a\\n[[1,2],\\n [2,1]]\\n\u793a\u4f8b 2:\\n\u8f93\u5165\uff1anums = [1,1,2]\\n\u8f93\u51fa\uff1a\\n[[1,1,2],\\n [1,2,1],\\n [2,1,1]]\\n\u793a\u4f8b 3:\\n\u8f93\u5165\uff1anums = [1,2,3]\\n\u8f93\u51fa\uff1a[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\\n```"},{"id":"/2022/03/16/git-stash","metadata":{"permalink":"/blog/2022/03/16/git-stash","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-16-git-stash/index.md","source":"@site/blog/2022/03-16-git-stash/index.md","title":"How to Use git stash?","description":"git stash with a stash name.","date":"2022-03-16T00:00:00.000Z","formattedDate":"16 March 2022","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"git","permalink":"/blog/tags/git"}],"readingTime":0.47,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"How to Use git stash?","authors":"xiaohai","tags":["study","git"]},"unlisted":false,"prevItem":{"title":"ByteDance Interview Round 2","permalink":"/blog/2022/03/17/bytedance-interview-round-2"},"nextItem":{"title":"Useful Learning Resources","permalink":"/blog/2022/03/04/useful-resources"}},"content":"git stash with a stash name.\\n\\n```bash\\ngit stash push -m \\"stash_name\\"\\n```\\n\\nstash untracked files\\n\\n```bash\\ngit stash push -u -m \\"stash_name\\"\\ngit stash push --include-untracked -m \\"stash_name\\"\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\nshow stash list\\n\\n```bash\\nxiaohai@DESKTOP-CO17DMM:~/projects/learning-notes$ git stash list\\nstash@{0}: On search-engine-week1: search-engine-notes\\nstash@{1}: On AI-week1: AI-week1-stash\\n```\\n\\napply stash through index\\n\\n```bash\\ngit stash apply stash@{1}\\n```\\n\\ndelete a stash\\n\\n```bash\\ngit stash drop            # drop top hash, stash@{0}\\ngit stash drop stash@{n}  # drop specific stash - see git stash list\\n```\\n\\n## References\\n\\n- [stack overflow](https://stackoverflow.com/a/49559472)\\n- [official document](https://git-scm.com/docs/git-stash)"},{"id":"/2022/03/04/useful-resources","metadata":{"permalink":"/blog/2022/03/04/useful-resources","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-04-useful-resources/index.mdx","source":"@site/blog/2022/03-04-useful-resources/index.mdx","title":"Useful Learning Resources","description":"- Staology","date":"2022-03-04T00:00:00.000Z","formattedDate":"4 March 2022","tags":[{"label":"study","permalink":"/blog/tags/study"}],"readingTime":0.195,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Useful Learning Resources","authors":"xiaohai","tags":["study"]},"unlisted":false,"prevItem":{"title":"How to Use git stash?","permalink":"/blog/2022/03/16/git-stash"},"nextItem":{"title":"CMD vs ENTRYPOINT","permalink":"/blog/2022/03/03/cmd-vs-entrypoint"}},"content":"import ShowcaseCard from \\"@src/pages/showcase/_components/ShowcaseCard\\";\\nimport { data } from \\"./_data.tsx\\";\\n\\n- [Staology](https://www.statology.org)\\n- [Learn Git Branching](https://learngitbranching.js.org)\\n\\n\x3c!-- truncate --\x3e\\n\\n<div class=\\"container\\">\\n  <div class=\\"row\\">\\n    {data.map((item, i) => (\\n      <div key={i} class=\\"col col--6 margin-bottom--md\\">\\n        <ShowcaseCard {...item} />\\n      </div>\\n    ))}\\n  </div>\\n</div>"},{"id":"/2022/03/03/cmd-vs-entrypoint","metadata":{"permalink":"/blog/2022/03/03/cmd-vs-entrypoint","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/03-03-cmd-vs-entrypoint/index.md","source":"@site/blog/2022/03-03-cmd-vs-entrypoint/index.md","title":"CMD vs ENTRYPOINT","description":"The ENTRYPOINT specifies a command that will always be executed when the container starts.","date":"2022-03-03T00:00:00.000Z","formattedDate":"3 March 2022","tags":[{"label":"Docker","permalink":"/blog/tags/docker"}],"readingTime":1.565,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"CMD vs ENTRYPOINT","authors":"xiaohai","tags":["Docker"]},"unlisted":false,"prevItem":{"title":"Useful Learning Resources","permalink":"/blog/2022/03/04/useful-resources"},"nextItem":{"title":"How to Setup a OpenVPN Server?","permalink":"/blog/2022/02/04/how-to-setup-an-openvpn-server"}},"content":"> The ENTRYPOINT specifies a command that will always be executed when the container starts.\\n>\\n> The CMD specifies arguments that will be fed to the ENTRYPOINT.\\n\\n- `ENTRYPOINT` can also be overridden using `--entrypoint` flag\\n- `CMD` will be overridden when running the container with alternative arguments (e.g. `bash`).\\n\\n\x3c!-- truncate --\x3e\\n\\n## ping example\\n\\n```dockerfile title=\\"Dockerfile\\"\\nFROM debian:wheezy\\nENTRYPOINT [\\"/bin/ping\\"]\\nCMD [\\"localhost\\"]\\n```\\n\\nRunning the image without any argument will ping the `localhost`\\n\\n```bash\\n$ docker run -it ping-image\\nPING localhost (127.0.0.1): 48 data bytes\\n56 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.096 ms\\n56 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.088 ms\\n56 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.088 ms\\n^C--- localhost ping statistics ---\\n3 packets transmitted, 3 packets received, 0% packet loss\\nround-trip min/avg/max/stddev = 0.088/0.091/0.096/0.000 ms\\n```\\n\\nRunning the image with an argument will ping the argument\\n\\n```bash\\n$ docker run -it test google.com\\nPING google.com (173.194.45.70): 48 data bytes\\n56 bytes from 173.194.45.70: icmp_seq=0 ttl=55 time=32.583 ms\\n56 bytes from 173.194.45.70: icmp_seq=2 ttl=55 time=30.327 ms\\n56 bytes from 173.194.45.70: icmp_seq=4 ttl=55 time=46.379 ms\\n^C--- google.com ping statistics ---\\n5 packets transmitted, 3 packets received, 40% packet loss\\nround-trip min/avg/max/stddev = 30.327/36.430/46.379/7.095 ms\\n```\\n\\n:::info\\n\\nDocker has a default entrypoint which is `/bin/sh -c`\\n\\n:::\\n\\nIf the Dockerfile is:\\n\\n```dockerfile title=\\"Dockerfile\\"\\nFROM debian:wheezy\\nCMD [\\"/bin/ping\\", \\"localhost\\"]\\n```\\n\\nRunning the image without any argument will ping `localhost`\\n\\n```bash\\n$ docker run -it ping-image\\nPING localhost (127.0.0.1): 48 data bytes\\n56 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.096 ms\\n56 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.088 ms\\n56 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.088 ms\\n^C--- localhost ping statistics ---\\n3 packets transmitted, 3 packets received, 0% packet loss\\nround-trip min/avg/max/stddev = 0.088/0.091/0.096/0.000 ms\\n```\\n\\nRunning the image with argument will run the argument, the\\n\\n```bash\\ndocker run -it test bash\\nroot@e8bb7249b843:/#\\n```\\n\\nReferences:\\n\\n- [Stackoverflow answer](https://stackoverflow.com/a/34245657)\\n- [CMD vs ENTRYPOINT](https://www.ctl.io/developers/blog/post/dockerfile-entrypoint-vs-cmd/)"},{"id":"/2022/02/04/how-to-setup-an-openvpn-server","metadata":{"permalink":"/blog/2022/02/04/how-to-setup-an-openvpn-server","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/02-04-how-to-setup-an-openvpn-server/index.md","source":"@site/blog/2022/02-04-how-to-setup-an-openvpn-server/index.md","title":"How to Setup a OpenVPN Server?","description":"Setup a OpenVPN server using Docker in just one command.","date":"2022-02-04T00:00:00.000Z","formattedDate":"4 February 2022","tags":[{"label":"Docker","permalink":"/blog/tags/docker"},{"label":"VPN","permalink":"/blog/tags/vpn"}],"readingTime":0.725,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"How to Setup a OpenVPN Server?","authors":"xiaohai","tags":["Docker","VPN"],"image":"https://developers.redhat.com/sites/default/files/styles/article_feature/public/blog/2014/05/homepage-docker-logo.png?itok=zx0e-vcP","description":"Setup a OpenVPN server using Docker in just one command."},"unlisted":false,"prevItem":{"title":"CMD vs ENTRYPOINT","permalink":"/blog/2022/03/03/cmd-vs-entrypoint"},"nextItem":{"title":"Xiaohai\'s First Blog Post","permalink":"/blog/2022/01/20/first-blog"}},"content":"Just a simple command\\n\\n```bash\\ndocker run -itd --restart always --cap-add=NET_ADMIN \\\\\\n           -p 1194:1194/udp -p 7070:8080/tcp \\\\\\n           -e HOST_ADDR=$(curl -s https://api.ipify.org) \\\\\\n           -v openvpn_conf:/opt/Dockovpn_data \\\\\\n           --name dockovpn alekslitvinenk/openvpn\\n```\\n\\nThen download the config file from the `http://<public-ip>:7070` and then import the config file (`client.ovpn`) to the [vpn client](https://openvpn.net/vpn-client/).\\n\\nClients:\\n\\n- [Windows](https://6669-first-cloudbase-env-5c619520c1a6-1255762420.tcb.qcloud.la/mind-storage/openvpn-connect-windows.msi)\\n- [Android](https://6669-first-cloudbase-env-5c619520c1a6-1255762420.tcb.qcloud.la/mind-storage/oepnvpn-android.apk)\\n\\n\x3c!-- truncate --\x3e\\n\\n## How to Backup VPN Data\\n\\nThe **VPN** container uses **named volume** to store configuration data.\\nSo we can use the `volume-backup` utility to backup data. [https://github.com/loomchild/volume-backup](https://github.com/loomchild/volume-backup).\\n\\n1. **Backup**. The following command will store the vpn data in `\\"$(pwd)/vpn_config_data.tar.bz2\\"`.\\n\\n```bash title=\\"backup.sh\\"\\ndocker run -v openvpn_conf:/volume \\\\\\n           -v $(pwd):/backup --rm \\\\\\n           loomchild/volume-backup backup vpn_config_data.tar.bz2\\n```\\n\\n2. **Restore**. The following command will use `\\"$(pwd)/vpn_config_data.tar.bz2\\"` to populate and override the volume named `openvpn_conf`.\\n\\n```bash title=\\"restore.sh\\"\\ndocker run -v openvpn_conf:/volume \\\\\\n           -v $(pwd):/backup --rm \\\\\\n           loomchild/volume-backup restore -f vpn_config_data # without extension\\n```"},{"id":"/2022/01/20/first-blog","metadata":{"permalink":"/blog/2022/01/20/first-blog","editUrl":"https://github.com/xiaohai-huang/learning-notes/tree/master/blog/2022/01-20-first-blog/index.md","source":"@site/blog/2022/01-20-first-blog/index.md","title":"Xiaohai\'s First Blog Post","description":"This is my first blog written in CodeSandbox.","date":"2022-01-20T00:00:00.000Z","formattedDate":"20 January 2022","tags":[{"label":"other","permalink":"/blog/tags/other"}],"readingTime":0.37,"hasTruncateMarker":true,"authors":[{"name":"Xiaohai Huang","title":"CS Student","url":"http://github.com/xiaohai-huang","imageURL":"https://github.com/xiaohai-huang.png","key":"xiaohai"}],"frontMatter":{"title":"Xiaohai\'s First Blog Post","authors":"xiaohai","tags":["other"]},"unlisted":false,"prevItem":{"title":"How to Setup a OpenVPN Server?","permalink":"/blog/2022/02/04/how-to-setup-an-openvpn-server"}},"content":"This is my first blog written in CodeSandbox.  \\nI like this app very much. I would enjoying using it to document my study. With this app, I can read notes on both my phone and laptop. In short, it provides a very nice user experience. Now, I am going to finish this commit and deploy the app to [vercel](https://vercel.app).\\n![vercel deployment](vercel-deployment.png)\\n\\n\x3c!-- truncate --\x3e\\n\\n```bash\\ngit add .\\ngit commit -m \\"Intial commit\\"\\n```"}]}')}}]);